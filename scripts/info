#!/usr/bin/env node
const debug = require('debug');
const log = debug('@pie-element:scripts:info');
const { processFix, watch } = require('@pie-framework/build-helper');
const argv = require('minimist')(process.argv.slice(2));
const fs = require('fs-extra');
const path = require('path');
const spawn = require('child_process').spawn;

let processes;
let info;

processFix(log, () => {
  if (processes) {
    log('exit processes...');
    processes.exit();
  }

  if (info) {
    log('kill info...');
    info.kill();
  }
  log('process exit');
  process.exit();
});

log('pkg: ', argv._[0]);
const pkg = argv._[0];

const getWatchesForPie = async (p) => {
  const out = [];
  if (await fs.exists(`packages/${p}/src`)) {
    out.push({
      src: `packages/${p}/src`,
      target: `packages/${p}/lib`,
    });
  }

  if (await fs.exists(`packages/${p}/configure/src`)) {
    out.push({
      src: `packages/${p}/configure/src`,
      target: `packages/${p}/configure/lib`,
    });
  }
  if (await fs.exists(`packages/${p}/controller/src`)) {
    out.push({
      src: `packages/${p}/controller/src`,
      target: `packages/${p}/controller/lib`,
    });
  }

  return out;
};

const run = async () => {
  const watches = await getWatchesForPie(pkg);
  processes = watch(watches);
  const piePath = path.resolve('./node_modules/.bin/pie');
  info = spawn(piePath, ['info'], {
    cwd: `packages/${pkg}`,
    stdio: 'inherit',
  });
};

run();
