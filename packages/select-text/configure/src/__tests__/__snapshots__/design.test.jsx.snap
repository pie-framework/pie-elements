// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`design snapshot renders all items except feedback 1`] = `
<ConfigLayout
  dimensions={Object {}}
  settings={
    <Panel
      configuration={
        Object {
          "baseInputConfiguration": Object {
            "audio": Object {
              "disabled": false,
            },
            "image": Object {
              "disabled": false,
            },
            "video": Object {
              "disabled": false,
            },
          },
          "correctAnswer": Object {
            "label": "Correct Answers",
            "settings": true,
          },
          "feedback": Object {
            "label": "Feedback",
            "settings": false,
          },
          "highlightChoices": Object {
            "label": "Highlight choices",
            "settings": true,
          },
          "language": Object {
            "enabled": false,
            "label": "Specify Language",
            "settings": false,
          },
          "languageChoices": Object {
            "label": "Language Choices",
            "options": Array [],
          },
          "mathMlOptions": Object {
            "mmlEditing": false,
            "mmlOutput": false,
          },
          "maxImageHeight": Object {
            "prompt": 300,
            "rationale": 300,
            "teacherInstructions": 300,
          },
          "maxImageWidth": Object {
            "prompt": 300,
            "rationale": 300,
            "teacherInstructions": 300,
          },
          "minTokens": 2,
          "mode": Object {
            "label": "Mode",
            "settings": true,
          },
          "partialScoring": Object {
            "label": "Allow Partial Scoring",
            "settings": false,
          },
          "prompt": Object {
            "inputConfiguration": Object {
              "audio": Object {
                "disabled": false,
              },
              "image": Object {
                "disabled": false,
              },
              "video": Object {
                "disabled": false,
              },
            },
            "label": "Prompt",
            "settings": true,
          },
          "rationale": Object {
            "inputConfiguration": Object {
              "audio": Object {
                "disabled": false,
              },
              "image": Object {
                "disabled": false,
              },
              "video": Object {
                "disabled": false,
              },
            },
            "label": "Rationale",
            "settings": true,
          },
          "scoringType": Object {
            "label": "Scoring Type",
            "settings": false,
          },
          "selectionCount": Object {
            "label": "Selection count",
            "settings": true,
          },
          "selections": Object {
            "label": "Selections Available",
            "settings": true,
          },
          "spellCheck": Object {
            "enabled": true,
            "label": "Spellcheck",
            "settings": false,
          },
          "studentInstructions": Object {
            "label": "Student Instructions",
            "settings": false,
          },
          "teacherInstructions": Object {
            "inputConfiguration": Object {
              "audio": Object {
                "disabled": false,
              },
              "image": Object {
                "disabled": false,
              },
              "video": Object {
                "disabled": false,
              },
            },
            "label": "Teacher Instructions",
            "settings": true,
          },
          "text": Object {
            "label": "Content",
            "settings": true,
          },
          "tokens": Object {
            "label": "Tokens",
            "settings": true,
          },
          "withRubric": Object {
            "label": "Add Rubric",
            "settings": false,
          },
        }
      }
      groups={
        Object {
          "Properties": Object {
            "promptEnabled": undefined,
            "rationaleEnabled": undefined,
            "rubricEnabled": false,
            "scoringType": false,
            "spellCheckEnabled": false,
            "studentInstructionsEnabled": false,
            "teacherInstructionsEnabled": undefined,
          },
          "Settings": Object {
            "feedbackEnabled": false,
            "highlightChoices": undefined,
            "language": false,
            "language.enabled": false,
            "partialScoring": false,
          },
        }
      }
      model={
        Object {
          "tokens": Array [],
        }
      }
      onChangeModel={[Function]}
    />
  }
>
  <Component
    label="Content"
  >
    <TextField
      defaultValue=""
      multiline={true}
      onChange={[Function]}
      required={false}
      select={false}
      variant="standard"
    />
  </Component>
  <Component
    label="Tokens"
  >
    <WithStyles(Tooltip)
      classes={
        Object {
          "tooltip": undefined,
        }
      }
      disableFocusListener={true}
      disableTouchListener={true}
      placement="right"
      title="Validation requirements:
There should be at least 2 tokens defined.
There should be at least 1 token selected."
    >
      <pure(InfoIcon)
        color="primary"
        fontSize="small"
        style={
          Object {
            "left": "48px",
            "position": "absolute",
            "top": "-3px",
          }
        }
      />
    </WithStyles(Tooltip)>
    <WithStyles(Tokenizer)
      onChange={[Function]}
      tokens={Array []}
    />
  </Component>
  <div>
    <WithStyles(Chip)
      label="Mode: None"
    />
    <WithStyles(Chip)
      label="Selections Available: 0"
    />
    <WithStyles(Chip)
      label="Correct Answers: 0"
    />
    <Component
      label="Selection count (0:any)"
      max={0}
      min={0}
      onChange={[Function]}
    />
  </div>
</ConfigLayout>
`;

exports[`design snapshot renders all items except the content input 1`] = `
<ConfigLayout
  dimensions={Object {}}
  settings={
    <Panel
      configuration={
        Object {
          "baseInputConfiguration": Object {
            "audio": Object {
              "disabled": false,
            },
            "image": Object {
              "disabled": false,
            },
            "video": Object {
              "disabled": false,
            },
          },
          "correctAnswer": Object {
            "label": "Correct Answers",
            "settings": true,
          },
          "feedback": Object {
            "label": "Feedback",
            "settings": false,
          },
          "highlightChoices": Object {
            "label": "Highlight choices",
            "settings": true,
          },
          "language": Object {
            "enabled": false,
            "label": "Specify Language",
            "settings": false,
          },
          "languageChoices": Object {
            "label": "Language Choices",
            "options": Array [],
          },
          "mathMlOptions": Object {
            "mmlEditing": false,
            "mmlOutput": false,
          },
          "maxImageHeight": Object {
            "prompt": 300,
            "rationale": 300,
            "teacherInstructions": 300,
          },
          "maxImageWidth": Object {
            "prompt": 300,
            "rationale": 300,
            "teacherInstructions": 300,
          },
          "minTokens": 2,
          "mode": Object {
            "label": "Mode",
            "settings": true,
          },
          "partialScoring": Object {
            "label": "Allow Partial Scoring",
            "settings": false,
          },
          "prompt": Object {
            "inputConfiguration": Object {
              "audio": Object {
                "disabled": false,
              },
              "image": Object {
                "disabled": false,
              },
              "video": Object {
                "disabled": false,
              },
            },
            "label": "Prompt",
            "settings": true,
          },
          "rationale": Object {
            "inputConfiguration": Object {
              "audio": Object {
                "disabled": false,
              },
              "image": Object {
                "disabled": false,
              },
              "video": Object {
                "disabled": false,
              },
            },
            "label": "Rationale",
            "settings": true,
          },
          "scoringType": Object {
            "label": "Scoring Type",
            "settings": false,
          },
          "selectionCount": Object {
            "label": "Selection count",
            "settings": true,
          },
          "selections": Object {
            "label": "Selections Available",
            "settings": true,
          },
          "spellCheck": Object {
            "enabled": true,
            "label": "Spellcheck",
            "settings": false,
          },
          "studentInstructions": Object {
            "label": "Student Instructions",
            "settings": false,
          },
          "teacherInstructions": Object {
            "inputConfiguration": Object {
              "audio": Object {
                "disabled": false,
              },
              "image": Object {
                "disabled": false,
              },
              "video": Object {
                "disabled": false,
              },
            },
            "label": "Teacher Instructions",
            "settings": true,
          },
          "text": Object {
            "label": "Content",
            "settings": false,
          },
          "tokens": Object {
            "label": "Tokens",
            "settings": true,
          },
          "withRubric": Object {
            "label": "Add Rubric",
            "settings": false,
          },
        }
      }
      groups={
        Object {
          "Properties": Object {
            "promptEnabled": undefined,
            "rationaleEnabled": undefined,
            "rubricEnabled": false,
            "scoringType": false,
            "spellCheckEnabled": false,
            "studentInstructionsEnabled": false,
            "teacherInstructionsEnabled": undefined,
          },
          "Settings": Object {
            "feedbackEnabled": false,
            "highlightChoices": undefined,
            "language": false,
            "language.enabled": false,
            "partialScoring": false,
          },
        }
      }
      model={
        Object {
          "tokens": Array [],
        }
      }
      onChangeModel={[Function]}
    />
  }
>
  <Component
    label="Tokens"
  >
    <WithStyles(Tooltip)
      classes={
        Object {
          "tooltip": undefined,
        }
      }
      disableFocusListener={true}
      disableTouchListener={true}
      placement="right"
      title="Validation requirements:
There should be at least 2 tokens defined.
There should be at least 1 token selected."
    >
      <pure(InfoIcon)
        color="primary"
        fontSize="small"
        style={
          Object {
            "left": "48px",
            "position": "absolute",
            "top": "-3px",
          }
        }
      />
    </WithStyles(Tooltip)>
    <WithStyles(Tokenizer)
      onChange={[Function]}
      tokens={Array []}
    />
  </Component>
  <div>
    <WithStyles(Chip)
      label="Mode: None"
    />
    <WithStyles(Chip)
      label="Selections Available: 0"
    />
    <WithStyles(Chip)
      label="Correct Answers: 0"
    />
    <Component
      label="Selection count (0:any)"
      max={0}
      min={0}
      onChange={[Function]}
    />
  </div>
</ConfigLayout>
`;

exports[`design snapshot renders all items with defaultProps 1`] = `
<ConfigLayout
  dimensions={Object {}}
  settings={
    <Panel
      configuration={
        Object {
          "baseInputConfiguration": Object {
            "audio": Object {
              "disabled": false,
            },
            "image": Object {
              "disabled": false,
            },
            "video": Object {
              "disabled": false,
            },
          },
          "correctAnswer": Object {
            "label": "Correct Answers",
            "settings": true,
          },
          "feedback": Object {
            "label": "Feedback",
            "settings": true,
          },
          "highlightChoices": Object {
            "label": "Highlight choices",
            "settings": true,
          },
          "language": Object {
            "enabled": false,
            "label": "Specify Language",
            "settings": false,
          },
          "languageChoices": Object {
            "label": "Language Choices",
            "options": Array [],
          },
          "mathMlOptions": Object {
            "mmlEditing": false,
            "mmlOutput": false,
          },
          "maxImageHeight": Object {
            "prompt": 300,
            "rationale": 300,
            "teacherInstructions": 300,
          },
          "maxImageWidth": Object {
            "prompt": 300,
            "rationale": 300,
            "teacherInstructions": 300,
          },
          "minTokens": 2,
          "mode": Object {
            "label": "Mode",
            "settings": true,
          },
          "partialScoring": Object {
            "label": "Allow Partial Scoring",
            "settings": false,
          },
          "prompt": Object {
            "inputConfiguration": Object {
              "audio": Object {
                "disabled": false,
              },
              "image": Object {
                "disabled": false,
              },
              "video": Object {
                "disabled": false,
              },
            },
            "label": "Prompt",
            "settings": true,
          },
          "rationale": Object {
            "inputConfiguration": Object {
              "audio": Object {
                "disabled": false,
              },
              "image": Object {
                "disabled": false,
              },
              "video": Object {
                "disabled": false,
              },
            },
            "label": "Rationale",
            "settings": true,
          },
          "scoringType": Object {
            "label": "Scoring Type",
            "settings": false,
          },
          "selectionCount": Object {
            "label": "Selection count",
            "settings": true,
          },
          "selections": Object {
            "label": "Selections Available",
            "settings": true,
          },
          "spellCheck": Object {
            "enabled": true,
            "label": "Spellcheck",
            "settings": false,
          },
          "studentInstructions": Object {
            "label": "Student Instructions",
            "settings": false,
          },
          "teacherInstructions": Object {
            "inputConfiguration": Object {
              "audio": Object {
                "disabled": false,
              },
              "image": Object {
                "disabled": false,
              },
              "video": Object {
                "disabled": false,
              },
            },
            "label": "Teacher Instructions",
            "settings": true,
          },
          "text": Object {
            "label": "Content",
            "settings": true,
          },
          "tokens": Object {
            "label": "Tokens",
            "settings": true,
          },
          "withRubric": Object {
            "label": "Add Rubric",
            "settings": false,
          },
        }
      }
      groups={
        Object {
          "Properties": Object {
            "promptEnabled": undefined,
            "rationaleEnabled": undefined,
            "rubricEnabled": false,
            "scoringType": false,
            "spellCheckEnabled": false,
            "studentInstructionsEnabled": false,
            "teacherInstructionsEnabled": undefined,
          },
          "Settings": Object {
            "feedbackEnabled": undefined,
            "highlightChoices": undefined,
            "language": false,
            "language.enabled": false,
            "partialScoring": false,
          },
        }
      }
      model={
        Object {
          "tokens": Array [],
        }
      }
      onChangeModel={[Function]}
    />
  }
>
  <Component
    label="Content"
  >
    <TextField
      defaultValue=""
      multiline={true}
      onChange={[Function]}
      required={false}
      select={false}
      variant="standard"
    />
  </Component>
  <Component
    label="Tokens"
  >
    <WithStyles(Tooltip)
      classes={
        Object {
          "tooltip": undefined,
        }
      }
      disableFocusListener={true}
      disableTouchListener={true}
      placement="right"
      title="Validation requirements:
There should be at least 2 tokens defined.
There should be at least 1 token selected."
    >
      <pure(InfoIcon)
        color="primary"
        fontSize="small"
        style={
          Object {
            "left": "48px",
            "position": "absolute",
            "top": "-3px",
          }
        }
      />
    </WithStyles(Tooltip)>
    <WithStyles(Tokenizer)
      onChange={[Function]}
      tokens={Array []}
    />
  </Component>
  <div>
    <WithStyles(Chip)
      label="Mode: None"
    />
    <WithStyles(Chip)
      label="Selections Available: 0"
    />
    <WithStyles(Chip)
      label="Correct Answers: 0"
    />
    <Component
      label="Selection count (0:any)"
      max={0}
      min={0}
      onChange={[Function]}
    />
  </div>
</ConfigLayout>
`;

exports[`design snapshot tokenizer renders with html entities 1`] = `
<ConfigLayout
  dimensions={Object {}}
  settings={
    <Panel
      configuration={
        Object {
          "baseInputConfiguration": Object {
            "audio": Object {
              "disabled": false,
            },
            "image": Object {
              "disabled": false,
            },
            "video": Object {
              "disabled": false,
            },
          },
          "correctAnswer": Object {
            "label": "Correct Answers",
            "settings": true,
          },
          "feedback": Object {
            "label": "Feedback",
            "settings": true,
          },
          "highlightChoices": Object {
            "label": "Highlight choices",
            "settings": true,
          },
          "language": Object {
            "enabled": false,
            "label": "Specify Language",
            "settings": false,
          },
          "languageChoices": Object {
            "label": "Language Choices",
            "options": Array [],
          },
          "mathMlOptions": Object {
            "mmlEditing": false,
            "mmlOutput": false,
          },
          "maxImageHeight": Object {
            "prompt": 300,
            "rationale": 300,
            "teacherInstructions": 300,
          },
          "maxImageWidth": Object {
            "prompt": 300,
            "rationale": 300,
            "teacherInstructions": 300,
          },
          "minTokens": 2,
          "mode": Object {
            "label": "Mode",
            "settings": true,
          },
          "partialScoring": Object {
            "label": "Allow Partial Scoring",
            "settings": false,
          },
          "prompt": Object {
            "inputConfiguration": Object {
              "audio": Object {
                "disabled": false,
              },
              "image": Object {
                "disabled": false,
              },
              "video": Object {
                "disabled": false,
              },
            },
            "label": "Prompt",
            "settings": true,
          },
          "rationale": Object {
            "inputConfiguration": Object {
              "audio": Object {
                "disabled": false,
              },
              "image": Object {
                "disabled": false,
              },
              "video": Object {
                "disabled": false,
              },
            },
            "label": "Rationale",
            "settings": true,
          },
          "scoringType": Object {
            "label": "Scoring Type",
            "settings": false,
          },
          "selectionCount": Object {
            "label": "Selection count",
            "settings": true,
          },
          "selections": Object {
            "label": "Selections Available",
            "settings": true,
          },
          "spellCheck": Object {
            "enabled": true,
            "label": "Spellcheck",
            "settings": false,
          },
          "studentInstructions": Object {
            "label": "Student Instructions",
            "settings": false,
          },
          "teacherInstructions": Object {
            "inputConfiguration": Object {
              "audio": Object {
                "disabled": false,
              },
              "image": Object {
                "disabled": false,
              },
              "video": Object {
                "disabled": false,
              },
            },
            "label": "Teacher Instructions",
            "settings": true,
          },
          "text": Object {
            "label": "Content",
            "settings": true,
          },
          "tokens": Object {
            "label": "Tokens",
            "settings": true,
          },
          "withRubric": Object {
            "label": "Add Rubric",
            "settings": false,
          },
        }
      }
      groups={
        Object {
          "Properties": Object {
            "promptEnabled": undefined,
            "rationaleEnabled": undefined,
            "rubricEnabled": false,
            "scoringType": false,
            "spellCheckEnabled": false,
            "studentInstructionsEnabled": false,
            "teacherInstructionsEnabled": undefined,
          },
          "Settings": Object {
            "feedbackEnabled": undefined,
            "highlightChoices": undefined,
            "language": false,
            "language.enabled": false,
            "partialScoring": false,
          },
        }
      }
      model={
        Object {
          "text": "<p>&#8220;Lucy?&#63; Are you using your time wisely to plan your project?&#33;&#33;&#33;&#8221; Mr. Wilson asked.</p><p>Lucy looked a little confused at first. &#195; Then she grinned and proudly stated, &#8220;Why, yes I am! I plan to make a bird feeder for that tree out our window!&#8221;</p>",
          "tokens": Array [],
        }
      }
      onChangeModel={[Function]}
    />
  }
>
  <Component
    label="Content"
  >
    <TextField
      defaultValue="<p>&#8220;Lucy?&#63; Are you using your time wisely to plan your project?&#33;&#33;&#33;&#8221; Mr. Wilson asked.</p><p>Lucy looked a little confused at first. &#195; Then she grinned and proudly stated, &#8220;Why, yes I am! I plan to make a bird feeder for that tree out our window!&#8221;</p>"
      multiline={true}
      onChange={[Function]}
      required={false}
      select={false}
      variant="standard"
    />
  </Component>
  <Component
    label="Tokens"
  >
    <WithStyles(Tooltip)
      classes={
        Object {
          "tooltip": undefined,
        }
      }
      disableFocusListener={true}
      disableTouchListener={true}
      placement="right"
      title="Validation requirements:
There should be at least 2 tokens defined.
There should be at least 1 token selected."
    >
      <pure(InfoIcon)
        color="primary"
        fontSize="small"
        style={
          Object {
            "left": "48px",
            "position": "absolute",
            "top": "-3px",
          }
        }
      />
    </WithStyles(Tooltip)>
    <WithStyles(Tokenizer)
      onChange={[Function]}
      text="<p>&#8220;Lucy?&#63; Are you using your time wisely to plan your project?&#33;&#33;&#33;&#8221; Mr. Wilson asked.</p><p>Lucy looked a little confused at first. &#195; Then she grinned and proudly stated, &#8220;Why, yes I am! I plan to make a bird feeder for that tree out our window!&#8221;</p>"
      tokens={Array []}
    />
  </Component>
  <div>
    <WithStyles(Chip)
      label="Mode: None"
    />
    <WithStyles(Chip)
      label="Selections Available: 0"
    />
    <WithStyles(Chip)
      label="Correct Answers: 0"
    />
    <Component
      label="Selection count (0:any)"
      max={0}
      min={0}
      onChange={[Function]}
    />
  </div>
</ConfigLayout>
`;
