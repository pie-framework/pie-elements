// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Design snapshot renders 1`] = `
<mockConstructor
  value="1"
>
  <ConfigLayout
    dimensions={Object {}}
    settings={
      <Panel
        groups={
          Object {
            "Properties": Object {
              "rationaleEnabled": undefined,
              "rubricEnabled": undefined,
              "scoringType": undefined,
              "spellCheckEnabled": undefined,
              "studentInstructionsEnabled": undefined,
              "teacherInstructionsEnabled": undefined,
            },
            "Settings": Object {
              "allowAlternateEnabled": undefined,
              "allowMultiplePlacementsEnabled": undefined,
              "categoriesPerRow": undefined,
              "choicesPosition": undefined,
              "feedbackEnabled": undefined,
              "lockChoiceOrder": undefined,
              "partialScoring": undefined,
              "promptEnabled": undefined,
            },
          }
        }
        model={
          Object {
            "categories": Array [
              Object {
                "id": "1",
                "label": "Category Title",
              },
            ],
            "choices": Array [
              Object {
                "content": "content",
                "correctResponseCount": 1,
                "id": "1",
              },
            ],
            "correctResponse": Array [
              Object {
                "category": "1",
                "choices": Array [
                  "1",
                ],
              },
            ],
          }
        }
        onChangeModel={[Function]}
      />
    }
  >
    <WithStyles(Categories)
      categories={
        Array [
          Object {
            "choices": Array [
              Object {
                "content": "content",
                "id": "1",
              },
            ],
            "id": "1",
            "label": "Category Title",
          },
        ]
      }
      model={
        Object {
          "categories": Array [
            Object {
              "id": "1",
              "label": "Category Title",
            },
          ],
          "choices": Array [
            Object {
              "content": "content",
              "correctResponseCount": 1,
              "id": "1",
            },
          ],
          "correctResponse": Array [
            Object {
              "category": "1",
              "choices": Array [
                "1",
              ],
            },
          ],
        }
      }
      onModelChanged={[Function]}
      toolbarOpts={
        Object {
          "position": "bottom",
        }
      }
    />
    <WithStyles(Choices)
      choices={
        Array [
          Object {
            "content": "content",
            "correctResponseCount": 1,
            "id": "1",
          },
        ]
      }
      model={
        Object {
          "categories": Array [
            Object {
              "id": "1",
              "label": "Category Title",
            },
          ],
          "choices": Array [
            Object {
              "content": "content",
              "correctResponseCount": 1,
              "id": "1",
            },
          ],
          "correctResponse": Array [
            Object {
              "category": "1",
              "choices": Array [
                "1",
              ],
            },
          ],
        }
      }
      onModelChanged={[Function]}
      toolbarOpts={
        Object {
          "position": "bottom",
        }
      }
    />
  </ConfigLayout>
</mockConstructor>
`;
