// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CorrectResponse renders snapshot 1`] = `
<CorrectResponse
  classes={Object {}}
  model={
    Object {
      "answers": Object {
        "correctAnswer": Object {
          "marks": Array [],
          "name": "Correct Answer",
        },
      },
      "arrows": Object {
        "down": true,
        "left": true,
        "right": true,
        "up": true,
      },
      "backgroundMarks": Array [],
      "coordinatesOnHover": false,
      "defaultGridConfiguration": 0,
      "domain": Object {
        "axisLabel": "x",
        "labelStep": 1,
        "max": 5,
        "min": -5,
        "step": 1,
      },
      "graph": Object {
        "height": 500,
        "width": 500,
      },
      "includeAxes": true,
      "labels": Object {},
      "labelsEnabled": true,
      "padding": true,
      "prompt": "",
      "promptEnabled": true,
      "range": Object {
        "axisLabel": "y",
        "labelStep": 1,
        "max": 5,
        "min": -5,
        "step": 1,
      },
      "rationale": "",
      "rationaleEnabled": true,
      "standardGrid": false,
      "studentInstructionsEnabled": true,
      "teacherInstructionsEnabled": true,
      "title": "",
      "toolbarTools": Array [
        "circle",
        "line",
        "label",
        "parabola",
        "point",
        "polygon",
        "ray",
        "segment",
        "sine",
        "vector",
      ],
    }
  }
  onChange={[MockFunction]}
  tools={Array []}
>
  <div>
    <WithStyles(Typography)
      component="div"
      variant="subheading"
    >
      <Typography
        align="inherit"
        classes={
          Object {
            "alignCenter": "MuiTypography-alignCenter-24",
            "alignJustify": "MuiTypography-alignJustify-26",
            "alignLeft": "MuiTypography-alignLeft-23",
            "alignRight": "MuiTypography-alignRight-25",
            "body1": "MuiTypography-body1-10",
            "body2": "MuiTypography-body2-9",
            "button": "MuiTypography-button-12",
            "caption": "MuiTypography-caption-11",
            "colorError": "MuiTypography-colorError-35",
            "colorInherit": "MuiTypography-colorInherit-30",
            "colorPrimary": "MuiTypography-colorPrimary-31",
            "colorSecondary": "MuiTypography-colorSecondary-32",
            "colorTextPrimary": "MuiTypography-colorTextPrimary-33",
            "colorTextSecondary": "MuiTypography-colorTextSecondary-34",
            "display1": "MuiTypography-display1-5",
            "display2": "MuiTypography-display2-4",
            "display3": "MuiTypography-display3-3",
            "display4": "MuiTypography-display4-2",
            "gutterBottom": "MuiTypography-gutterBottom-28",
            "h1": "MuiTypography-h1-13",
            "h2": "MuiTypography-h2-14",
            "h3": "MuiTypography-h3-15",
            "h4": "MuiTypography-h4-16",
            "h5": "MuiTypography-h5-17",
            "h6": "MuiTypography-h6-18",
            "headline": "MuiTypography-headline-6",
            "inline": "MuiTypography-inline-36",
            "noWrap": "MuiTypography-noWrap-27",
            "overline": "MuiTypography-overline-21",
            "paragraph": "MuiTypography-paragraph-29",
            "root": "MuiTypography-root-1",
            "srOnly": "MuiTypography-srOnly-22",
            "subheading": "MuiTypography-subheading-8",
            "subtitle1": "MuiTypography-subtitle1-19",
            "subtitle2": "MuiTypography-subtitle2-20",
            "title": "MuiTypography-title-7",
          }
        }
        color="default"
        component="div"
        gutterBottom={false}
        headlineMapping={
          Object {
            "body1": "p",
            "body2": "p",
            "display1": "h1",
            "display2": "h1",
            "display3": "h1",
            "display4": "h1",
            "h1": "h1",
            "h2": "h2",
            "h3": "h3",
            "h4": "h4",
            "h5": "h5",
            "h6": "h6",
            "headline": "h1",
            "subheading": "h3",
            "subtitle1": "h6",
            "subtitle2": "h6",
            "title": "h2",
          }
        }
        inline={false}
        noWrap={false}
        paragraph={false}
        theme={
          Object {
            "breakpoints": Object {
              "between": [Function],
              "down": [Function],
              "keys": Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ],
              "only": [Function],
              "up": [Function],
              "values": Object {
                "lg": 1280,
                "md": 960,
                "sm": 600,
                "xl": 1920,
                "xs": 0,
              },
              "width": [Function],
            },
            "direction": "ltr",
            "mixins": Object {
              "gutters": [Function],
              "toolbar": Object {
                "@media (min-width:0px) and (orientation: landscape)": Object {
                  "minHeight": 48,
                },
                "@media (min-width:600px)": Object {
                  "minHeight": 64,
                },
                "minHeight": 56,
              },
            },
            "overrides": Object {},
            "palette": Object {
              "action": Object {
                "active": "rgba(0, 0, 0, 0.54)",
                "disabled": "rgba(0, 0, 0, 0.26)",
                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                "hover": "rgba(0, 0, 0, 0.08)",
                "hoverOpacity": 0.08,
                "selected": "rgba(0, 0, 0, 0.14)",
              },
              "augmentColor": [Function],
              "background": Object {
                "default": "#fafafa",
                "paper": "#fff",
              },
              "common": Object {
                "black": "#000",
                "white": "#fff",
              },
              "contrastThreshold": 3,
              "divider": "rgba(0, 0, 0, 0.12)",
              "error": Object {
                "contrastText": "#fff",
                "dark": "#d32f2f",
                "light": "#e57373",
                "main": "#f44336",
              },
              "getContrastText": [Function],
              "grey": Object {
                "100": "#f5f5f5",
                "200": "#eeeeee",
                "300": "#e0e0e0",
                "400": "#bdbdbd",
                "50": "#fafafa",
                "500": "#9e9e9e",
                "600": "#757575",
                "700": "#616161",
                "800": "#424242",
                "900": "#212121",
                "A100": "#d5d5d5",
                "A200": "#aaaaaa",
                "A400": "#303030",
                "A700": "#616161",
              },
              "primary": Object {
                "contrastText": "#fff",
                "dark": "#303f9f",
                "light": "#7986cb",
                "main": "#3f51b5",
              },
              "secondary": Object {
                "contrastText": "#fff",
                "dark": "#c51162",
                "light": "#ff4081",
                "main": "#f50057",
              },
              "text": Object {
                "disabled": "rgba(0, 0, 0, 0.38)",
                "hint": "rgba(0, 0, 0, 0.38)",
                "primary": "rgba(0, 0, 0, 0.87)",
                "secondary": "rgba(0, 0, 0, 0.54)",
              },
              "tonalOffset": 0.2,
              "type": "light",
            },
            "props": Object {},
            "shadows": Array [
              "none",
              "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
              "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
              "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
            ],
            "shape": Object {
              "borderRadius": 4,
            },
            "spacing": Object {
              "unit": 8,
            },
            "transitions": Object {
              "create": [Function],
              "duration": Object {
                "complex": 375,
                "enteringScreen": 225,
                "leavingScreen": 195,
                "short": 250,
                "shorter": 200,
                "shortest": 150,
                "standard": 300,
              },
              "easing": Object {
                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
              },
              "getAutoHeightDuration": [Function],
            },
            "typography": Object {
              "body1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "lineHeight": "1.46429em",
              },
              "body1Next": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 400,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.5,
              },
              "body2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "lineHeight": "1.71429em",
              },
              "body2Next": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "letterSpacing": "0.01071em",
                "lineHeight": 1.5,
              },
              "button": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "textTransform": "uppercase",
              },
              "buttonNext": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "letterSpacing": "0.02857em",
                "lineHeight": 1.75,
                "textTransform": "uppercase",
              },
              "caption": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 400,
                "lineHeight": "1.375em",
              },
              "captionNext": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 400,
                "letterSpacing": "0.03333em",
                "lineHeight": 1.66,
              },
              "display1": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.125rem",
                "fontWeight": 400,
                "lineHeight": "1.20588em",
              },
              "display2": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.8125rem",
                "fontWeight": 400,
                "lineHeight": "1.13333em",
                "marginLeft": "-.02em",
              },
              "display3": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3.5rem",
                "fontWeight": 400,
                "letterSpacing": "-.02em",
                "lineHeight": "1.30357em",
                "marginLeft": "-.02em",
              },
              "display4": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "7rem",
                "fontWeight": 300,
                "letterSpacing": "-.04em",
                "lineHeight": "1.14286em",
                "marginLeft": "-.04em",
              },
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": 14,
              "fontWeightLight": 300,
              "fontWeightMedium": 500,
              "fontWeightRegular": 400,
              "h1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "6rem",
                "fontWeight": 300,
                "letterSpacing": "-0.01562em",
                "lineHeight": 1,
              },
              "h2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3.75rem",
                "fontWeight": 300,
                "letterSpacing": "-0.00833em",
                "lineHeight": 1,
              },
              "h3": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3rem",
                "fontWeight": 400,
                "letterSpacing": "0em",
                "lineHeight": 1.04,
              },
              "h4": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.125rem",
                "fontWeight": 400,
                "letterSpacing": "0.00735em",
                "lineHeight": 1.17,
              },
              "h5": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.5rem",
                "fontWeight": 400,
                "letterSpacing": "0em",
                "lineHeight": 1.33,
              },
              "h6": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.25rem",
                "fontWeight": 500,
                "letterSpacing": "0.0075em",
                "lineHeight": 1.6,
              },
              "headline": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.5rem",
                "fontWeight": 400,
                "lineHeight": "1.35417em",
              },
              "overline": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 400,
                "letterSpacing": "0.08333em",
                "lineHeight": 2.66,
                "textTransform": "uppercase",
              },
              "pxToRem": [Function],
              "round": [Function],
              "subheading": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 400,
                "lineHeight": "1.5em",
              },
              "subtitle1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 400,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.75,
              },
              "subtitle2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "letterSpacing": "0.00714em",
                "lineHeight": 1.57,
              },
              "title": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.3125rem",
                "fontWeight": 500,
                "lineHeight": "1.16667em",
              },
              "useNextVariants": false,
            },
            "zIndex": Object {
              "appBar": 1100,
              "drawer": 1200,
              "mobileStepper": 1000,
              "modal": 1300,
              "snackbar": 1400,
              "tooltip": 1500,
            },
          }
        }
        variant="subheading"
      >
        <div
          className="MuiTypography-root-1 MuiTypography-subheading-8"
        >
          Define Tool Set and Correct Response
        </div>
      </Typography>
    </WithStyles(Typography)>
    <WithStyles(Typography)
      component="div"
      variant="body1"
    >
      <Typography
        align="inherit"
        classes={
          Object {
            "alignCenter": "MuiTypography-alignCenter-24",
            "alignJustify": "MuiTypography-alignJustify-26",
            "alignLeft": "MuiTypography-alignLeft-23",
            "alignRight": "MuiTypography-alignRight-25",
            "body1": "MuiTypography-body1-10",
            "body2": "MuiTypography-body2-9",
            "button": "MuiTypography-button-12",
            "caption": "MuiTypography-caption-11",
            "colorError": "MuiTypography-colorError-35",
            "colorInherit": "MuiTypography-colorInherit-30",
            "colorPrimary": "MuiTypography-colorPrimary-31",
            "colorSecondary": "MuiTypography-colorSecondary-32",
            "colorTextPrimary": "MuiTypography-colorTextPrimary-33",
            "colorTextSecondary": "MuiTypography-colorTextSecondary-34",
            "display1": "MuiTypography-display1-5",
            "display2": "MuiTypography-display2-4",
            "display3": "MuiTypography-display3-3",
            "display4": "MuiTypography-display4-2",
            "gutterBottom": "MuiTypography-gutterBottom-28",
            "h1": "MuiTypography-h1-13",
            "h2": "MuiTypography-h2-14",
            "h3": "MuiTypography-h3-15",
            "h4": "MuiTypography-h4-16",
            "h5": "MuiTypography-h5-17",
            "h6": "MuiTypography-h6-18",
            "headline": "MuiTypography-headline-6",
            "inline": "MuiTypography-inline-36",
            "noWrap": "MuiTypography-noWrap-27",
            "overline": "MuiTypography-overline-21",
            "paragraph": "MuiTypography-paragraph-29",
            "root": "MuiTypography-root-1",
            "srOnly": "MuiTypography-srOnly-22",
            "subheading": "MuiTypography-subheading-8",
            "subtitle1": "MuiTypography-subtitle1-19",
            "subtitle2": "MuiTypography-subtitle2-20",
            "title": "MuiTypography-title-7",
          }
        }
        color="default"
        component="div"
        gutterBottom={false}
        headlineMapping={
          Object {
            "body1": "p",
            "body2": "p",
            "display1": "h1",
            "display2": "h1",
            "display3": "h1",
            "display4": "h1",
            "h1": "h1",
            "h2": "h2",
            "h3": "h3",
            "h4": "h4",
            "h5": "h5",
            "h6": "h6",
            "headline": "h1",
            "subheading": "h3",
            "subtitle1": "h6",
            "subtitle2": "h6",
            "title": "h2",
          }
        }
        inline={false}
        noWrap={false}
        paragraph={false}
        theme={
          Object {
            "breakpoints": Object {
              "between": [Function],
              "down": [Function],
              "keys": Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ],
              "only": [Function],
              "up": [Function],
              "values": Object {
                "lg": 1280,
                "md": 960,
                "sm": 600,
                "xl": 1920,
                "xs": 0,
              },
              "width": [Function],
            },
            "direction": "ltr",
            "mixins": Object {
              "gutters": [Function],
              "toolbar": Object {
                "@media (min-width:0px) and (orientation: landscape)": Object {
                  "minHeight": 48,
                },
                "@media (min-width:600px)": Object {
                  "minHeight": 64,
                },
                "minHeight": 56,
              },
            },
            "overrides": Object {},
            "palette": Object {
              "action": Object {
                "active": "rgba(0, 0, 0, 0.54)",
                "disabled": "rgba(0, 0, 0, 0.26)",
                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                "hover": "rgba(0, 0, 0, 0.08)",
                "hoverOpacity": 0.08,
                "selected": "rgba(0, 0, 0, 0.14)",
              },
              "augmentColor": [Function],
              "background": Object {
                "default": "#fafafa",
                "paper": "#fff",
              },
              "common": Object {
                "black": "#000",
                "white": "#fff",
              },
              "contrastThreshold": 3,
              "divider": "rgba(0, 0, 0, 0.12)",
              "error": Object {
                "contrastText": "#fff",
                "dark": "#d32f2f",
                "light": "#e57373",
                "main": "#f44336",
              },
              "getContrastText": [Function],
              "grey": Object {
                "100": "#f5f5f5",
                "200": "#eeeeee",
                "300": "#e0e0e0",
                "400": "#bdbdbd",
                "50": "#fafafa",
                "500": "#9e9e9e",
                "600": "#757575",
                "700": "#616161",
                "800": "#424242",
                "900": "#212121",
                "A100": "#d5d5d5",
                "A200": "#aaaaaa",
                "A400": "#303030",
                "A700": "#616161",
              },
              "primary": Object {
                "contrastText": "#fff",
                "dark": "#303f9f",
                "light": "#7986cb",
                "main": "#3f51b5",
              },
              "secondary": Object {
                "contrastText": "#fff",
                "dark": "#c51162",
                "light": "#ff4081",
                "main": "#f50057",
              },
              "text": Object {
                "disabled": "rgba(0, 0, 0, 0.38)",
                "hint": "rgba(0, 0, 0, 0.38)",
                "primary": "rgba(0, 0, 0, 0.87)",
                "secondary": "rgba(0, 0, 0, 0.54)",
              },
              "tonalOffset": 0.2,
              "type": "light",
            },
            "props": Object {},
            "shadows": Array [
              "none",
              "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
              "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
              "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
            ],
            "shape": Object {
              "borderRadius": 4,
            },
            "spacing": Object {
              "unit": 8,
            },
            "transitions": Object {
              "create": [Function],
              "duration": Object {
                "complex": 375,
                "enteringScreen": 225,
                "leavingScreen": 195,
                "short": 250,
                "shorter": 200,
                "shortest": 150,
                "standard": 300,
              },
              "easing": Object {
                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
              },
              "getAutoHeightDuration": [Function],
            },
            "typography": Object {
              "body1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "lineHeight": "1.46429em",
              },
              "body1Next": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 400,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.5,
              },
              "body2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "lineHeight": "1.71429em",
              },
              "body2Next": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "letterSpacing": "0.01071em",
                "lineHeight": 1.5,
              },
              "button": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "textTransform": "uppercase",
              },
              "buttonNext": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "letterSpacing": "0.02857em",
                "lineHeight": 1.75,
                "textTransform": "uppercase",
              },
              "caption": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 400,
                "lineHeight": "1.375em",
              },
              "captionNext": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 400,
                "letterSpacing": "0.03333em",
                "lineHeight": 1.66,
              },
              "display1": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.125rem",
                "fontWeight": 400,
                "lineHeight": "1.20588em",
              },
              "display2": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.8125rem",
                "fontWeight": 400,
                "lineHeight": "1.13333em",
                "marginLeft": "-.02em",
              },
              "display3": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3.5rem",
                "fontWeight": 400,
                "letterSpacing": "-.02em",
                "lineHeight": "1.30357em",
                "marginLeft": "-.02em",
              },
              "display4": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "7rem",
                "fontWeight": 300,
                "letterSpacing": "-.04em",
                "lineHeight": "1.14286em",
                "marginLeft": "-.04em",
              },
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": 14,
              "fontWeightLight": 300,
              "fontWeightMedium": 500,
              "fontWeightRegular": 400,
              "h1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "6rem",
                "fontWeight": 300,
                "letterSpacing": "-0.01562em",
                "lineHeight": 1,
              },
              "h2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3.75rem",
                "fontWeight": 300,
                "letterSpacing": "-0.00833em",
                "lineHeight": 1,
              },
              "h3": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3rem",
                "fontWeight": 400,
                "letterSpacing": "0em",
                "lineHeight": 1.04,
              },
              "h4": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.125rem",
                "fontWeight": 400,
                "letterSpacing": "0.00735em",
                "lineHeight": 1.17,
              },
              "h5": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.5rem",
                "fontWeight": 400,
                "letterSpacing": "0em",
                "lineHeight": 1.33,
              },
              "h6": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.25rem",
                "fontWeight": 500,
                "letterSpacing": "0.0075em",
                "lineHeight": 1.6,
              },
              "headline": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.5rem",
                "fontWeight": 400,
                "lineHeight": "1.35417em",
              },
              "overline": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 400,
                "letterSpacing": "0.08333em",
                "lineHeight": 2.66,
                "textTransform": "uppercase",
              },
              "pxToRem": [Function],
              "round": [Function],
              "subheading": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 400,
                "lineHeight": "1.5em",
              },
              "subtitle1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 400,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.75,
              },
              "subtitle2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "letterSpacing": "0.00714em",
                "lineHeight": 1.57,
              },
              "title": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.3125rem",
                "fontWeight": 500,
                "lineHeight": "1.16667em",
              },
              "useNextVariants": false,
            },
            "zIndex": Object {
              "appBar": 1100,
              "drawer": 1200,
              "mobileStepper": 1000,
              "modal": 1300,
              "snackbar": 1400,
              "tooltip": 1500,
            },
          }
        }
        variant="body1"
      >
        <div
          className="MuiTypography-root-1 MuiTypography-body1-10"
        >
          Use this interface to choose which graphing tools students will be able to use, and to define the correct answer
        </div>
      </Typography>
    </WithStyles(Typography)>
    <Tools
      classes={Object {}}
      hasErrors={false}
      onDefaultToolChange={[Function]}
      toggleToolBarTool={[Function]}
      toolbarTools={
        Array [
          "circle",
          "line",
          "label",
          "parabola",
          "point",
          "polygon",
          "ray",
          "segment",
          "sine",
          "vector",
        ]
      }
    >
      <div>
        <div>
          <span>
            GRAPHING TOOLS
          </span>
          <div>
            <span>
              Default graphing tool:
            </span>
            <WithStyles(WithFormControlContext(Select))
              disableUnderline={true}
              onChange={[Function]}
            >
              <WithFormControlContext(Select)
                classes={
                  Object {
                    "disabled": "MuiSelect-disabled-42",
                    "filled": "MuiSelect-filled-39",
                    "icon": "MuiSelect-icon-43",
                    "outlined": "MuiSelect-outlined-40",
                    "root": "MuiSelect-root-37",
                    "select": "MuiSelect-select-38",
                    "selectMenu": "MuiSelect-selectMenu-41",
                  }
                }
                disableUnderline={true}
                onChange={[Function]}
              >
                <Select
                  IconComponent={[Function]}
                  autoWidth={false}
                  classes={
                    Object {
                      "disabled": "MuiSelect-disabled-42",
                      "filled": "MuiSelect-filled-39",
                      "icon": "MuiSelect-icon-43",
                      "outlined": "MuiSelect-outlined-40",
                      "root": "MuiSelect-root-37",
                      "select": "MuiSelect-select-38",
                      "selectMenu": "MuiSelect-selectMenu-41",
                    }
                  }
                  disableUnderline={true}
                  displayEmpty={false}
                  input={<WithStyles(Input) />}
                  multiple={false}
                  native={false}
                  onChange={[Function]}
                >
                  <WithStyles(Input)
                    disableUnderline={true}
                    inputComponent={[Function]}
                    inputProps={
                      Object {
                        "IconComponent": [Function],
                        "MenuProps": undefined,
                        "SelectDisplayProps": undefined,
                        "autoWidth": false,
                        "children": Array [
                          <WithStyles(MenuItem)
                            value="circle"
                          >
                            circle
                          </WithStyles(MenuItem)>,
                          <WithStyles(MenuItem)
                            value="line"
                          >
                            line
                          </WithStyles(MenuItem)>,
                          <WithStyles(MenuItem)
                            value="parabola"
                          >
                            parabola
                          </WithStyles(MenuItem)>,
                          <WithStyles(MenuItem)
                            value="point"
                          >
                            point
                          </WithStyles(MenuItem)>,
                          <WithStyles(MenuItem)
                            value="polygon"
                          >
                            polygon
                          </WithStyles(MenuItem)>,
                          <WithStyles(MenuItem)
                            value="ray"
                          >
                            ray
                          </WithStyles(MenuItem)>,
                          <WithStyles(MenuItem)
                            value="segment"
                          >
                            segment
                          </WithStyles(MenuItem)>,
                          <WithStyles(MenuItem)
                            value="sine"
                          >
                            sine
                          </WithStyles(MenuItem)>,
                          <WithStyles(MenuItem)
                            value="vector"
                          >
                            vector
                          </WithStyles(MenuItem)>,
                        ],
                        "classes": Object {
                          "disabled": "MuiSelect-disabled-42",
                          "filled": "MuiSelect-filled-39",
                          "icon": "MuiSelect-icon-43",
                          "outlined": "MuiSelect-outlined-40",
                          "root": "MuiSelect-root-37",
                          "select": "MuiSelect-select-38",
                          "selectMenu": "MuiSelect-selectMenu-41",
                        },
                        "displayEmpty": false,
                        "multiple": false,
                        "onClose": undefined,
                        "onOpen": undefined,
                        "open": undefined,
                        "renderValue": undefined,
                        "type": undefined,
                        "variant": undefined,
                      }
                    }
                    onChange={[Function]}
                  >
                    <Input
                      classes={
                        Object {
                          "disabled": "MuiInput-disabled-47",
                          "error": "MuiInput-error-49",
                          "focused": "MuiInput-focused-46",
                          "formControl": "MuiInput-formControl-45",
                          "fullWidth": "MuiInput-fullWidth-51",
                          "input": "MuiInput-input-52",
                          "inputMarginDense": "MuiInput-inputMarginDense-53",
                          "inputMultiline": "MuiInput-inputMultiline-54",
                          "inputType": "MuiInput-inputType-55",
                          "inputTypeSearch": "MuiInput-inputTypeSearch-56",
                          "multiline": "MuiInput-multiline-50",
                          "root": "MuiInput-root-44",
                          "underline": "MuiInput-underline-48",
                        }
                      }
                      disableUnderline={true}
                      inputComponent={[Function]}
                      inputProps={
                        Object {
                          "IconComponent": [Function],
                          "MenuProps": undefined,
                          "SelectDisplayProps": undefined,
                          "autoWidth": false,
                          "children": Array [
                            <WithStyles(MenuItem)
                              value="circle"
                            >
                              circle
                            </WithStyles(MenuItem)>,
                            <WithStyles(MenuItem)
                              value="line"
                            >
                              line
                            </WithStyles(MenuItem)>,
                            <WithStyles(MenuItem)
                              value="parabola"
                            >
                              parabola
                            </WithStyles(MenuItem)>,
                            <WithStyles(MenuItem)
                              value="point"
                            >
                              point
                            </WithStyles(MenuItem)>,
                            <WithStyles(MenuItem)
                              value="polygon"
                            >
                              polygon
                            </WithStyles(MenuItem)>,
                            <WithStyles(MenuItem)
                              value="ray"
                            >
                              ray
                            </WithStyles(MenuItem)>,
                            <WithStyles(MenuItem)
                              value="segment"
                            >
                              segment
                            </WithStyles(MenuItem)>,
                            <WithStyles(MenuItem)
                              value="sine"
                            >
                              sine
                            </WithStyles(MenuItem)>,
                            <WithStyles(MenuItem)
                              value="vector"
                            >
                              vector
                            </WithStyles(MenuItem)>,
                          ],
                          "classes": Object {
                            "disabled": "MuiSelect-disabled-42",
                            "filled": "MuiSelect-filled-39",
                            "icon": "MuiSelect-icon-43",
                            "outlined": "MuiSelect-outlined-40",
                            "root": "MuiSelect-root-37",
                            "select": "MuiSelect-select-38",
                            "selectMenu": "MuiSelect-selectMenu-41",
                          },
                          "displayEmpty": false,
                          "multiple": false,
                          "onClose": undefined,
                          "onOpen": undefined,
                          "open": undefined,
                          "renderValue": undefined,
                          "type": undefined,
                          "variant": undefined,
                        }
                      }
                      onChange={[Function]}
                    >
                      <WithStyles(WithFormControlContext(InputBase))
                        classes={
                          Object {
                            "disabled": "MuiInput-disabled-47",
                            "error": "MuiInput-error-49",
                            "focused": "MuiInput-focused-46",
                            "formControl": "MuiInput-formControl-45",
                            "fullWidth": "MuiInput-fullWidth-51",
                            "input": "MuiInput-input-52",
                            "inputMarginDense": "MuiInput-inputMarginDense-53",
                            "inputMultiline": "MuiInput-inputMultiline-54",
                            "inputType": "MuiInput-inputType-55",
                            "inputTypeSearch": "MuiInput-inputTypeSearch-56",
                            "multiline": "MuiInput-multiline-50",
                            "root": "MuiInput-root-44",
                            "underline": null,
                          }
                        }
                        fullWidth={false}
                        inputComponent={[Function]}
                        inputProps={
                          Object {
                            "IconComponent": [Function],
                            "MenuProps": undefined,
                            "SelectDisplayProps": undefined,
                            "autoWidth": false,
                            "children": Array [
                              <WithStyles(MenuItem)
                                value="circle"
                              >
                                circle
                              </WithStyles(MenuItem)>,
                              <WithStyles(MenuItem)
                                value="line"
                              >
                                line
                              </WithStyles(MenuItem)>,
                              <WithStyles(MenuItem)
                                value="parabola"
                              >
                                parabola
                              </WithStyles(MenuItem)>,
                              <WithStyles(MenuItem)
                                value="point"
                              >
                                point
                              </WithStyles(MenuItem)>,
                              <WithStyles(MenuItem)
                                value="polygon"
                              >
                                polygon
                              </WithStyles(MenuItem)>,
                              <WithStyles(MenuItem)
                                value="ray"
                              >
                                ray
                              </WithStyles(MenuItem)>,
                              <WithStyles(MenuItem)
                                value="segment"
                              >
                                segment
                              </WithStyles(MenuItem)>,
                              <WithStyles(MenuItem)
                                value="sine"
                              >
                                sine
                              </WithStyles(MenuItem)>,
                              <WithStyles(MenuItem)
                                value="vector"
                              >
                                vector
                              </WithStyles(MenuItem)>,
                            ],
                            "classes": Object {
                              "disabled": "MuiSelect-disabled-42",
                              "filled": "MuiSelect-filled-39",
                              "icon": "MuiSelect-icon-43",
                              "outlined": "MuiSelect-outlined-40",
                              "root": "MuiSelect-root-37",
                              "select": "MuiSelect-select-38",
                              "selectMenu": "MuiSelect-selectMenu-41",
                            },
                            "displayEmpty": false,
                            "multiple": false,
                            "onClose": undefined,
                            "onOpen": undefined,
                            "open": undefined,
                            "renderValue": undefined,
                            "type": undefined,
                            "variant": undefined,
                          }
                        }
                        multiline={false}
                        onChange={[Function]}
                        type="text"
                      >
                        <WithFormControlContext(InputBase)
                          classes={
                            Object {
                              "adornedEnd": "MuiInputBase-adornedEnd-62",
                              "adornedStart": "MuiInputBase-adornedStart-61",
                              "disabled": "MuiInputBase-disabled-60 MuiInput-disabled-47",
                              "error": "MuiInputBase-error-63 MuiInput-error-49",
                              "focused": "MuiInputBase-focused-59 MuiInput-focused-46",
                              "formControl": "MuiInputBase-formControl-58 MuiInput-formControl-45",
                              "fullWidth": "MuiInputBase-fullWidth-66 MuiInput-fullWidth-51",
                              "input": "MuiInputBase-input-67 MuiInput-input-52",
                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-73",
                              "inputAdornedStart": "MuiInputBase-inputAdornedStart-72",
                              "inputMarginDense": "MuiInputBase-inputMarginDense-68 MuiInput-inputMarginDense-53",
                              "inputMultiline": "MuiInputBase-inputMultiline-69 MuiInput-inputMultiline-54",
                              "inputType": "MuiInputBase-inputType-70 MuiInput-inputType-55",
                              "inputTypeSearch": "MuiInputBase-inputTypeSearch-71 MuiInput-inputTypeSearch-56",
                              "marginDense": "MuiInputBase-marginDense-64",
                              "multiline": "MuiInputBase-multiline-65 MuiInput-multiline-50",
                              "root": "MuiInputBase-root-57 MuiInput-root-44",
                            }
                          }
                          fullWidth={false}
                          inputComponent={[Function]}
                          inputProps={
                            Object {
                              "IconComponent": [Function],
                              "MenuProps": undefined,
                              "SelectDisplayProps": undefined,
                              "autoWidth": false,
                              "children": Array [
                                <WithStyles(MenuItem)
                                  value="circle"
                                >
                                  circle
                                </WithStyles(MenuItem)>,
                                <WithStyles(MenuItem)
                                  value="line"
                                >
                                  line
                                </WithStyles(MenuItem)>,
                                <WithStyles(MenuItem)
                                  value="parabola"
                                >
                                  parabola
                                </WithStyles(MenuItem)>,
                                <WithStyles(MenuItem)
                                  value="point"
                                >
                                  point
                                </WithStyles(MenuItem)>,
                                <WithStyles(MenuItem)
                                  value="polygon"
                                >
                                  polygon
                                </WithStyles(MenuItem)>,
                                <WithStyles(MenuItem)
                                  value="ray"
                                >
                                  ray
                                </WithStyles(MenuItem)>,
                                <WithStyles(MenuItem)
                                  value="segment"
                                >
                                  segment
                                </WithStyles(MenuItem)>,
                                <WithStyles(MenuItem)
                                  value="sine"
                                >
                                  sine
                                </WithStyles(MenuItem)>,
                                <WithStyles(MenuItem)
                                  value="vector"
                                >
                                  vector
                                </WithStyles(MenuItem)>,
                              ],
                              "classes": Object {
                                "disabled": "MuiSelect-disabled-42",
                                "filled": "MuiSelect-filled-39",
                                "icon": "MuiSelect-icon-43",
                                "outlined": "MuiSelect-outlined-40",
                                "root": "MuiSelect-root-37",
                                "select": "MuiSelect-select-38",
                                "selectMenu": "MuiSelect-selectMenu-41",
                              },
                              "displayEmpty": false,
                              "multiple": false,
                              "onClose": undefined,
                              "onOpen": undefined,
                              "open": undefined,
                              "renderValue": undefined,
                              "type": undefined,
                              "variant": undefined,
                            }
                          }
                          multiline={false}
                          onChange={[Function]}
                          type="text"
                        >
                          <InputBase
                            classes={
                              Object {
                                "adornedEnd": "MuiInputBase-adornedEnd-62",
                                "adornedStart": "MuiInputBase-adornedStart-61",
                                "disabled": "MuiInputBase-disabled-60 MuiInput-disabled-47",
                                "error": "MuiInputBase-error-63 MuiInput-error-49",
                                "focused": "MuiInputBase-focused-59 MuiInput-focused-46",
                                "formControl": "MuiInputBase-formControl-58 MuiInput-formControl-45",
                                "fullWidth": "MuiInputBase-fullWidth-66 MuiInput-fullWidth-51",
                                "input": "MuiInputBase-input-67 MuiInput-input-52",
                                "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-73",
                                "inputAdornedStart": "MuiInputBase-inputAdornedStart-72",
                                "inputMarginDense": "MuiInputBase-inputMarginDense-68 MuiInput-inputMarginDense-53",
                                "inputMultiline": "MuiInputBase-inputMultiline-69 MuiInput-inputMultiline-54",
                                "inputType": "MuiInputBase-inputType-70 MuiInput-inputType-55",
                                "inputTypeSearch": "MuiInputBase-inputTypeSearch-71 MuiInput-inputTypeSearch-56",
                                "marginDense": "MuiInputBase-marginDense-64",
                                "multiline": "MuiInputBase-multiline-65 MuiInput-multiline-50",
                                "root": "MuiInputBase-root-57 MuiInput-root-44",
                              }
                            }
                            fullWidth={false}
                            inputComponent={[Function]}
                            inputProps={
                              Object {
                                "IconComponent": [Function],
                                "MenuProps": undefined,
                                "SelectDisplayProps": undefined,
                                "autoWidth": false,
                                "children": Array [
                                  <WithStyles(MenuItem)
                                    value="circle"
                                  >
                                    circle
                                  </WithStyles(MenuItem)>,
                                  <WithStyles(MenuItem)
                                    value="line"
                                  >
                                    line
                                  </WithStyles(MenuItem)>,
                                  <WithStyles(MenuItem)
                                    value="parabola"
                                  >
                                    parabola
                                  </WithStyles(MenuItem)>,
                                  <WithStyles(MenuItem)
                                    value="point"
                                  >
                                    point
                                  </WithStyles(MenuItem)>,
                                  <WithStyles(MenuItem)
                                    value="polygon"
                                  >
                                    polygon
                                  </WithStyles(MenuItem)>,
                                  <WithStyles(MenuItem)
                                    value="ray"
                                  >
                                    ray
                                  </WithStyles(MenuItem)>,
                                  <WithStyles(MenuItem)
                                    value="segment"
                                  >
                                    segment
                                  </WithStyles(MenuItem)>,
                                  <WithStyles(MenuItem)
                                    value="sine"
                                  >
                                    sine
                                  </WithStyles(MenuItem)>,
                                  <WithStyles(MenuItem)
                                    value="vector"
                                  >
                                    vector
                                  </WithStyles(MenuItem)>,
                                ],
                                "classes": Object {
                                  "disabled": "MuiSelect-disabled-42",
                                  "filled": "MuiSelect-filled-39",
                                  "icon": "MuiSelect-icon-43",
                                  "outlined": "MuiSelect-outlined-40",
                                  "root": "MuiSelect-root-37",
                                  "select": "MuiSelect-select-38",
                                  "selectMenu": "MuiSelect-selectMenu-41",
                                },
                                "displayEmpty": false,
                                "multiple": false,
                                "onClose": undefined,
                                "onOpen": undefined,
                                "open": undefined,
                                "renderValue": undefined,
                                "type": undefined,
                                "variant": undefined,
                              }
                            }
                            multiline={false}
                            onChange={[Function]}
                            type="text"
                          >
                            <div
                              className="MuiInputBase-root-57 MuiInput-root-44"
                              onClick={[Function]}
                            >
                              <SelectInput
                                IconComponent={[Function]}
                                autoWidth={false}
                                className="MuiInputBase-input-67 MuiInput-input-52"
                                classes={
                                  Object {
                                    "disabled": "MuiSelect-disabled-42",
                                    "filled": "MuiSelect-filled-39",
                                    "icon": "MuiSelect-icon-43",
                                    "outlined": "MuiSelect-outlined-40",
                                    "root": "MuiSelect-root-37",
                                    "select": "MuiSelect-select-38",
                                    "selectMenu": "MuiSelect-selectMenu-41",
                                  }
                                }
                                displayEmpty={false}
                                inputRef={[Function]}
                                multiple={false}
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                              >
                                <div
                                  className="MuiSelect-root-37"
                                >
                                  <div
                                    aria-haspopup="true"
                                    aria-pressed="false"
                                    className="MuiSelect-select-38 MuiSelect-selectMenu-41 MuiInputBase-input-67 MuiInput-input-52"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    role="button"
                                    tabIndex={0}
                                  >
                                    <span
                                      dangerouslySetInnerHTML={
                                        Object {
                                          "__html": "&#8203;",
                                        }
                                      }
                                    />
                                  </div>
                                  <input
                                    type="hidden"
                                  />
                                  <pure(ArrowDropDown)
                                    className="MuiSelect-icon-43"
                                  >
                                    <ArrowDropDown
                                      className="MuiSelect-icon-43"
                                    >
                                      <WithStyles(SvgIcon)
                                        className="MuiSelect-icon-43"
                                      >
                                        <SvgIcon
                                          className="MuiSelect-icon-43"
                                          classes={
                                            Object {
                                              "colorAction": "MuiSvgIcon-colorAction-77",
                                              "colorDisabled": "MuiSvgIcon-colorDisabled-79",
                                              "colorError": "MuiSvgIcon-colorError-78",
                                              "colorPrimary": "MuiSvgIcon-colorPrimary-75",
                                              "colorSecondary": "MuiSvgIcon-colorSecondary-76",
                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-80",
                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-82",
                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-81",
                                              "root": "MuiSvgIcon-root-74",
                                            }
                                          }
                                          color="inherit"
                                          component="svg"
                                          fontSize="default"
                                          viewBox="0 0 24 24"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            className="MuiSvgIcon-root-74 MuiSelect-icon-43"
                                            focusable="false"
                                            role="presentation"
                                            viewBox="0 0 24 24"
                                          >
                                            <path
                                              d="M7 10l5 5 5-5z"
                                            />
                                          </svg>
                                        </SvgIcon>
                                      </WithStyles(SvgIcon)>
                                    </ArrowDropDown>
                                  </pure(ArrowDropDown)>
                                  <WithStyles(Menu)
                                    MenuListProps={
                                      Object {
                                        "disableListWrap": true,
                                        "role": "listbox",
                                      }
                                    }
                                    PaperProps={
                                      Object {
                                        "style": Object {
                                          "minWidth": null,
                                        },
                                      }
                                    }
                                    id="menu-"
                                    onClose={[Function]}
                                    open={false}
                                  >
                                    <Menu
                                      MenuListProps={
                                        Object {
                                          "disableListWrap": true,
                                          "role": "listbox",
                                        }
                                      }
                                      PaperProps={
                                        Object {
                                          "style": Object {
                                            "minWidth": null,
                                          },
                                        }
                                      }
                                      classes={
                                        Object {
                                          "paper": "MuiMenu-paper-83",
                                        }
                                      }
                                      disableAutoFocusItem={false}
                                      id="menu-"
                                      onClose={[Function]}
                                      open={false}
                                      theme={
                                        Object {
                                          "breakpoints": Object {
                                            "between": [Function],
                                            "down": [Function],
                                            "keys": Array [
                                              "xs",
                                              "sm",
                                              "md",
                                              "lg",
                                              "xl",
                                            ],
                                            "only": [Function],
                                            "up": [Function],
                                            "values": Object {
                                              "lg": 1280,
                                              "md": 960,
                                              "sm": 600,
                                              "xl": 1920,
                                              "xs": 0,
                                            },
                                            "width": [Function],
                                          },
                                          "direction": "ltr",
                                          "mixins": Object {
                                            "gutters": [Function],
                                            "toolbar": Object {
                                              "@media (min-width:0px) and (orientation: landscape)": Object {
                                                "minHeight": 48,
                                              },
                                              "@media (min-width:600px)": Object {
                                                "minHeight": 64,
                                              },
                                              "minHeight": 56,
                                            },
                                          },
                                          "overrides": Object {},
                                          "palette": Object {
                                            "action": Object {
                                              "active": "rgba(0, 0, 0, 0.54)",
                                              "disabled": "rgba(0, 0, 0, 0.26)",
                                              "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                              "hover": "rgba(0, 0, 0, 0.08)",
                                              "hoverOpacity": 0.08,
                                              "selected": "rgba(0, 0, 0, 0.14)",
                                            },
                                            "augmentColor": [Function],
                                            "background": Object {
                                              "default": "#fafafa",
                                              "paper": "#fff",
                                            },
                                            "common": Object {
                                              "black": "#000",
                                              "white": "#fff",
                                            },
                                            "contrastThreshold": 3,
                                            "divider": "rgba(0, 0, 0, 0.12)",
                                            "error": Object {
                                              "contrastText": "#fff",
                                              "dark": "#d32f2f",
                                              "light": "#e57373",
                                              "main": "#f44336",
                                            },
                                            "getContrastText": [Function],
                                            "grey": Object {
                                              "100": "#f5f5f5",
                                              "200": "#eeeeee",
                                              "300": "#e0e0e0",
                                              "400": "#bdbdbd",
                                              "50": "#fafafa",
                                              "500": "#9e9e9e",
                                              "600": "#757575",
                                              "700": "#616161",
                                              "800": "#424242",
                                              "900": "#212121",
                                              "A100": "#d5d5d5",
                                              "A200": "#aaaaaa",
                                              "A400": "#303030",
                                              "A700": "#616161",
                                            },
                                            "primary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#303f9f",
                                              "light": "#7986cb",
                                              "main": "#3f51b5",
                                            },
                                            "secondary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#c51162",
                                              "light": "#ff4081",
                                              "main": "#f50057",
                                            },
                                            "text": Object {
                                              "disabled": "rgba(0, 0, 0, 0.38)",
                                              "hint": "rgba(0, 0, 0, 0.38)",
                                              "primary": "rgba(0, 0, 0, 0.87)",
                                              "secondary": "rgba(0, 0, 0, 0.54)",
                                            },
                                            "tonalOffset": 0.2,
                                            "type": "light",
                                          },
                                          "props": Object {},
                                          "shadows": Array [
                                            "none",
                                            "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                                            "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                                            "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                          ],
                                          "shape": Object {
                                            "borderRadius": 4,
                                          },
                                          "spacing": Object {
                                            "unit": 8,
                                          },
                                          "transitions": Object {
                                            "create": [Function],
                                            "duration": Object {
                                              "complex": 375,
                                              "enteringScreen": 225,
                                              "leavingScreen": 195,
                                              "short": 250,
                                              "shorter": 200,
                                              "shortest": 150,
                                              "standard": 300,
                                            },
                                            "easing": Object {
                                              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                            },
                                            "getAutoHeightDuration": [Function],
                                          },
                                          "typography": Object {
                                            "body1": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 400,
                                              "lineHeight": "1.46429em",
                                            },
                                            "body1Next": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.5,
                                            },
                                            "body2": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "lineHeight": "1.71429em",
                                            },
                                            "body2Next": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.01071em",
                                              "lineHeight": 1.5,
                                            },
                                            "button": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "textTransform": "uppercase",
                                            },
                                            "buttonNext": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.02857em",
                                              "lineHeight": 1.75,
                                              "textTransform": "uppercase",
                                            },
                                            "caption": Object {
                                              "color": "rgba(0, 0, 0, 0.54)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "lineHeight": "1.375em",
                                            },
                                            "captionNext": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.03333em",
                                              "lineHeight": 1.66,
                                            },
                                            "display1": Object {
                                              "color": "rgba(0, 0, 0, 0.54)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "2.125rem",
                                              "fontWeight": 400,
                                              "lineHeight": "1.20588em",
                                            },
                                            "display2": Object {
                                              "color": "rgba(0, 0, 0, 0.54)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "2.8125rem",
                                              "fontWeight": 400,
                                              "lineHeight": "1.13333em",
                                              "marginLeft": "-.02em",
                                            },
                                            "display3": Object {
                                              "color": "rgba(0, 0, 0, 0.54)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3.5rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "-.02em",
                                              "lineHeight": "1.30357em",
                                              "marginLeft": "-.02em",
                                            },
                                            "display4": Object {
                                              "color": "rgba(0, 0, 0, 0.54)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "7rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-.04em",
                                              "lineHeight": "1.14286em",
                                              "marginLeft": "-.04em",
                                            },
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": 14,
                                            "fontWeightLight": 300,
                                            "fontWeightMedium": 500,
                                            "fontWeightRegular": 400,
                                            "h1": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "6rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.01562em",
                                              "lineHeight": 1,
                                            },
                                            "h2": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3.75rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.00833em",
                                              "lineHeight": 1,
                                            },
                                            "h3": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.04,
                                            },
                                            "h4": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "2.125rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00735em",
                                              "lineHeight": 1.17,
                                            },
                                            "h5": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.5rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.33,
                                            },
                                            "h6": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.25rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.0075em",
                                              "lineHeight": 1.6,
                                            },
                                            "headline": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.5rem",
                                              "fontWeight": 400,
                                              "lineHeight": "1.35417em",
                                            },
                                            "overline": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.08333em",
                                              "lineHeight": 2.66,
                                              "textTransform": "uppercase",
                                            },
                                            "pxToRem": [Function],
                                            "round": [Function],
                                            "subheading": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "lineHeight": "1.5em",
                                            },
                                            "subtitle1": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.75,
                                            },
                                            "subtitle2": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.00714em",
                                              "lineHeight": 1.57,
                                            },
                                            "title": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.3125rem",
                                              "fontWeight": 500,
                                              "lineHeight": "1.16667em",
                                            },
                                            "useNextVariants": false,
                                          },
                                          "zIndex": Object {
                                            "appBar": 1100,
                                            "drawer": 1200,
                                            "mobileStepper": 1000,
                                            "modal": 1300,
                                            "snackbar": 1400,
                                            "tooltip": 1500,
                                          },
                                        }
                                      }
                                      transitionDuration="auto"
                                    >
                                      <WithStyles(Popover)
                                        PaperProps={
                                          Object {
                                            "classes": Object {
                                              "root": "MuiMenu-paper-83",
                                            },
                                            "style": Object {
                                              "minWidth": null,
                                            },
                                          }
                                        }
                                        anchorOrigin={
                                          Object {
                                            "horizontal": "left",
                                            "vertical": "top",
                                          }
                                        }
                                        getContentAnchorEl={[Function]}
                                        id="menu-"
                                        onClose={[Function]}
                                        onEntering={[Function]}
                                        open={false}
                                        transformOrigin={
                                          Object {
                                            "horizontal": "left",
                                            "vertical": "top",
                                          }
                                        }
                                        transitionDuration="auto"
                                      >
                                        <Popover
                                          PaperProps={
                                            Object {
                                              "classes": Object {
                                                "root": "MuiMenu-paper-83",
                                              },
                                              "style": Object {
                                                "minWidth": null,
                                              },
                                            }
                                          }
                                          TransitionComponent={[Function]}
                                          anchorOrigin={
                                            Object {
                                              "horizontal": "left",
                                              "vertical": "top",
                                            }
                                          }
                                          anchorReference="anchorEl"
                                          classes={
                                            Object {
                                              "paper": "MuiPopover-paper-84",
                                            }
                                          }
                                          elevation={8}
                                          getContentAnchorEl={[Function]}
                                          id="menu-"
                                          marginThreshold={16}
                                          onClose={[Function]}
                                          onEntering={[Function]}
                                          open={false}
                                          transformOrigin={
                                            Object {
                                              "horizontal": "left",
                                              "vertical": "top",
                                            }
                                          }
                                          transitionDuration="auto"
                                        >
                                          <WithStyles(Modal)
                                            BackdropProps={
                                              Object {
                                                "invisible": true,
                                              }
                                            }
                                            id="menu-"
                                            onClose={[Function]}
                                            open={false}
                                          >
                                            <Modal
                                              BackdropComponent={[Function]}
                                              BackdropProps={
                                                Object {
                                                  "invisible": true,
                                                }
                                              }
                                              classes={
                                                Object {
                                                  "hidden": "MuiModal-hidden-86",
                                                  "root": "MuiModal-root-85",
                                                }
                                              }
                                              closeAfterTransition={false}
                                              disableAutoFocus={false}
                                              disableBackdropClick={false}
                                              disableEnforceFocus={false}
                                              disableEscapeKeyDown={false}
                                              disablePortal={false}
                                              disableRestoreFocus={false}
                                              hideBackdrop={false}
                                              id="menu-"
                                              keepMounted={false}
                                              manager={
                                                ModalManager {
                                                  "data": Array [],
                                                  "handleContainerOverflow": true,
                                                  "hideSiblingNodes": true,
                                                  "modals": Array [],
                                                }
                                              }
                                              onClose={[Function]}
                                              open={false}
                                            />
                                          </WithStyles(Modal)>
                                        </Popover>
                                      </WithStyles(Popover)>
                                    </Menu>
                                  </WithStyles(Menu)>
                                </div>
                              </SelectInput>
                            </div>
                          </InputBase>
                        </WithFormControlContext(InputBase)>
                      </WithStyles(WithFormControlContext(InputBase))>
                    </Input>
                  </WithStyles(Input)>
                </Select>
              </WithFormControlContext(Select)>
            </WithStyles(WithFormControlContext(Select))>
          </div>
        </div>
        <div />
      </div>
    </Tools>
    <div>
      <div>
        Correct Answer
      </div>
      <WithStyles(Tooltip)
        classes={
          Object {
            "tooltip": undefined,
          }
        }
        disableFocusListener={true}
        disableTouchListener={true}
        placement="right"
        title="At least 1 graph object should be defined."
      >
        <Tooltip
          TransitionComponent={[Function]}
          classes={
            Object {
              "popper": "MuiTooltip-popper-87",
              "popperInteractive": "MuiTooltip-popperInteractive-88",
              "tooltip": "MuiTooltip-tooltip-89",
              "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom-94",
              "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft-91",
              "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight-92",
              "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop-93",
              "touch": "MuiTooltip-touch-90",
            }
          }
          disableFocusListener={true}
          disableHoverListener={false}
          disableTouchListener={true}
          enterDelay={0}
          enterTouchDelay={1000}
          interactive={false}
          leaveDelay={0}
          leaveTouchDelay={1500}
          placement="right"
          theme={
            Object {
              "breakpoints": Object {
                "between": [Function],
                "down": [Function],
                "keys": Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ],
                "only": [Function],
                "up": [Function],
                "values": Object {
                  "lg": 1280,
                  "md": 960,
                  "sm": 600,
                  "xl": 1920,
                  "xs": 0,
                },
                "width": [Function],
              },
              "direction": "ltr",
              "mixins": Object {
                "gutters": [Function],
                "toolbar": Object {
                  "@media (min-width:0px) and (orientation: landscape)": Object {
                    "minHeight": 48,
                  },
                  "@media (min-width:600px)": Object {
                    "minHeight": 64,
                  },
                  "minHeight": 56,
                },
              },
              "overrides": Object {},
              "palette": Object {
                "action": Object {
                  "active": "rgba(0, 0, 0, 0.54)",
                  "disabled": "rgba(0, 0, 0, 0.26)",
                  "disabledBackground": "rgba(0, 0, 0, 0.12)",
                  "hover": "rgba(0, 0, 0, 0.08)",
                  "hoverOpacity": 0.08,
                  "selected": "rgba(0, 0, 0, 0.14)",
                },
                "augmentColor": [Function],
                "background": Object {
                  "default": "#fafafa",
                  "paper": "#fff",
                },
                "common": Object {
                  "black": "#000",
                  "white": "#fff",
                },
                "contrastThreshold": 3,
                "divider": "rgba(0, 0, 0, 0.12)",
                "error": Object {
                  "contrastText": "#fff",
                  "dark": "#d32f2f",
                  "light": "#e57373",
                  "main": "#f44336",
                },
                "getContrastText": [Function],
                "grey": Object {
                  "100": "#f5f5f5",
                  "200": "#eeeeee",
                  "300": "#e0e0e0",
                  "400": "#bdbdbd",
                  "50": "#fafafa",
                  "500": "#9e9e9e",
                  "600": "#757575",
                  "700": "#616161",
                  "800": "#424242",
                  "900": "#212121",
                  "A100": "#d5d5d5",
                  "A200": "#aaaaaa",
                  "A400": "#303030",
                  "A700": "#616161",
                },
                "primary": Object {
                  "contrastText": "#fff",
                  "dark": "#303f9f",
                  "light": "#7986cb",
                  "main": "#3f51b5",
                },
                "secondary": Object {
                  "contrastText": "#fff",
                  "dark": "#c51162",
                  "light": "#ff4081",
                  "main": "#f50057",
                },
                "text": Object {
                  "disabled": "rgba(0, 0, 0, 0.38)",
                  "hint": "rgba(0, 0, 0, 0.38)",
                  "primary": "rgba(0, 0, 0, 0.87)",
                  "secondary": "rgba(0, 0, 0, 0.54)",
                },
                "tonalOffset": 0.2,
                "type": "light",
              },
              "props": Object {},
              "shadows": Array [
                "none",
                "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
              ],
              "shape": Object {
                "borderRadius": 4,
              },
              "spacing": Object {
                "unit": 8,
              },
              "transitions": Object {
                "create": [Function],
                "duration": Object {
                  "complex": 375,
                  "enteringScreen": 225,
                  "leavingScreen": 195,
                  "short": 250,
                  "shorter": 200,
                  "shortest": 150,
                  "standard": 300,
                },
                "easing": Object {
                  "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                  "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                  "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                  "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                },
                "getAutoHeightDuration": [Function],
              },
              "typography": Object {
                "body1": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "0.875rem",
                  "fontWeight": 400,
                  "lineHeight": "1.46429em",
                },
                "body1Next": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "1rem",
                  "fontWeight": 400,
                  "letterSpacing": "0.00938em",
                  "lineHeight": 1.5,
                },
                "body2": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "0.875rem",
                  "fontWeight": 500,
                  "lineHeight": "1.71429em",
                },
                "body2Next": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "0.875rem",
                  "fontWeight": 400,
                  "letterSpacing": "0.01071em",
                  "lineHeight": 1.5,
                },
                "button": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "0.875rem",
                  "fontWeight": 500,
                  "textTransform": "uppercase",
                },
                "buttonNext": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "0.875rem",
                  "fontWeight": 500,
                  "letterSpacing": "0.02857em",
                  "lineHeight": 1.75,
                  "textTransform": "uppercase",
                },
                "caption": Object {
                  "color": "rgba(0, 0, 0, 0.54)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "0.75rem",
                  "fontWeight": 400,
                  "lineHeight": "1.375em",
                },
                "captionNext": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "0.75rem",
                  "fontWeight": 400,
                  "letterSpacing": "0.03333em",
                  "lineHeight": 1.66,
                },
                "display1": Object {
                  "color": "rgba(0, 0, 0, 0.54)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "2.125rem",
                  "fontWeight": 400,
                  "lineHeight": "1.20588em",
                },
                "display2": Object {
                  "color": "rgba(0, 0, 0, 0.54)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "2.8125rem",
                  "fontWeight": 400,
                  "lineHeight": "1.13333em",
                  "marginLeft": "-.02em",
                },
                "display3": Object {
                  "color": "rgba(0, 0, 0, 0.54)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "3.5rem",
                  "fontWeight": 400,
                  "letterSpacing": "-.02em",
                  "lineHeight": "1.30357em",
                  "marginLeft": "-.02em",
                },
                "display4": Object {
                  "color": "rgba(0, 0, 0, 0.54)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "7rem",
                  "fontWeight": 300,
                  "letterSpacing": "-.04em",
                  "lineHeight": "1.14286em",
                  "marginLeft": "-.04em",
                },
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": 14,
                "fontWeightLight": 300,
                "fontWeightMedium": 500,
                "fontWeightRegular": 400,
                "h1": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "6rem",
                  "fontWeight": 300,
                  "letterSpacing": "-0.01562em",
                  "lineHeight": 1,
                },
                "h2": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "3.75rem",
                  "fontWeight": 300,
                  "letterSpacing": "-0.00833em",
                  "lineHeight": 1,
                },
                "h3": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "3rem",
                  "fontWeight": 400,
                  "letterSpacing": "0em",
                  "lineHeight": 1.04,
                },
                "h4": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "2.125rem",
                  "fontWeight": 400,
                  "letterSpacing": "0.00735em",
                  "lineHeight": 1.17,
                },
                "h5": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "1.5rem",
                  "fontWeight": 400,
                  "letterSpacing": "0em",
                  "lineHeight": 1.33,
                },
                "h6": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "1.25rem",
                  "fontWeight": 500,
                  "letterSpacing": "0.0075em",
                  "lineHeight": 1.6,
                },
                "headline": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "1.5rem",
                  "fontWeight": 400,
                  "lineHeight": "1.35417em",
                },
                "overline": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "0.75rem",
                  "fontWeight": 400,
                  "letterSpacing": "0.08333em",
                  "lineHeight": 2.66,
                  "textTransform": "uppercase",
                },
                "pxToRem": [Function],
                "round": [Function],
                "subheading": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "1rem",
                  "fontWeight": 400,
                  "lineHeight": "1.5em",
                },
                "subtitle1": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "1rem",
                  "fontWeight": 400,
                  "letterSpacing": "0.00938em",
                  "lineHeight": 1.75,
                },
                "subtitle2": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "0.875rem",
                  "fontWeight": 500,
                  "letterSpacing": "0.00714em",
                  "lineHeight": 1.57,
                },
                "title": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "1.3125rem",
                  "fontWeight": 500,
                  "lineHeight": "1.16667em",
                },
                "useNextVariants": false,
              },
              "zIndex": Object {
                "appBar": 1100,
                "drawer": 1200,
                "mobileStepper": 1000,
                "modal": 1300,
                "snackbar": 1400,
                "tooltip": 1500,
              },
            }
          }
          title="At least 1 graph object should be defined."
        >
          <RootRef
            rootRef={[Function]}
          >
            <pure(InfoIcon)
              aria-describedby={null}
              className=""
              color="primary"
              fontSize="small"
              onMouseLeave={[Function]}
              onMouseOver={[Function]}
              style={
                Object {
                  "marginBottom": "auto",
                  "marginLeft": "8px",
                }
              }
              title="At least 1 graph object should be defined."
            >
              <InfoIcon
                aria-describedby={null}
                className=""
                color="primary"
                fontSize="small"
                onMouseLeave={[Function]}
                onMouseOver={[Function]}
                style={
                  Object {
                    "marginBottom": "auto",
                    "marginLeft": "8px",
                  }
                }
                title="At least 1 graph object should be defined."
              >
                <WithStyles(SvgIcon)
                  aria-describedby={null}
                  className=""
                  color="primary"
                  fontSize="small"
                  onMouseLeave={[Function]}
                  onMouseOver={[Function]}
                  style={
                    Object {
                      "marginBottom": "auto",
                      "marginLeft": "8px",
                    }
                  }
                  title="At least 1 graph object should be defined."
                >
                  <SvgIcon
                    aria-describedby={null}
                    className=""
                    classes={
                      Object {
                        "colorAction": "MuiSvgIcon-colorAction-77",
                        "colorDisabled": "MuiSvgIcon-colorDisabled-79",
                        "colorError": "MuiSvgIcon-colorError-78",
                        "colorPrimary": "MuiSvgIcon-colorPrimary-75",
                        "colorSecondary": "MuiSvgIcon-colorSecondary-76",
                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-80",
                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-82",
                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-81",
                        "root": "MuiSvgIcon-root-74",
                      }
                    }
                    color="primary"
                    component="svg"
                    fontSize="small"
                    onMouseLeave={[Function]}
                    onMouseOver={[Function]}
                    style={
                      Object {
                        "marginBottom": "auto",
                        "marginLeft": "8px",
                      }
                    }
                    title="At least 1 graph object should be defined."
                    viewBox="0 0 24 24"
                  >
                    <svg
                      aria-describedby={null}
                      aria-hidden="true"
                      className="MuiSvgIcon-root-74 MuiSvgIcon-colorPrimary-75 MuiSvgIcon-fontSizeSmall-81"
                      focusable="false"
                      onMouseLeave={[Function]}
                      onMouseOver={[Function]}
                      role="presentation"
                      style={
                        Object {
                          "marginBottom": "auto",
                          "marginLeft": "8px",
                        }
                      }
                      title="At least 1 graph object should be defined."
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="M0 0h24v24H0z"
                        fill="none"
                      />
                      <path
                        d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z"
                      />
                    </svg>
                  </SvgIcon>
                </WithStyles(SvgIcon)>
              </InfoIcon>
            </pure(InfoIcon)>
          </RootRef>
          <Popper
            className="MuiTooltip-popper-87"
            disablePortal={false}
            id={null}
            open={false}
            placement="right"
            transition={true}
          />
        </Tooltip>
      </WithStyles(Tooltip)>
    </div>
    <Root
      axesSettings={
        Object {
          "includeArrows": Object {
            "down": true,
            "left": true,
            "right": true,
            "up": true,
          },
        }
      }
      backgroundMarks={Array []}
      coordinatesOnHover={false}
      disabledLabels={true}
      disabledTitle={true}
      domain={
        Object {
          "axisLabel": "x",
          "labelStep": 1,
          "max": 5,
          "min": -5,
          "step": 1,
        }
      }
      draggableTools={true}
      labels={Object {}}
      limitLabeling={true}
      marks={Array []}
      mathMlOptions={Object {}}
      onChangeMarks={[Function]}
      onChangeTools={[Function]}
      range={
        Object {
          "axisLabel": "y",
          "labelStep": 1,
          "max": 5,
          "min": -5,
          "step": 1,
        }
      }
      showLabels={true}
      size={
        Object {
          "height": 500,
          "width": 500,
        }
      }
      title=""
      toolbarTools={
        Array [
          "circle",
          "line",
          "label",
          "parabola",
          "point",
          "polygon",
          "ray",
          "segment",
          "sine",
          "vector",
        ]
      }
    >
      <Provider
        store={
          Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          }
        }
      >
        <Connect(WithStyles(GraphWithControls))
          axesSettings={
            Object {
              "includeArrows": Object {
                "down": true,
                "left": true,
                "right": true,
                "up": true,
              },
            }
          }
          backgroundMarks={Array []}
          coordinatesOnHover={false}
          disabledLabels={true}
          disabledTitle={true}
          domain={
            Object {
              "axisLabel": "x",
              "labelStep": 1,
              "max": 5,
              "min": -5,
              "step": 1,
            }
          }
          draggableTools={true}
          labels={Object {}}
          limitLabeling={true}
          mathMlOptions={Object {}}
          onChangeTools={[Function]}
          range={
            Object {
              "axisLabel": "y",
              "labelStep": 1,
              "max": 5,
              "min": -5,
              "step": 1,
            }
          }
          showLabels={true}
          size={
            Object {
              "height": 500,
              "width": 500,
            }
          }
          title=""
          toolbarTools={
            Array [
              "circle",
              "line",
              "label",
              "parabola",
              "point",
              "polygon",
              "ray",
              "segment",
              "sine",
              "vector",
            ]
          }
        >
          <WithStyles(GraphWithControls)
            axesSettings={
              Object {
                "includeArrows": Object {
                  "down": true,
                  "left": true,
                  "right": true,
                  "up": true,
                },
              }
            }
            backgroundMarks={Array []}
            coordinatesOnHover={false}
            disabledLabels={true}
            disabledTitle={true}
            domain={
              Object {
                "axisLabel": "x",
                "labelStep": 1,
                "max": 5,
                "min": -5,
                "step": 1,
              }
            }
            draggableTools={true}
            labels={Object {}}
            limitLabeling={true}
            marks={Array []}
            mathMlOptions={Object {}}
            onChangeMarks={[Function]}
            onChangeTools={[Function]}
            onRedo={[Function]}
            onReset={[Function]}
            onUndo={[Function]}
            range={
              Object {
                "axisLabel": "y",
                "labelStep": 1,
                "max": 5,
                "min": -5,
                "step": 1,
              }
            }
            showLabels={true}
            size={
              Object {
                "height": 500,
                "width": 500,
              }
            }
            title=""
            toolbarTools={
              Array [
                "circle",
                "line",
                "label",
                "parabola",
                "point",
                "polygon",
                "ray",
                "segment",
                "sine",
                "vector",
              ]
            }
          >
            <GraphWithControls
              axesSettings={
                Object {
                  "includeArrows": Object {
                    "down": true,
                    "left": true,
                    "right": true,
                    "up": true,
                  },
                }
              }
              backgroundMarks={Array []}
              classes={
                Object {
                  "controls": "GraphWithControls-controls-96",
                  "details": "GraphWithControls-details-100",
                  "expansionPanel": "GraphWithControls-expansionPanel-97",
                  "graphWithControls": "GraphWithControls-graphWithControls-95",
                  "summaryContent": "GraphWithControls-summaryContent-99",
                  "summaryRoot": "GraphWithControls-summaryRoot-98",
                }
              }
              collapsibleToolbar={false}
              collapsibleToolbarTitle=""
              coordinatesOnHover={false}
              disabledLabels={true}
              disabledTitle={true}
              domain={
                Object {
                  "axisLabel": "x",
                  "labelStep": 1,
                  "max": 5,
                  "min": -5,
                  "step": 1,
                }
              }
              draggableTools={true}
              labels={Object {}}
              limitLabeling={true}
              marks={Array []}
              mathMlOptions={Object {}}
              onChangeMarks={[Function]}
              onChangeTools={[Function]}
              onRedo={[Function]}
              onReset={[Function]}
              onUndo={[Function]}
              range={
                Object {
                  "axisLabel": "y",
                  "labelStep": 1,
                  "max": 5,
                  "min": -5,
                  "step": 1,
                }
              }
              showLabels={true}
              showTitle={true}
              size={
                Object {
                  "height": 500,
                  "width": 500,
                }
              }
              title=""
              toolbarTools={
                Array [
                  "circle",
                  "line",
                  "label",
                  "parabola",
                  "point",
                  "polygon",
                  "ray",
                  "segment",
                  "sine",
                  "vector",
                ]
              }
            >
              <div
                className="GraphWithControls-graphWithControls-95"
              >
                <div
                  className="GraphWithControls-controls-96"
                >
                  <ToolMenu
                    currentToolType="circle"
                    disabled={false}
                    draggableTools={true}
                    labelModeEnabled={false}
                    onChange={[Function]}
                    onChangeTools={[Function]}
                    toolbarTools={
                      Array [
                        "circle",
                        "line",
                        "label",
                        "parabola",
                        "point",
                        "polygon",
                        "ray",
                        "segment",
                        "sine",
                        "vector",
                      ]
                    }
                  >
                    <div
                      className=""
                    >
                      <Component
                        disabled={false}
                        draggableTools={true}
                        onChange={[Function]}
                        onChangeToolsOrder={[Function]}
                        options={
                          Array [
                            "circle",
                            "line",
                            "label",
                            "parabola",
                            "point",
                            "polygon",
                            "ray",
                            "segment",
                            "sine",
                            "vector",
                          ]
                        }
                        selectedToolType="circle"
                      >
                        <Memo(DndProvider)
                          backend={[Function]}
                          context={[Window]}
                          options={
                            Object {
                              "backends": Array [
                                Object {
                                  "backend": [Function],
                                },
                                Object {
                                  "backend": [Function],
                                  "options": Object {
                                    "enableMouseEvents": true,
                                    "enableTouchEvents": true,
                                  },
                                  "preview": true,
                                  "skipDispatchOnTransition": true,
                                  "transition": Object {
                                    "_isMBTransition": true,
                                    "check": [Function],
                                    "event": "touchstart",
                                  },
                                },
                              ],
                            }
                          }
                        >
                          <WithStyles(ToggleBar)
                            disabled={false}
                            draggableTools={true}
                            onChange={[Function]}
                            onChangeToolsOrder={[Function]}
                            options={
                              Array [
                                "circle",
                                "line",
                                "label",
                                "parabola",
                                "point",
                                "polygon",
                                "ray",
                                "segment",
                                "sine",
                                "vector",
                              ]
                            }
                            selectedToolType="circle"
                          >
                            <ToggleBar
                              classes={
                                Object {
                                  "button": "ToggleBar-button-102",
                                  "hidden": "ToggleBar-hidden-105",
                                  "toolsContainer": "ToggleBar-toolsContainer-101",
                                  "under": "ToggleBar-under-103",
                                  "wrapper": "ToggleBar-wrapper-104",
                                }
                              }
                              disabled={false}
                              draggableTools={true}
                              onChange={[Function]}
                              onChangeToolsOrder={[Function]}
                              options={
                                Array [
                                  "circle",
                                  "line",
                                  "label",
                                  "parabola",
                                  "point",
                                  "polygon",
                                  "ray",
                                  "segment",
                                  "sine",
                                  "vector",
                                ]
                              }
                              selectedToolType="circle"
                            >
                              <div
                                className="ToggleBar-toolsContainer-101"
                              >
                                <DropTarget(DragSource(Item))
                                  classes={
                                    Object {
                                      "button": "ToggleBar-button-102",
                                      "hidden": "ToggleBar-hidden-105",
                                      "toolsContainer": "ToggleBar-toolsContainer-101",
                                      "under": "ToggleBar-under-103",
                                      "wrapper": "ToggleBar-wrapper-104",
                                    }
                                  }
                                  draggable={true}
                                  index={0}
                                  key="circle"
                                  moveTool={[Function]}
                                  toolRef={
                                    Object {
                                      "current": <div
                                        class="ToggleBar-wrapper-104"
                                      >
                                        <div
                                          draggable="true"
                                        >
                                          <button
                                            class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 Component-selected-107 ToggleBar-button-102"
                                            tabindex="0"
                                            type="button"
                                            value="circle"
                                          >
                                            <span
                                              class="MuiButton-label-111"
                                            >
                                              Circle
                                            </span>
                                            <span
                                              class="MuiTouchRipple-root-190"
                                            />
                                          </button>
                                        </div>
                                        <div
                                          class="ToggleBar-under-103"
                                        >
                                          <button
                                            class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 Component-selected-107 ToggleBar-button-102"
                                            tabindex="0"
                                            type="button"
                                            value="circle"
                                          >
                                            <span
                                              class="MuiButton-label-111"
                                            >
                                              Circle
                                            </span>
                                            <span
                                              class="MuiTouchRipple-root-190"
                                            />
                                          </button>
                                        </div>
                                      </div>,
                                    }
                                  }
                                >
                                  <DragSource(Item)
                                    classes={
                                      Object {
                                        "button": "ToggleBar-button-102",
                                        "hidden": "ToggleBar-hidden-105",
                                        "toolsContainer": "ToggleBar-toolsContainer-101",
                                        "under": "ToggleBar-under-103",
                                        "wrapper": "ToggleBar-wrapper-104",
                                      }
                                    }
                                    connectDropTarget={[Function]}
                                    draggable={true}
                                    index={0}
                                    moveTool={[Function]}
                                    toolRef={
                                      Object {
                                        "current": <div
                                          class="ToggleBar-wrapper-104"
                                        >
                                          <div
                                            draggable="true"
                                          >
                                            <button
                                              class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 Component-selected-107 ToggleBar-button-102"
                                              tabindex="0"
                                              type="button"
                                              value="circle"
                                            >
                                              <span
                                                class="MuiButton-label-111"
                                              >
                                                Circle
                                              </span>
                                              <span
                                                class="MuiTouchRipple-root-190"
                                              />
                                            </button>
                                          </div>
                                          <div
                                            class="ToggleBar-under-103"
                                          >
                                            <button
                                              class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 Component-selected-107 ToggleBar-button-102"
                                              tabindex="0"
                                              type="button"
                                              value="circle"
                                            >
                                              <span
                                                class="MuiButton-label-111"
                                              >
                                                Circle
                                              </span>
                                              <span
                                                class="MuiTouchRipple-root-190"
                                              />
                                            </button>
                                          </div>
                                        </div>,
                                      }
                                    }
                                  >
                                    <Item
                                      classes={
                                        Object {
                                          "button": "ToggleBar-button-102",
                                          "hidden": "ToggleBar-hidden-105",
                                          "toolsContainer": "ToggleBar-toolsContainer-101",
                                          "under": "ToggleBar-under-103",
                                          "wrapper": "ToggleBar-wrapper-104",
                                        }
                                      }
                                      connectDragPreview={[Function]}
                                      connectDragSource={[Function]}
                                      connectDropTarget={[Function]}
                                      draggable={true}
                                      index={0}
                                      isDragging={false}
                                      moveTool={[Function]}
                                      toolRef={
                                        Object {
                                          "current": <div
                                            class="ToggleBar-wrapper-104"
                                          >
                                            <div
                                              draggable="true"
                                            >
                                              <button
                                                class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 Component-selected-107 ToggleBar-button-102"
                                                tabindex="0"
                                                type="button"
                                                value="circle"
                                              >
                                                <span
                                                  class="MuiButton-label-111"
                                                >
                                                  Circle
                                                </span>
                                                <span
                                                  class="MuiTouchRipple-root-190"
                                                />
                                              </button>
                                            </div>
                                            <div
                                              class="ToggleBar-under-103"
                                            >
                                              <button
                                                class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 Component-selected-107 ToggleBar-button-102"
                                                tabindex="0"
                                                type="button"
                                                value="circle"
                                              >
                                                <span
                                                  class="MuiButton-label-111"
                                                >
                                                  Circle
                                                </span>
                                                <span
                                                  class="MuiTouchRipple-root-190"
                                                />
                                              </button>
                                            </div>
                                          </div>,
                                        }
                                      }
                                    >
                                      <div
                                        className="ToggleBar-wrapper-104"
                                      >
                                        <div
                                          className={false}
                                        >
                                          <WithStyles(Component)
                                            className="ToggleBar-button-102"
                                            disableRipple={true}
                                            disabled={false}
                                            onClick={[Function]}
                                            selected={true}
                                            value="circle"
                                          >
                                            <Component
                                              className="ToggleBar-button-102"
                                              classes={
                                                Object {
                                                  "disabled": "Component-disabled-109",
                                                  "notSelected": "Component-notSelected-108",
                                                  "root": "Component-root-106",
                                                  "selected": "Component-selected-107",
                                                }
                                              }
                                              disableRipple={true}
                                              disabled={false}
                                              onClick={[Function]}
                                              selected={true}
                                              value="circle"
                                            >
                                              <WithStyles(Button)
                                                className="Component-root-106 Component-selected-107 ToggleBar-button-102"
                                                classes={
                                                  Object {
                                                    "disabled": "",
                                                  }
                                                }
                                                disabled={false}
                                                key="circle"
                                                onClick={[Function]}
                                                size="small"
                                                value="circle"
                                                variant="outlined"
                                              >
                                                <Button
                                                  className="Component-root-106 Component-selected-107 ToggleBar-button-102"
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiButton-colorInherit-131",
                                                      "contained": "MuiButton-contained-121",
                                                      "containedPrimary": "MuiButton-containedPrimary-122",
                                                      "containedSecondary": "MuiButton-containedSecondary-123",
                                                      "disabled": "MuiButton-disabled-130",
                                                      "extendedFab": "MuiButton-extendedFab-128",
                                                      "fab": "MuiButton-fab-127",
                                                      "flat": "MuiButton-flat-115",
                                                      "flatPrimary": "MuiButton-flatPrimary-116",
                                                      "flatSecondary": "MuiButton-flatSecondary-117",
                                                      "focusVisible": "MuiButton-focusVisible-129",
                                                      "fullWidth": "MuiButton-fullWidth-135",
                                                      "label": "MuiButton-label-111",
                                                      "mini": "MuiButton-mini-132",
                                                      "outlined": "MuiButton-outlined-118",
                                                      "outlinedPrimary": "MuiButton-outlinedPrimary-119",
                                                      "outlinedSecondary": "MuiButton-outlinedSecondary-120",
                                                      "raised": "MuiButton-raised-124",
                                                      "raisedPrimary": "MuiButton-raisedPrimary-125",
                                                      "raisedSecondary": "MuiButton-raisedSecondary-126",
                                                      "root": "MuiButton-root-110",
                                                      "sizeLarge": "MuiButton-sizeLarge-134",
                                                      "sizeSmall": "MuiButton-sizeSmall-133",
                                                      "text": "MuiButton-text-112",
                                                      "textPrimary": "MuiButton-textPrimary-113",
                                                      "textSecondary": "MuiButton-textSecondary-114",
                                                    }
                                                  }
                                                  color="default"
                                                  component="button"
                                                  disableFocusRipple={false}
                                                  disabled={false}
                                                  fullWidth={false}
                                                  mini={false}
                                                  onClick={[Function]}
                                                  size="small"
                                                  type="button"
                                                  value="circle"
                                                  variant="outlined"
                                                >
                                                  <WithStyles(ButtonBase)
                                                    className="MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 Component-selected-107 ToggleBar-button-102"
                                                    component="button"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    focusVisibleClassName="MuiButton-focusVisible-129"
                                                    onClick={[Function]}
                                                    type="button"
                                                    value="circle"
                                                  >
                                                    <ButtonBase
                                                      centerRipple={false}
                                                      className="MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 Component-selected-107 ToggleBar-button-102"
                                                      classes={
                                                        Object {
                                                          "disabled": "MuiButtonBase-disabled-137",
                                                          "focusVisible": "MuiButtonBase-focusVisible-138",
                                                          "root": "MuiButtonBase-root-136",
                                                        }
                                                      }
                                                      component="button"
                                                      disableRipple={false}
                                                      disableTouchRipple={false}
                                                      disabled={false}
                                                      focusRipple={true}
                                                      focusVisibleClassName="MuiButton-focusVisible-129"
                                                      onClick={[Function]}
                                                      tabIndex="0"
                                                      type="button"
                                                      value="circle"
                                                    >
                                                      <button
                                                        className="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 Component-selected-107 ToggleBar-button-102"
                                                        disabled={false}
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onContextMenu={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        tabIndex="0"
                                                        type="button"
                                                        value="circle"
                                                      >
                                                        <span
                                                          className="MuiButton-label-111"
                                                        >
                                                          Circle
                                                        </span>
                                                        <NoSsr
                                                          defer={false}
                                                          fallback={null}
                                                        >
                                                          <WithStyles(TouchRipple)
                                                            center={false}
                                                            innerRef={[Function]}
                                                          >
                                                            <TouchRipple
                                                              center={false}
                                                              classes={
                                                                Object {
                                                                  "child": "MuiTouchRipple-child-194",
                                                                  "childLeaving": "MuiTouchRipple-childLeaving-195",
                                                                  "childPulsate": "MuiTouchRipple-childPulsate-196",
                                                                  "ripple": "MuiTouchRipple-ripple-191",
                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate-193",
                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible-192",
                                                                  "root": "MuiTouchRipple-root-190",
                                                                }
                                                              }
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                className="MuiTouchRipple-root-190"
                                                                component="span"
                                                                enter={true}
                                                                exit={true}
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root-190"
                                                                />
                                                              </TransitionGroup>
                                                            </TouchRipple>
                                                          </WithStyles(TouchRipple)>
                                                        </NoSsr>
                                                      </button>
                                                    </ButtonBase>
                                                  </WithStyles(ButtonBase)>
                                                </Button>
                                              </WithStyles(Button)>
                                            </Component>
                                          </WithStyles(Component)>
                                        </div>
                                        <div
                                          className="ToggleBar-under-103"
                                        >
                                          <WithStyles(Component)
                                            className="ToggleBar-button-102"
                                            disableRipple={true}
                                            disabled={false}
                                            onClick={[Function]}
                                            selected={true}
                                            value="circle"
                                          >
                                            <Component
                                              className="ToggleBar-button-102"
                                              classes={
                                                Object {
                                                  "disabled": "Component-disabled-109",
                                                  "notSelected": "Component-notSelected-108",
                                                  "root": "Component-root-106",
                                                  "selected": "Component-selected-107",
                                                }
                                              }
                                              disableRipple={true}
                                              disabled={false}
                                              onClick={[Function]}
                                              selected={true}
                                              value="circle"
                                            >
                                              <WithStyles(Button)
                                                className="Component-root-106 Component-selected-107 ToggleBar-button-102"
                                                classes={
                                                  Object {
                                                    "disabled": "",
                                                  }
                                                }
                                                disabled={false}
                                                key="circle"
                                                onClick={[Function]}
                                                size="small"
                                                value="circle"
                                                variant="outlined"
                                              >
                                                <Button
                                                  className="Component-root-106 Component-selected-107 ToggleBar-button-102"
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiButton-colorInherit-131",
                                                      "contained": "MuiButton-contained-121",
                                                      "containedPrimary": "MuiButton-containedPrimary-122",
                                                      "containedSecondary": "MuiButton-containedSecondary-123",
                                                      "disabled": "MuiButton-disabled-130",
                                                      "extendedFab": "MuiButton-extendedFab-128",
                                                      "fab": "MuiButton-fab-127",
                                                      "flat": "MuiButton-flat-115",
                                                      "flatPrimary": "MuiButton-flatPrimary-116",
                                                      "flatSecondary": "MuiButton-flatSecondary-117",
                                                      "focusVisible": "MuiButton-focusVisible-129",
                                                      "fullWidth": "MuiButton-fullWidth-135",
                                                      "label": "MuiButton-label-111",
                                                      "mini": "MuiButton-mini-132",
                                                      "outlined": "MuiButton-outlined-118",
                                                      "outlinedPrimary": "MuiButton-outlinedPrimary-119",
                                                      "outlinedSecondary": "MuiButton-outlinedSecondary-120",
                                                      "raised": "MuiButton-raised-124",
                                                      "raisedPrimary": "MuiButton-raisedPrimary-125",
                                                      "raisedSecondary": "MuiButton-raisedSecondary-126",
                                                      "root": "MuiButton-root-110",
                                                      "sizeLarge": "MuiButton-sizeLarge-134",
                                                      "sizeSmall": "MuiButton-sizeSmall-133",
                                                      "text": "MuiButton-text-112",
                                                      "textPrimary": "MuiButton-textPrimary-113",
                                                      "textSecondary": "MuiButton-textSecondary-114",
                                                    }
                                                  }
                                                  color="default"
                                                  component="button"
                                                  disableFocusRipple={false}
                                                  disabled={false}
                                                  fullWidth={false}
                                                  mini={false}
                                                  onClick={[Function]}
                                                  size="small"
                                                  type="button"
                                                  value="circle"
                                                  variant="outlined"
                                                >
                                                  <WithStyles(ButtonBase)
                                                    className="MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 Component-selected-107 ToggleBar-button-102"
                                                    component="button"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    focusVisibleClassName="MuiButton-focusVisible-129"
                                                    onClick={[Function]}
                                                    type="button"
                                                    value="circle"
                                                  >
                                                    <ButtonBase
                                                      centerRipple={false}
                                                      className="MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 Component-selected-107 ToggleBar-button-102"
                                                      classes={
                                                        Object {
                                                          "disabled": "MuiButtonBase-disabled-137",
                                                          "focusVisible": "MuiButtonBase-focusVisible-138",
                                                          "root": "MuiButtonBase-root-136",
                                                        }
                                                      }
                                                      component="button"
                                                      disableRipple={false}
                                                      disableTouchRipple={false}
                                                      disabled={false}
                                                      focusRipple={true}
                                                      focusVisibleClassName="MuiButton-focusVisible-129"
                                                      onClick={[Function]}
                                                      tabIndex="0"
                                                      type="button"
                                                      value="circle"
                                                    >
                                                      <button
                                                        className="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 Component-selected-107 ToggleBar-button-102"
                                                        disabled={false}
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onContextMenu={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        tabIndex="0"
                                                        type="button"
                                                        value="circle"
                                                      >
                                                        <span
                                                          className="MuiButton-label-111"
                                                        >
                                                          Circle
                                                        </span>
                                                        <NoSsr
                                                          defer={false}
                                                          fallback={null}
                                                        >
                                                          <WithStyles(TouchRipple)
                                                            center={false}
                                                            innerRef={[Function]}
                                                          >
                                                            <TouchRipple
                                                              center={false}
                                                              classes={
                                                                Object {
                                                                  "child": "MuiTouchRipple-child-194",
                                                                  "childLeaving": "MuiTouchRipple-childLeaving-195",
                                                                  "childPulsate": "MuiTouchRipple-childPulsate-196",
                                                                  "ripple": "MuiTouchRipple-ripple-191",
                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate-193",
                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible-192",
                                                                  "root": "MuiTouchRipple-root-190",
                                                                }
                                                              }
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                className="MuiTouchRipple-root-190"
                                                                component="span"
                                                                enter={true}
                                                                exit={true}
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root-190"
                                                                />
                                                              </TransitionGroup>
                                                            </TouchRipple>
                                                          </WithStyles(TouchRipple)>
                                                        </NoSsr>
                                                      </button>
                                                    </ButtonBase>
                                                  </WithStyles(ButtonBase)>
                                                </Button>
                                              </WithStyles(Button)>
                                            </Component>
                                          </WithStyles(Component)>
                                        </div>
                                      </div>
                                    </Item>
                                  </DragSource(Item)>
                                </DropTarget(DragSource(Item))>
                                <DropTarget(DragSource(Item))
                                  classes={
                                    Object {
                                      "button": "ToggleBar-button-102",
                                      "hidden": "ToggleBar-hidden-105",
                                      "toolsContainer": "ToggleBar-toolsContainer-101",
                                      "under": "ToggleBar-under-103",
                                      "wrapper": "ToggleBar-wrapper-104",
                                    }
                                  }
                                  draggable={true}
                                  index={1}
                                  key="line"
                                  moveTool={[Function]}
                                  toolRef={
                                    Object {
                                      "current": <div
                                        class="ToggleBar-wrapper-104"
                                      >
                                        <div
                                          draggable="true"
                                        >
                                          <button
                                            class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                            tabindex="0"
                                            type="button"
                                            value="line"
                                          >
                                            <span
                                              class="MuiButton-label-111"
                                            >
                                              Line
                                            </span>
                                            <span
                                              class="MuiTouchRipple-root-190"
                                            />
                                          </button>
                                        </div>
                                        <div
                                          class="ToggleBar-under-103"
                                        >
                                          <button
                                            class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                            tabindex="0"
                                            type="button"
                                            value="line"
                                          >
                                            <span
                                              class="MuiButton-label-111"
                                            >
                                              Line
                                            </span>
                                            <span
                                              class="MuiTouchRipple-root-190"
                                            />
                                          </button>
                                        </div>
                                      </div>,
                                    }
                                  }
                                >
                                  <DragSource(Item)
                                    classes={
                                      Object {
                                        "button": "ToggleBar-button-102",
                                        "hidden": "ToggleBar-hidden-105",
                                        "toolsContainer": "ToggleBar-toolsContainer-101",
                                        "under": "ToggleBar-under-103",
                                        "wrapper": "ToggleBar-wrapper-104",
                                      }
                                    }
                                    connectDropTarget={[Function]}
                                    draggable={true}
                                    index={1}
                                    moveTool={[Function]}
                                    toolRef={
                                      Object {
                                        "current": <div
                                          class="ToggleBar-wrapper-104"
                                        >
                                          <div
                                            draggable="true"
                                          >
                                            <button
                                              class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                              tabindex="0"
                                              type="button"
                                              value="line"
                                            >
                                              <span
                                                class="MuiButton-label-111"
                                              >
                                                Line
                                              </span>
                                              <span
                                                class="MuiTouchRipple-root-190"
                                              />
                                            </button>
                                          </div>
                                          <div
                                            class="ToggleBar-under-103"
                                          >
                                            <button
                                              class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                              tabindex="0"
                                              type="button"
                                              value="line"
                                            >
                                              <span
                                                class="MuiButton-label-111"
                                              >
                                                Line
                                              </span>
                                              <span
                                                class="MuiTouchRipple-root-190"
                                              />
                                            </button>
                                          </div>
                                        </div>,
                                      }
                                    }
                                  >
                                    <Item
                                      classes={
                                        Object {
                                          "button": "ToggleBar-button-102",
                                          "hidden": "ToggleBar-hidden-105",
                                          "toolsContainer": "ToggleBar-toolsContainer-101",
                                          "under": "ToggleBar-under-103",
                                          "wrapper": "ToggleBar-wrapper-104",
                                        }
                                      }
                                      connectDragPreview={[Function]}
                                      connectDragSource={[Function]}
                                      connectDropTarget={[Function]}
                                      draggable={true}
                                      index={1}
                                      isDragging={false}
                                      moveTool={[Function]}
                                      toolRef={
                                        Object {
                                          "current": <div
                                            class="ToggleBar-wrapper-104"
                                          >
                                            <div
                                              draggable="true"
                                            >
                                              <button
                                                class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                tabindex="0"
                                                type="button"
                                                value="line"
                                              >
                                                <span
                                                  class="MuiButton-label-111"
                                                >
                                                  Line
                                                </span>
                                                <span
                                                  class="MuiTouchRipple-root-190"
                                                />
                                              </button>
                                            </div>
                                            <div
                                              class="ToggleBar-under-103"
                                            >
                                              <button
                                                class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                tabindex="0"
                                                type="button"
                                                value="line"
                                              >
                                                <span
                                                  class="MuiButton-label-111"
                                                >
                                                  Line
                                                </span>
                                                <span
                                                  class="MuiTouchRipple-root-190"
                                                />
                                              </button>
                                            </div>
                                          </div>,
                                        }
                                      }
                                    >
                                      <div
                                        className="ToggleBar-wrapper-104"
                                      >
                                        <div
                                          className={false}
                                        >
                                          <WithStyles(Component)
                                            className="ToggleBar-button-102"
                                            disableRipple={true}
                                            disabled={false}
                                            onClick={[Function]}
                                            selected={false}
                                            value="line"
                                          >
                                            <Component
                                              className="ToggleBar-button-102"
                                              classes={
                                                Object {
                                                  "disabled": "Component-disabled-109",
                                                  "notSelected": "Component-notSelected-108",
                                                  "root": "Component-root-106",
                                                  "selected": "Component-selected-107",
                                                }
                                              }
                                              disableRipple={true}
                                              disabled={false}
                                              onClick={[Function]}
                                              selected={false}
                                              value="line"
                                            >
                                              <WithStyles(Button)
                                                className="Component-root-106 ToggleBar-button-102"
                                                classes={
                                                  Object {
                                                    "disabled": "",
                                                  }
                                                }
                                                disabled={false}
                                                key="line"
                                                onClick={[Function]}
                                                size="small"
                                                value="line"
                                                variant="outlined"
                                              >
                                                <Button
                                                  className="Component-root-106 ToggleBar-button-102"
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiButton-colorInherit-131",
                                                      "contained": "MuiButton-contained-121",
                                                      "containedPrimary": "MuiButton-containedPrimary-122",
                                                      "containedSecondary": "MuiButton-containedSecondary-123",
                                                      "disabled": "MuiButton-disabled-130",
                                                      "extendedFab": "MuiButton-extendedFab-128",
                                                      "fab": "MuiButton-fab-127",
                                                      "flat": "MuiButton-flat-115",
                                                      "flatPrimary": "MuiButton-flatPrimary-116",
                                                      "flatSecondary": "MuiButton-flatSecondary-117",
                                                      "focusVisible": "MuiButton-focusVisible-129",
                                                      "fullWidth": "MuiButton-fullWidth-135",
                                                      "label": "MuiButton-label-111",
                                                      "mini": "MuiButton-mini-132",
                                                      "outlined": "MuiButton-outlined-118",
                                                      "outlinedPrimary": "MuiButton-outlinedPrimary-119",
                                                      "outlinedSecondary": "MuiButton-outlinedSecondary-120",
                                                      "raised": "MuiButton-raised-124",
                                                      "raisedPrimary": "MuiButton-raisedPrimary-125",
                                                      "raisedSecondary": "MuiButton-raisedSecondary-126",
                                                      "root": "MuiButton-root-110",
                                                      "sizeLarge": "MuiButton-sizeLarge-134",
                                                      "sizeSmall": "MuiButton-sizeSmall-133",
                                                      "text": "MuiButton-text-112",
                                                      "textPrimary": "MuiButton-textPrimary-113",
                                                      "textSecondary": "MuiButton-textSecondary-114",
                                                    }
                                                  }
                                                  color="default"
                                                  component="button"
                                                  disableFocusRipple={false}
                                                  disabled={false}
                                                  fullWidth={false}
                                                  mini={false}
                                                  onClick={[Function]}
                                                  size="small"
                                                  type="button"
                                                  value="line"
                                                  variant="outlined"
                                                >
                                                  <WithStyles(ButtonBase)
                                                    className="MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                    component="button"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    focusVisibleClassName="MuiButton-focusVisible-129"
                                                    onClick={[Function]}
                                                    type="button"
                                                    value="line"
                                                  >
                                                    <ButtonBase
                                                      centerRipple={false}
                                                      className="MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                      classes={
                                                        Object {
                                                          "disabled": "MuiButtonBase-disabled-137",
                                                          "focusVisible": "MuiButtonBase-focusVisible-138",
                                                          "root": "MuiButtonBase-root-136",
                                                        }
                                                      }
                                                      component="button"
                                                      disableRipple={false}
                                                      disableTouchRipple={false}
                                                      disabled={false}
                                                      focusRipple={true}
                                                      focusVisibleClassName="MuiButton-focusVisible-129"
                                                      onClick={[Function]}
                                                      tabIndex="0"
                                                      type="button"
                                                      value="line"
                                                    >
                                                      <button
                                                        className="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                        disabled={false}
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onContextMenu={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        tabIndex="0"
                                                        type="button"
                                                        value="line"
                                                      >
                                                        <span
                                                          className="MuiButton-label-111"
                                                        >
                                                          Line
                                                        </span>
                                                        <NoSsr
                                                          defer={false}
                                                          fallback={null}
                                                        >
                                                          <WithStyles(TouchRipple)
                                                            center={false}
                                                            innerRef={[Function]}
                                                          >
                                                            <TouchRipple
                                                              center={false}
                                                              classes={
                                                                Object {
                                                                  "child": "MuiTouchRipple-child-194",
                                                                  "childLeaving": "MuiTouchRipple-childLeaving-195",
                                                                  "childPulsate": "MuiTouchRipple-childPulsate-196",
                                                                  "ripple": "MuiTouchRipple-ripple-191",
                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate-193",
                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible-192",
                                                                  "root": "MuiTouchRipple-root-190",
                                                                }
                                                              }
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                className="MuiTouchRipple-root-190"
                                                                component="span"
                                                                enter={true}
                                                                exit={true}
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root-190"
                                                                />
                                                              </TransitionGroup>
                                                            </TouchRipple>
                                                          </WithStyles(TouchRipple)>
                                                        </NoSsr>
                                                      </button>
                                                    </ButtonBase>
                                                  </WithStyles(ButtonBase)>
                                                </Button>
                                              </WithStyles(Button)>
                                            </Component>
                                          </WithStyles(Component)>
                                        </div>
                                        <div
                                          className="ToggleBar-under-103"
                                        >
                                          <WithStyles(Component)
                                            className="ToggleBar-button-102"
                                            disableRipple={true}
                                            disabled={false}
                                            onClick={[Function]}
                                            selected={false}
                                            value="line"
                                          >
                                            <Component
                                              className="ToggleBar-button-102"
                                              classes={
                                                Object {
                                                  "disabled": "Component-disabled-109",
                                                  "notSelected": "Component-notSelected-108",
                                                  "root": "Component-root-106",
                                                  "selected": "Component-selected-107",
                                                }
                                              }
                                              disableRipple={true}
                                              disabled={false}
                                              onClick={[Function]}
                                              selected={false}
                                              value="line"
                                            >
                                              <WithStyles(Button)
                                                className="Component-root-106 ToggleBar-button-102"
                                                classes={
                                                  Object {
                                                    "disabled": "",
                                                  }
                                                }
                                                disabled={false}
                                                key="line"
                                                onClick={[Function]}
                                                size="small"
                                                value="line"
                                                variant="outlined"
                                              >
                                                <Button
                                                  className="Component-root-106 ToggleBar-button-102"
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiButton-colorInherit-131",
                                                      "contained": "MuiButton-contained-121",
                                                      "containedPrimary": "MuiButton-containedPrimary-122",
                                                      "containedSecondary": "MuiButton-containedSecondary-123",
                                                      "disabled": "MuiButton-disabled-130",
                                                      "extendedFab": "MuiButton-extendedFab-128",
                                                      "fab": "MuiButton-fab-127",
                                                      "flat": "MuiButton-flat-115",
                                                      "flatPrimary": "MuiButton-flatPrimary-116",
                                                      "flatSecondary": "MuiButton-flatSecondary-117",
                                                      "focusVisible": "MuiButton-focusVisible-129",
                                                      "fullWidth": "MuiButton-fullWidth-135",
                                                      "label": "MuiButton-label-111",
                                                      "mini": "MuiButton-mini-132",
                                                      "outlined": "MuiButton-outlined-118",
                                                      "outlinedPrimary": "MuiButton-outlinedPrimary-119",
                                                      "outlinedSecondary": "MuiButton-outlinedSecondary-120",
                                                      "raised": "MuiButton-raised-124",
                                                      "raisedPrimary": "MuiButton-raisedPrimary-125",
                                                      "raisedSecondary": "MuiButton-raisedSecondary-126",
                                                      "root": "MuiButton-root-110",
                                                      "sizeLarge": "MuiButton-sizeLarge-134",
                                                      "sizeSmall": "MuiButton-sizeSmall-133",
                                                      "text": "MuiButton-text-112",
                                                      "textPrimary": "MuiButton-textPrimary-113",
                                                      "textSecondary": "MuiButton-textSecondary-114",
                                                    }
                                                  }
                                                  color="default"
                                                  component="button"
                                                  disableFocusRipple={false}
                                                  disabled={false}
                                                  fullWidth={false}
                                                  mini={false}
                                                  onClick={[Function]}
                                                  size="small"
                                                  type="button"
                                                  value="line"
                                                  variant="outlined"
                                                >
                                                  <WithStyles(ButtonBase)
                                                    className="MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                    component="button"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    focusVisibleClassName="MuiButton-focusVisible-129"
                                                    onClick={[Function]}
                                                    type="button"
                                                    value="line"
                                                  >
                                                    <ButtonBase
                                                      centerRipple={false}
                                                      className="MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                      classes={
                                                        Object {
                                                          "disabled": "MuiButtonBase-disabled-137",
                                                          "focusVisible": "MuiButtonBase-focusVisible-138",
                                                          "root": "MuiButtonBase-root-136",
                                                        }
                                                      }
                                                      component="button"
                                                      disableRipple={false}
                                                      disableTouchRipple={false}
                                                      disabled={false}
                                                      focusRipple={true}
                                                      focusVisibleClassName="MuiButton-focusVisible-129"
                                                      onClick={[Function]}
                                                      tabIndex="0"
                                                      type="button"
                                                      value="line"
                                                    >
                                                      <button
                                                        className="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                        disabled={false}
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onContextMenu={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        tabIndex="0"
                                                        type="button"
                                                        value="line"
                                                      >
                                                        <span
                                                          className="MuiButton-label-111"
                                                        >
                                                          Line
                                                        </span>
                                                        <NoSsr
                                                          defer={false}
                                                          fallback={null}
                                                        >
                                                          <WithStyles(TouchRipple)
                                                            center={false}
                                                            innerRef={[Function]}
                                                          >
                                                            <TouchRipple
                                                              center={false}
                                                              classes={
                                                                Object {
                                                                  "child": "MuiTouchRipple-child-194",
                                                                  "childLeaving": "MuiTouchRipple-childLeaving-195",
                                                                  "childPulsate": "MuiTouchRipple-childPulsate-196",
                                                                  "ripple": "MuiTouchRipple-ripple-191",
                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate-193",
                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible-192",
                                                                  "root": "MuiTouchRipple-root-190",
                                                                }
                                                              }
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                className="MuiTouchRipple-root-190"
                                                                component="span"
                                                                enter={true}
                                                                exit={true}
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root-190"
                                                                />
                                                              </TransitionGroup>
                                                            </TouchRipple>
                                                          </WithStyles(TouchRipple)>
                                                        </NoSsr>
                                                      </button>
                                                    </ButtonBase>
                                                  </WithStyles(ButtonBase)>
                                                </Button>
                                              </WithStyles(Button)>
                                            </Component>
                                          </WithStyles(Component)>
                                        </div>
                                      </div>
                                    </Item>
                                  </DragSource(Item)>
                                </DropTarget(DragSource(Item))>
                                <DropTarget(DragSource(Item))
                                  classes={
                                    Object {
                                      "button": "ToggleBar-button-102",
                                      "hidden": "ToggleBar-hidden-105",
                                      "toolsContainer": "ToggleBar-toolsContainer-101",
                                      "under": "ToggleBar-under-103",
                                      "wrapper": "ToggleBar-wrapper-104",
                                    }
                                  }
                                  draggable={true}
                                  index={2}
                                  key="label"
                                  moveTool={[Function]}
                                  toolRef={
                                    Object {
                                      "current": <div
                                        class="ToggleBar-wrapper-104"
                                      >
                                        <div
                                          draggable="true"
                                        >
                                          <button
                                            class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                            tabindex="0"
                                            type="button"
                                            value="label"
                                          >
                                            <span
                                              class="MuiButton-label-111"
                                            >
                                              Label
                                            </span>
                                            <span
                                              class="MuiTouchRipple-root-190"
                                            />
                                          </button>
                                        </div>
                                        <div
                                          class="ToggleBar-under-103"
                                        >
                                          <button
                                            class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                            tabindex="0"
                                            type="button"
                                            value="label"
                                          >
                                            <span
                                              class="MuiButton-label-111"
                                            >
                                              Label
                                            </span>
                                            <span
                                              class="MuiTouchRipple-root-190"
                                            />
                                          </button>
                                        </div>
                                      </div>,
                                    }
                                  }
                                >
                                  <DragSource(Item)
                                    classes={
                                      Object {
                                        "button": "ToggleBar-button-102",
                                        "hidden": "ToggleBar-hidden-105",
                                        "toolsContainer": "ToggleBar-toolsContainer-101",
                                        "under": "ToggleBar-under-103",
                                        "wrapper": "ToggleBar-wrapper-104",
                                      }
                                    }
                                    connectDropTarget={[Function]}
                                    draggable={true}
                                    index={2}
                                    moveTool={[Function]}
                                    toolRef={
                                      Object {
                                        "current": <div
                                          class="ToggleBar-wrapper-104"
                                        >
                                          <div
                                            draggable="true"
                                          >
                                            <button
                                              class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                              tabindex="0"
                                              type="button"
                                              value="label"
                                            >
                                              <span
                                                class="MuiButton-label-111"
                                              >
                                                Label
                                              </span>
                                              <span
                                                class="MuiTouchRipple-root-190"
                                              />
                                            </button>
                                          </div>
                                          <div
                                            class="ToggleBar-under-103"
                                          >
                                            <button
                                              class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                              tabindex="0"
                                              type="button"
                                              value="label"
                                            >
                                              <span
                                                class="MuiButton-label-111"
                                              >
                                                Label
                                              </span>
                                              <span
                                                class="MuiTouchRipple-root-190"
                                              />
                                            </button>
                                          </div>
                                        </div>,
                                      }
                                    }
                                  >
                                    <Item
                                      classes={
                                        Object {
                                          "button": "ToggleBar-button-102",
                                          "hidden": "ToggleBar-hidden-105",
                                          "toolsContainer": "ToggleBar-toolsContainer-101",
                                          "under": "ToggleBar-under-103",
                                          "wrapper": "ToggleBar-wrapper-104",
                                        }
                                      }
                                      connectDragPreview={[Function]}
                                      connectDragSource={[Function]}
                                      connectDropTarget={[Function]}
                                      draggable={true}
                                      index={2}
                                      isDragging={false}
                                      moveTool={[Function]}
                                      toolRef={
                                        Object {
                                          "current": <div
                                            class="ToggleBar-wrapper-104"
                                          >
                                            <div
                                              draggable="true"
                                            >
                                              <button
                                                class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                tabindex="0"
                                                type="button"
                                                value="label"
                                              >
                                                <span
                                                  class="MuiButton-label-111"
                                                >
                                                  Label
                                                </span>
                                                <span
                                                  class="MuiTouchRipple-root-190"
                                                />
                                              </button>
                                            </div>
                                            <div
                                              class="ToggleBar-under-103"
                                            >
                                              <button
                                                class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                tabindex="0"
                                                type="button"
                                                value="label"
                                              >
                                                <span
                                                  class="MuiButton-label-111"
                                                >
                                                  Label
                                                </span>
                                                <span
                                                  class="MuiTouchRipple-root-190"
                                                />
                                              </button>
                                            </div>
                                          </div>,
                                        }
                                      }
                                    >
                                      <div
                                        className="ToggleBar-wrapper-104"
                                      >
                                        <div
                                          className={false}
                                        >
                                          <WithStyles(Component)
                                            className="ToggleBar-button-102"
                                            disableRipple={true}
                                            disabled={false}
                                            onClick={[Function]}
                                            selected={false}
                                            value="label"
                                          >
                                            <Component
                                              className="ToggleBar-button-102"
                                              classes={
                                                Object {
                                                  "disabled": "Component-disabled-109",
                                                  "notSelected": "Component-notSelected-108",
                                                  "root": "Component-root-106",
                                                  "selected": "Component-selected-107",
                                                }
                                              }
                                              disableRipple={true}
                                              disabled={false}
                                              onClick={[Function]}
                                              selected={false}
                                              value="label"
                                            >
                                              <WithStyles(Button)
                                                className="Component-root-106 ToggleBar-button-102"
                                                classes={
                                                  Object {
                                                    "disabled": "",
                                                  }
                                                }
                                                disabled={false}
                                                key="label"
                                                onClick={[Function]}
                                                size="small"
                                                value="label"
                                                variant="outlined"
                                              >
                                                <Button
                                                  className="Component-root-106 ToggleBar-button-102"
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiButton-colorInherit-131",
                                                      "contained": "MuiButton-contained-121",
                                                      "containedPrimary": "MuiButton-containedPrimary-122",
                                                      "containedSecondary": "MuiButton-containedSecondary-123",
                                                      "disabled": "MuiButton-disabled-130",
                                                      "extendedFab": "MuiButton-extendedFab-128",
                                                      "fab": "MuiButton-fab-127",
                                                      "flat": "MuiButton-flat-115",
                                                      "flatPrimary": "MuiButton-flatPrimary-116",
                                                      "flatSecondary": "MuiButton-flatSecondary-117",
                                                      "focusVisible": "MuiButton-focusVisible-129",
                                                      "fullWidth": "MuiButton-fullWidth-135",
                                                      "label": "MuiButton-label-111",
                                                      "mini": "MuiButton-mini-132",
                                                      "outlined": "MuiButton-outlined-118",
                                                      "outlinedPrimary": "MuiButton-outlinedPrimary-119",
                                                      "outlinedSecondary": "MuiButton-outlinedSecondary-120",
                                                      "raised": "MuiButton-raised-124",
                                                      "raisedPrimary": "MuiButton-raisedPrimary-125",
                                                      "raisedSecondary": "MuiButton-raisedSecondary-126",
                                                      "root": "MuiButton-root-110",
                                                      "sizeLarge": "MuiButton-sizeLarge-134",
                                                      "sizeSmall": "MuiButton-sizeSmall-133",
                                                      "text": "MuiButton-text-112",
                                                      "textPrimary": "MuiButton-textPrimary-113",
                                                      "textSecondary": "MuiButton-textSecondary-114",
                                                    }
                                                  }
                                                  color="default"
                                                  component="button"
                                                  disableFocusRipple={false}
                                                  disabled={false}
                                                  fullWidth={false}
                                                  mini={false}
                                                  onClick={[Function]}
                                                  size="small"
                                                  type="button"
                                                  value="label"
                                                  variant="outlined"
                                                >
                                                  <WithStyles(ButtonBase)
                                                    className="MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                    component="button"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    focusVisibleClassName="MuiButton-focusVisible-129"
                                                    onClick={[Function]}
                                                    type="button"
                                                    value="label"
                                                  >
                                                    <ButtonBase
                                                      centerRipple={false}
                                                      className="MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                      classes={
                                                        Object {
                                                          "disabled": "MuiButtonBase-disabled-137",
                                                          "focusVisible": "MuiButtonBase-focusVisible-138",
                                                          "root": "MuiButtonBase-root-136",
                                                        }
                                                      }
                                                      component="button"
                                                      disableRipple={false}
                                                      disableTouchRipple={false}
                                                      disabled={false}
                                                      focusRipple={true}
                                                      focusVisibleClassName="MuiButton-focusVisible-129"
                                                      onClick={[Function]}
                                                      tabIndex="0"
                                                      type="button"
                                                      value="label"
                                                    >
                                                      <button
                                                        className="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                        disabled={false}
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onContextMenu={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        tabIndex="0"
                                                        type="button"
                                                        value="label"
                                                      >
                                                        <span
                                                          className="MuiButton-label-111"
                                                        >
                                                          Label
                                                        </span>
                                                        <NoSsr
                                                          defer={false}
                                                          fallback={null}
                                                        >
                                                          <WithStyles(TouchRipple)
                                                            center={false}
                                                            innerRef={[Function]}
                                                          >
                                                            <TouchRipple
                                                              center={false}
                                                              classes={
                                                                Object {
                                                                  "child": "MuiTouchRipple-child-194",
                                                                  "childLeaving": "MuiTouchRipple-childLeaving-195",
                                                                  "childPulsate": "MuiTouchRipple-childPulsate-196",
                                                                  "ripple": "MuiTouchRipple-ripple-191",
                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate-193",
                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible-192",
                                                                  "root": "MuiTouchRipple-root-190",
                                                                }
                                                              }
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                className="MuiTouchRipple-root-190"
                                                                component="span"
                                                                enter={true}
                                                                exit={true}
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root-190"
                                                                />
                                                              </TransitionGroup>
                                                            </TouchRipple>
                                                          </WithStyles(TouchRipple)>
                                                        </NoSsr>
                                                      </button>
                                                    </ButtonBase>
                                                  </WithStyles(ButtonBase)>
                                                </Button>
                                              </WithStyles(Button)>
                                            </Component>
                                          </WithStyles(Component)>
                                        </div>
                                        <div
                                          className="ToggleBar-under-103"
                                        >
                                          <WithStyles(Component)
                                            className="ToggleBar-button-102"
                                            disableRipple={true}
                                            disabled={false}
                                            onClick={[Function]}
                                            selected={false}
                                            value="label"
                                          >
                                            <Component
                                              className="ToggleBar-button-102"
                                              classes={
                                                Object {
                                                  "disabled": "Component-disabled-109",
                                                  "notSelected": "Component-notSelected-108",
                                                  "root": "Component-root-106",
                                                  "selected": "Component-selected-107",
                                                }
                                              }
                                              disableRipple={true}
                                              disabled={false}
                                              onClick={[Function]}
                                              selected={false}
                                              value="label"
                                            >
                                              <WithStyles(Button)
                                                className="Component-root-106 ToggleBar-button-102"
                                                classes={
                                                  Object {
                                                    "disabled": "",
                                                  }
                                                }
                                                disabled={false}
                                                key="label"
                                                onClick={[Function]}
                                                size="small"
                                                value="label"
                                                variant="outlined"
                                              >
                                                <Button
                                                  className="Component-root-106 ToggleBar-button-102"
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiButton-colorInherit-131",
                                                      "contained": "MuiButton-contained-121",
                                                      "containedPrimary": "MuiButton-containedPrimary-122",
                                                      "containedSecondary": "MuiButton-containedSecondary-123",
                                                      "disabled": "MuiButton-disabled-130",
                                                      "extendedFab": "MuiButton-extendedFab-128",
                                                      "fab": "MuiButton-fab-127",
                                                      "flat": "MuiButton-flat-115",
                                                      "flatPrimary": "MuiButton-flatPrimary-116",
                                                      "flatSecondary": "MuiButton-flatSecondary-117",
                                                      "focusVisible": "MuiButton-focusVisible-129",
                                                      "fullWidth": "MuiButton-fullWidth-135",
                                                      "label": "MuiButton-label-111",
                                                      "mini": "MuiButton-mini-132",
                                                      "outlined": "MuiButton-outlined-118",
                                                      "outlinedPrimary": "MuiButton-outlinedPrimary-119",
                                                      "outlinedSecondary": "MuiButton-outlinedSecondary-120",
                                                      "raised": "MuiButton-raised-124",
                                                      "raisedPrimary": "MuiButton-raisedPrimary-125",
                                                      "raisedSecondary": "MuiButton-raisedSecondary-126",
                                                      "root": "MuiButton-root-110",
                                                      "sizeLarge": "MuiButton-sizeLarge-134",
                                                      "sizeSmall": "MuiButton-sizeSmall-133",
                                                      "text": "MuiButton-text-112",
                                                      "textPrimary": "MuiButton-textPrimary-113",
                                                      "textSecondary": "MuiButton-textSecondary-114",
                                                    }
                                                  }
                                                  color="default"
                                                  component="button"
                                                  disableFocusRipple={false}
                                                  disabled={false}
                                                  fullWidth={false}
                                                  mini={false}
                                                  onClick={[Function]}
                                                  size="small"
                                                  type="button"
                                                  value="label"
                                                  variant="outlined"
                                                >
                                                  <WithStyles(ButtonBase)
                                                    className="MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                    component="button"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    focusVisibleClassName="MuiButton-focusVisible-129"
                                                    onClick={[Function]}
                                                    type="button"
                                                    value="label"
                                                  >
                                                    <ButtonBase
                                                      centerRipple={false}
                                                      className="MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                      classes={
                                                        Object {
                                                          "disabled": "MuiButtonBase-disabled-137",
                                                          "focusVisible": "MuiButtonBase-focusVisible-138",
                                                          "root": "MuiButtonBase-root-136",
                                                        }
                                                      }
                                                      component="button"
                                                      disableRipple={false}
                                                      disableTouchRipple={false}
                                                      disabled={false}
                                                      focusRipple={true}
                                                      focusVisibleClassName="MuiButton-focusVisible-129"
                                                      onClick={[Function]}
                                                      tabIndex="0"
                                                      type="button"
                                                      value="label"
                                                    >
                                                      <button
                                                        className="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                        disabled={false}
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onContextMenu={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        tabIndex="0"
                                                        type="button"
                                                        value="label"
                                                      >
                                                        <span
                                                          className="MuiButton-label-111"
                                                        >
                                                          Label
                                                        </span>
                                                        <NoSsr
                                                          defer={false}
                                                          fallback={null}
                                                        >
                                                          <WithStyles(TouchRipple)
                                                            center={false}
                                                            innerRef={[Function]}
                                                          >
                                                            <TouchRipple
                                                              center={false}
                                                              classes={
                                                                Object {
                                                                  "child": "MuiTouchRipple-child-194",
                                                                  "childLeaving": "MuiTouchRipple-childLeaving-195",
                                                                  "childPulsate": "MuiTouchRipple-childPulsate-196",
                                                                  "ripple": "MuiTouchRipple-ripple-191",
                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate-193",
                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible-192",
                                                                  "root": "MuiTouchRipple-root-190",
                                                                }
                                                              }
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                className="MuiTouchRipple-root-190"
                                                                component="span"
                                                                enter={true}
                                                                exit={true}
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root-190"
                                                                />
                                                              </TransitionGroup>
                                                            </TouchRipple>
                                                          </WithStyles(TouchRipple)>
                                                        </NoSsr>
                                                      </button>
                                                    </ButtonBase>
                                                  </WithStyles(ButtonBase)>
                                                </Button>
                                              </WithStyles(Button)>
                                            </Component>
                                          </WithStyles(Component)>
                                        </div>
                                      </div>
                                    </Item>
                                  </DragSource(Item)>
                                </DropTarget(DragSource(Item))>
                                <DropTarget(DragSource(Item))
                                  classes={
                                    Object {
                                      "button": "ToggleBar-button-102",
                                      "hidden": "ToggleBar-hidden-105",
                                      "toolsContainer": "ToggleBar-toolsContainer-101",
                                      "under": "ToggleBar-under-103",
                                      "wrapper": "ToggleBar-wrapper-104",
                                    }
                                  }
                                  draggable={true}
                                  index={3}
                                  key="parabola"
                                  moveTool={[Function]}
                                  toolRef={
                                    Object {
                                      "current": <div
                                        class="ToggleBar-wrapper-104"
                                      >
                                        <div
                                          draggable="true"
                                        >
                                          <button
                                            class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                            tabindex="0"
                                            type="button"
                                            value="parabola"
                                          >
                                            <span
                                              class="MuiButton-label-111"
                                            >
                                              Parabola
                                            </span>
                                            <span
                                              class="MuiTouchRipple-root-190"
                                            />
                                          </button>
                                        </div>
                                        <div
                                          class="ToggleBar-under-103"
                                        >
                                          <button
                                            class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                            tabindex="0"
                                            type="button"
                                            value="parabola"
                                          >
                                            <span
                                              class="MuiButton-label-111"
                                            >
                                              Parabola
                                            </span>
                                            <span
                                              class="MuiTouchRipple-root-190"
                                            />
                                          </button>
                                        </div>
                                      </div>,
                                    }
                                  }
                                >
                                  <DragSource(Item)
                                    classes={
                                      Object {
                                        "button": "ToggleBar-button-102",
                                        "hidden": "ToggleBar-hidden-105",
                                        "toolsContainer": "ToggleBar-toolsContainer-101",
                                        "under": "ToggleBar-under-103",
                                        "wrapper": "ToggleBar-wrapper-104",
                                      }
                                    }
                                    connectDropTarget={[Function]}
                                    draggable={true}
                                    index={3}
                                    moveTool={[Function]}
                                    toolRef={
                                      Object {
                                        "current": <div
                                          class="ToggleBar-wrapper-104"
                                        >
                                          <div
                                            draggable="true"
                                          >
                                            <button
                                              class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                              tabindex="0"
                                              type="button"
                                              value="parabola"
                                            >
                                              <span
                                                class="MuiButton-label-111"
                                              >
                                                Parabola
                                              </span>
                                              <span
                                                class="MuiTouchRipple-root-190"
                                              />
                                            </button>
                                          </div>
                                          <div
                                            class="ToggleBar-under-103"
                                          >
                                            <button
                                              class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                              tabindex="0"
                                              type="button"
                                              value="parabola"
                                            >
                                              <span
                                                class="MuiButton-label-111"
                                              >
                                                Parabola
                                              </span>
                                              <span
                                                class="MuiTouchRipple-root-190"
                                              />
                                            </button>
                                          </div>
                                        </div>,
                                      }
                                    }
                                  >
                                    <Item
                                      classes={
                                        Object {
                                          "button": "ToggleBar-button-102",
                                          "hidden": "ToggleBar-hidden-105",
                                          "toolsContainer": "ToggleBar-toolsContainer-101",
                                          "under": "ToggleBar-under-103",
                                          "wrapper": "ToggleBar-wrapper-104",
                                        }
                                      }
                                      connectDragPreview={[Function]}
                                      connectDragSource={[Function]}
                                      connectDropTarget={[Function]}
                                      draggable={true}
                                      index={3}
                                      isDragging={false}
                                      moveTool={[Function]}
                                      toolRef={
                                        Object {
                                          "current": <div
                                            class="ToggleBar-wrapper-104"
                                          >
                                            <div
                                              draggable="true"
                                            >
                                              <button
                                                class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                tabindex="0"
                                                type="button"
                                                value="parabola"
                                              >
                                                <span
                                                  class="MuiButton-label-111"
                                                >
                                                  Parabola
                                                </span>
                                                <span
                                                  class="MuiTouchRipple-root-190"
                                                />
                                              </button>
                                            </div>
                                            <div
                                              class="ToggleBar-under-103"
                                            >
                                              <button
                                                class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                tabindex="0"
                                                type="button"
                                                value="parabola"
                                              >
                                                <span
                                                  class="MuiButton-label-111"
                                                >
                                                  Parabola
                                                </span>
                                                <span
                                                  class="MuiTouchRipple-root-190"
                                                />
                                              </button>
                                            </div>
                                          </div>,
                                        }
                                      }
                                    >
                                      <div
                                        className="ToggleBar-wrapper-104"
                                      >
                                        <div
                                          className={false}
                                        >
                                          <WithStyles(Component)
                                            className="ToggleBar-button-102"
                                            disableRipple={true}
                                            disabled={false}
                                            onClick={[Function]}
                                            selected={false}
                                            value="parabola"
                                          >
                                            <Component
                                              className="ToggleBar-button-102"
                                              classes={
                                                Object {
                                                  "disabled": "Component-disabled-109",
                                                  "notSelected": "Component-notSelected-108",
                                                  "root": "Component-root-106",
                                                  "selected": "Component-selected-107",
                                                }
                                              }
                                              disableRipple={true}
                                              disabled={false}
                                              onClick={[Function]}
                                              selected={false}
                                              value="parabola"
                                            >
                                              <WithStyles(Button)
                                                className="Component-root-106 ToggleBar-button-102"
                                                classes={
                                                  Object {
                                                    "disabled": "",
                                                  }
                                                }
                                                disabled={false}
                                                key="parabola"
                                                onClick={[Function]}
                                                size="small"
                                                value="parabola"
                                                variant="outlined"
                                              >
                                                <Button
                                                  className="Component-root-106 ToggleBar-button-102"
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiButton-colorInherit-131",
                                                      "contained": "MuiButton-contained-121",
                                                      "containedPrimary": "MuiButton-containedPrimary-122",
                                                      "containedSecondary": "MuiButton-containedSecondary-123",
                                                      "disabled": "MuiButton-disabled-130",
                                                      "extendedFab": "MuiButton-extendedFab-128",
                                                      "fab": "MuiButton-fab-127",
                                                      "flat": "MuiButton-flat-115",
                                                      "flatPrimary": "MuiButton-flatPrimary-116",
                                                      "flatSecondary": "MuiButton-flatSecondary-117",
                                                      "focusVisible": "MuiButton-focusVisible-129",
                                                      "fullWidth": "MuiButton-fullWidth-135",
                                                      "label": "MuiButton-label-111",
                                                      "mini": "MuiButton-mini-132",
                                                      "outlined": "MuiButton-outlined-118",
                                                      "outlinedPrimary": "MuiButton-outlinedPrimary-119",
                                                      "outlinedSecondary": "MuiButton-outlinedSecondary-120",
                                                      "raised": "MuiButton-raised-124",
                                                      "raisedPrimary": "MuiButton-raisedPrimary-125",
                                                      "raisedSecondary": "MuiButton-raisedSecondary-126",
                                                      "root": "MuiButton-root-110",
                                                      "sizeLarge": "MuiButton-sizeLarge-134",
                                                      "sizeSmall": "MuiButton-sizeSmall-133",
                                                      "text": "MuiButton-text-112",
                                                      "textPrimary": "MuiButton-textPrimary-113",
                                                      "textSecondary": "MuiButton-textSecondary-114",
                                                    }
                                                  }
                                                  color="default"
                                                  component="button"
                                                  disableFocusRipple={false}
                                                  disabled={false}
                                                  fullWidth={false}
                                                  mini={false}
                                                  onClick={[Function]}
                                                  size="small"
                                                  type="button"
                                                  value="parabola"
                                                  variant="outlined"
                                                >
                                                  <WithStyles(ButtonBase)
                                                    className="MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                    component="button"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    focusVisibleClassName="MuiButton-focusVisible-129"
                                                    onClick={[Function]}
                                                    type="button"
                                                    value="parabola"
                                                  >
                                                    <ButtonBase
                                                      centerRipple={false}
                                                      className="MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                      classes={
                                                        Object {
                                                          "disabled": "MuiButtonBase-disabled-137",
                                                          "focusVisible": "MuiButtonBase-focusVisible-138",
                                                          "root": "MuiButtonBase-root-136",
                                                        }
                                                      }
                                                      component="button"
                                                      disableRipple={false}
                                                      disableTouchRipple={false}
                                                      disabled={false}
                                                      focusRipple={true}
                                                      focusVisibleClassName="MuiButton-focusVisible-129"
                                                      onClick={[Function]}
                                                      tabIndex="0"
                                                      type="button"
                                                      value="parabola"
                                                    >
                                                      <button
                                                        className="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                        disabled={false}
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onContextMenu={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        tabIndex="0"
                                                        type="button"
                                                        value="parabola"
                                                      >
                                                        <span
                                                          className="MuiButton-label-111"
                                                        >
                                                          Parabola
                                                        </span>
                                                        <NoSsr
                                                          defer={false}
                                                          fallback={null}
                                                        >
                                                          <WithStyles(TouchRipple)
                                                            center={false}
                                                            innerRef={[Function]}
                                                          >
                                                            <TouchRipple
                                                              center={false}
                                                              classes={
                                                                Object {
                                                                  "child": "MuiTouchRipple-child-194",
                                                                  "childLeaving": "MuiTouchRipple-childLeaving-195",
                                                                  "childPulsate": "MuiTouchRipple-childPulsate-196",
                                                                  "ripple": "MuiTouchRipple-ripple-191",
                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate-193",
                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible-192",
                                                                  "root": "MuiTouchRipple-root-190",
                                                                }
                                                              }
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                className="MuiTouchRipple-root-190"
                                                                component="span"
                                                                enter={true}
                                                                exit={true}
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root-190"
                                                                />
                                                              </TransitionGroup>
                                                            </TouchRipple>
                                                          </WithStyles(TouchRipple)>
                                                        </NoSsr>
                                                      </button>
                                                    </ButtonBase>
                                                  </WithStyles(ButtonBase)>
                                                </Button>
                                              </WithStyles(Button)>
                                            </Component>
                                          </WithStyles(Component)>
                                        </div>
                                        <div
                                          className="ToggleBar-under-103"
                                        >
                                          <WithStyles(Component)
                                            className="ToggleBar-button-102"
                                            disableRipple={true}
                                            disabled={false}
                                            onClick={[Function]}
                                            selected={false}
                                            value="parabola"
                                          >
                                            <Component
                                              className="ToggleBar-button-102"
                                              classes={
                                                Object {
                                                  "disabled": "Component-disabled-109",
                                                  "notSelected": "Component-notSelected-108",
                                                  "root": "Component-root-106",
                                                  "selected": "Component-selected-107",
                                                }
                                              }
                                              disableRipple={true}
                                              disabled={false}
                                              onClick={[Function]}
                                              selected={false}
                                              value="parabola"
                                            >
                                              <WithStyles(Button)
                                                className="Component-root-106 ToggleBar-button-102"
                                                classes={
                                                  Object {
                                                    "disabled": "",
                                                  }
                                                }
                                                disabled={false}
                                                key="parabola"
                                                onClick={[Function]}
                                                size="small"
                                                value="parabola"
                                                variant="outlined"
                                              >
                                                <Button
                                                  className="Component-root-106 ToggleBar-button-102"
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiButton-colorInherit-131",
                                                      "contained": "MuiButton-contained-121",
                                                      "containedPrimary": "MuiButton-containedPrimary-122",
                                                      "containedSecondary": "MuiButton-containedSecondary-123",
                                                      "disabled": "MuiButton-disabled-130",
                                                      "extendedFab": "MuiButton-extendedFab-128",
                                                      "fab": "MuiButton-fab-127",
                                                      "flat": "MuiButton-flat-115",
                                                      "flatPrimary": "MuiButton-flatPrimary-116",
                                                      "flatSecondary": "MuiButton-flatSecondary-117",
                                                      "focusVisible": "MuiButton-focusVisible-129",
                                                      "fullWidth": "MuiButton-fullWidth-135",
                                                      "label": "MuiButton-label-111",
                                                      "mini": "MuiButton-mini-132",
                                                      "outlined": "MuiButton-outlined-118",
                                                      "outlinedPrimary": "MuiButton-outlinedPrimary-119",
                                                      "outlinedSecondary": "MuiButton-outlinedSecondary-120",
                                                      "raised": "MuiButton-raised-124",
                                                      "raisedPrimary": "MuiButton-raisedPrimary-125",
                                                      "raisedSecondary": "MuiButton-raisedSecondary-126",
                                                      "root": "MuiButton-root-110",
                                                      "sizeLarge": "MuiButton-sizeLarge-134",
                                                      "sizeSmall": "MuiButton-sizeSmall-133",
                                                      "text": "MuiButton-text-112",
                                                      "textPrimary": "MuiButton-textPrimary-113",
                                                      "textSecondary": "MuiButton-textSecondary-114",
                                                    }
                                                  }
                                                  color="default"
                                                  component="button"
                                                  disableFocusRipple={false}
                                                  disabled={false}
                                                  fullWidth={false}
                                                  mini={false}
                                                  onClick={[Function]}
                                                  size="small"
                                                  type="button"
                                                  value="parabola"
                                                  variant="outlined"
                                                >
                                                  <WithStyles(ButtonBase)
                                                    className="MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                    component="button"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    focusVisibleClassName="MuiButton-focusVisible-129"
                                                    onClick={[Function]}
                                                    type="button"
                                                    value="parabola"
                                                  >
                                                    <ButtonBase
                                                      centerRipple={false}
                                                      className="MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                      classes={
                                                        Object {
                                                          "disabled": "MuiButtonBase-disabled-137",
                                                          "focusVisible": "MuiButtonBase-focusVisible-138",
                                                          "root": "MuiButtonBase-root-136",
                                                        }
                                                      }
                                                      component="button"
                                                      disableRipple={false}
                                                      disableTouchRipple={false}
                                                      disabled={false}
                                                      focusRipple={true}
                                                      focusVisibleClassName="MuiButton-focusVisible-129"
                                                      onClick={[Function]}
                                                      tabIndex="0"
                                                      type="button"
                                                      value="parabola"
                                                    >
                                                      <button
                                                        className="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                        disabled={false}
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onContextMenu={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        tabIndex="0"
                                                        type="button"
                                                        value="parabola"
                                                      >
                                                        <span
                                                          className="MuiButton-label-111"
                                                        >
                                                          Parabola
                                                        </span>
                                                        <NoSsr
                                                          defer={false}
                                                          fallback={null}
                                                        >
                                                          <WithStyles(TouchRipple)
                                                            center={false}
                                                            innerRef={[Function]}
                                                          >
                                                            <TouchRipple
                                                              center={false}
                                                              classes={
                                                                Object {
                                                                  "child": "MuiTouchRipple-child-194",
                                                                  "childLeaving": "MuiTouchRipple-childLeaving-195",
                                                                  "childPulsate": "MuiTouchRipple-childPulsate-196",
                                                                  "ripple": "MuiTouchRipple-ripple-191",
                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate-193",
                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible-192",
                                                                  "root": "MuiTouchRipple-root-190",
                                                                }
                                                              }
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                className="MuiTouchRipple-root-190"
                                                                component="span"
                                                                enter={true}
                                                                exit={true}
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root-190"
                                                                />
                                                              </TransitionGroup>
                                                            </TouchRipple>
                                                          </WithStyles(TouchRipple)>
                                                        </NoSsr>
                                                      </button>
                                                    </ButtonBase>
                                                  </WithStyles(ButtonBase)>
                                                </Button>
                                              </WithStyles(Button)>
                                            </Component>
                                          </WithStyles(Component)>
                                        </div>
                                      </div>
                                    </Item>
                                  </DragSource(Item)>
                                </DropTarget(DragSource(Item))>
                                <DropTarget(DragSource(Item))
                                  classes={
                                    Object {
                                      "button": "ToggleBar-button-102",
                                      "hidden": "ToggleBar-hidden-105",
                                      "toolsContainer": "ToggleBar-toolsContainer-101",
                                      "under": "ToggleBar-under-103",
                                      "wrapper": "ToggleBar-wrapper-104",
                                    }
                                  }
                                  draggable={true}
                                  index={4}
                                  key="point"
                                  moveTool={[Function]}
                                  toolRef={
                                    Object {
                                      "current": <div
                                        class="ToggleBar-wrapper-104"
                                      >
                                        <div
                                          draggable="true"
                                        >
                                          <button
                                            class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                            tabindex="0"
                                            type="button"
                                            value="point"
                                          >
                                            <span
                                              class="MuiButton-label-111"
                                            >
                                              Point
                                            </span>
                                            <span
                                              class="MuiTouchRipple-root-190"
                                            />
                                          </button>
                                        </div>
                                        <div
                                          class="ToggleBar-under-103"
                                        >
                                          <button
                                            class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                            tabindex="0"
                                            type="button"
                                            value="point"
                                          >
                                            <span
                                              class="MuiButton-label-111"
                                            >
                                              Point
                                            </span>
                                            <span
                                              class="MuiTouchRipple-root-190"
                                            />
                                          </button>
                                        </div>
                                      </div>,
                                    }
                                  }
                                >
                                  <DragSource(Item)
                                    classes={
                                      Object {
                                        "button": "ToggleBar-button-102",
                                        "hidden": "ToggleBar-hidden-105",
                                        "toolsContainer": "ToggleBar-toolsContainer-101",
                                        "under": "ToggleBar-under-103",
                                        "wrapper": "ToggleBar-wrapper-104",
                                      }
                                    }
                                    connectDropTarget={[Function]}
                                    draggable={true}
                                    index={4}
                                    moveTool={[Function]}
                                    toolRef={
                                      Object {
                                        "current": <div
                                          class="ToggleBar-wrapper-104"
                                        >
                                          <div
                                            draggable="true"
                                          >
                                            <button
                                              class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                              tabindex="0"
                                              type="button"
                                              value="point"
                                            >
                                              <span
                                                class="MuiButton-label-111"
                                              >
                                                Point
                                              </span>
                                              <span
                                                class="MuiTouchRipple-root-190"
                                              />
                                            </button>
                                          </div>
                                          <div
                                            class="ToggleBar-under-103"
                                          >
                                            <button
                                              class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                              tabindex="0"
                                              type="button"
                                              value="point"
                                            >
                                              <span
                                                class="MuiButton-label-111"
                                              >
                                                Point
                                              </span>
                                              <span
                                                class="MuiTouchRipple-root-190"
                                              />
                                            </button>
                                          </div>
                                        </div>,
                                      }
                                    }
                                  >
                                    <Item
                                      classes={
                                        Object {
                                          "button": "ToggleBar-button-102",
                                          "hidden": "ToggleBar-hidden-105",
                                          "toolsContainer": "ToggleBar-toolsContainer-101",
                                          "under": "ToggleBar-under-103",
                                          "wrapper": "ToggleBar-wrapper-104",
                                        }
                                      }
                                      connectDragPreview={[Function]}
                                      connectDragSource={[Function]}
                                      connectDropTarget={[Function]}
                                      draggable={true}
                                      index={4}
                                      isDragging={false}
                                      moveTool={[Function]}
                                      toolRef={
                                        Object {
                                          "current": <div
                                            class="ToggleBar-wrapper-104"
                                          >
                                            <div
                                              draggable="true"
                                            >
                                              <button
                                                class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                tabindex="0"
                                                type="button"
                                                value="point"
                                              >
                                                <span
                                                  class="MuiButton-label-111"
                                                >
                                                  Point
                                                </span>
                                                <span
                                                  class="MuiTouchRipple-root-190"
                                                />
                                              </button>
                                            </div>
                                            <div
                                              class="ToggleBar-under-103"
                                            >
                                              <button
                                                class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                tabindex="0"
                                                type="button"
                                                value="point"
                                              >
                                                <span
                                                  class="MuiButton-label-111"
                                                >
                                                  Point
                                                </span>
                                                <span
                                                  class="MuiTouchRipple-root-190"
                                                />
                                              </button>
                                            </div>
                                          </div>,
                                        }
                                      }
                                    >
                                      <div
                                        className="ToggleBar-wrapper-104"
                                      >
                                        <div
                                          className={false}
                                        >
                                          <WithStyles(Component)
                                            className="ToggleBar-button-102"
                                            disableRipple={true}
                                            disabled={false}
                                            onClick={[Function]}
                                            selected={false}
                                            value="point"
                                          >
                                            <Component
                                              className="ToggleBar-button-102"
                                              classes={
                                                Object {
                                                  "disabled": "Component-disabled-109",
                                                  "notSelected": "Component-notSelected-108",
                                                  "root": "Component-root-106",
                                                  "selected": "Component-selected-107",
                                                }
                                              }
                                              disableRipple={true}
                                              disabled={false}
                                              onClick={[Function]}
                                              selected={false}
                                              value="point"
                                            >
                                              <WithStyles(Button)
                                                className="Component-root-106 ToggleBar-button-102"
                                                classes={
                                                  Object {
                                                    "disabled": "",
                                                  }
                                                }
                                                disabled={false}
                                                key="point"
                                                onClick={[Function]}
                                                size="small"
                                                value="point"
                                                variant="outlined"
                                              >
                                                <Button
                                                  className="Component-root-106 ToggleBar-button-102"
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiButton-colorInherit-131",
                                                      "contained": "MuiButton-contained-121",
                                                      "containedPrimary": "MuiButton-containedPrimary-122",
                                                      "containedSecondary": "MuiButton-containedSecondary-123",
                                                      "disabled": "MuiButton-disabled-130",
                                                      "extendedFab": "MuiButton-extendedFab-128",
                                                      "fab": "MuiButton-fab-127",
                                                      "flat": "MuiButton-flat-115",
                                                      "flatPrimary": "MuiButton-flatPrimary-116",
                                                      "flatSecondary": "MuiButton-flatSecondary-117",
                                                      "focusVisible": "MuiButton-focusVisible-129",
                                                      "fullWidth": "MuiButton-fullWidth-135",
                                                      "label": "MuiButton-label-111",
                                                      "mini": "MuiButton-mini-132",
                                                      "outlined": "MuiButton-outlined-118",
                                                      "outlinedPrimary": "MuiButton-outlinedPrimary-119",
                                                      "outlinedSecondary": "MuiButton-outlinedSecondary-120",
                                                      "raised": "MuiButton-raised-124",
                                                      "raisedPrimary": "MuiButton-raisedPrimary-125",
                                                      "raisedSecondary": "MuiButton-raisedSecondary-126",
                                                      "root": "MuiButton-root-110",
                                                      "sizeLarge": "MuiButton-sizeLarge-134",
                                                      "sizeSmall": "MuiButton-sizeSmall-133",
                                                      "text": "MuiButton-text-112",
                                                      "textPrimary": "MuiButton-textPrimary-113",
                                                      "textSecondary": "MuiButton-textSecondary-114",
                                                    }
                                                  }
                                                  color="default"
                                                  component="button"
                                                  disableFocusRipple={false}
                                                  disabled={false}
                                                  fullWidth={false}
                                                  mini={false}
                                                  onClick={[Function]}
                                                  size="small"
                                                  type="button"
                                                  value="point"
                                                  variant="outlined"
                                                >
                                                  <WithStyles(ButtonBase)
                                                    className="MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                    component="button"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    focusVisibleClassName="MuiButton-focusVisible-129"
                                                    onClick={[Function]}
                                                    type="button"
                                                    value="point"
                                                  >
                                                    <ButtonBase
                                                      centerRipple={false}
                                                      className="MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                      classes={
                                                        Object {
                                                          "disabled": "MuiButtonBase-disabled-137",
                                                          "focusVisible": "MuiButtonBase-focusVisible-138",
                                                          "root": "MuiButtonBase-root-136",
                                                        }
                                                      }
                                                      component="button"
                                                      disableRipple={false}
                                                      disableTouchRipple={false}
                                                      disabled={false}
                                                      focusRipple={true}
                                                      focusVisibleClassName="MuiButton-focusVisible-129"
                                                      onClick={[Function]}
                                                      tabIndex="0"
                                                      type="button"
                                                      value="point"
                                                    >
                                                      <button
                                                        className="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                        disabled={false}
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onContextMenu={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        tabIndex="0"
                                                        type="button"
                                                        value="point"
                                                      >
                                                        <span
                                                          className="MuiButton-label-111"
                                                        >
                                                          Point
                                                        </span>
                                                        <NoSsr
                                                          defer={false}
                                                          fallback={null}
                                                        >
                                                          <WithStyles(TouchRipple)
                                                            center={false}
                                                            innerRef={[Function]}
                                                          >
                                                            <TouchRipple
                                                              center={false}
                                                              classes={
                                                                Object {
                                                                  "child": "MuiTouchRipple-child-194",
                                                                  "childLeaving": "MuiTouchRipple-childLeaving-195",
                                                                  "childPulsate": "MuiTouchRipple-childPulsate-196",
                                                                  "ripple": "MuiTouchRipple-ripple-191",
                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate-193",
                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible-192",
                                                                  "root": "MuiTouchRipple-root-190",
                                                                }
                                                              }
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                className="MuiTouchRipple-root-190"
                                                                component="span"
                                                                enter={true}
                                                                exit={true}
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root-190"
                                                                />
                                                              </TransitionGroup>
                                                            </TouchRipple>
                                                          </WithStyles(TouchRipple)>
                                                        </NoSsr>
                                                      </button>
                                                    </ButtonBase>
                                                  </WithStyles(ButtonBase)>
                                                </Button>
                                              </WithStyles(Button)>
                                            </Component>
                                          </WithStyles(Component)>
                                        </div>
                                        <div
                                          className="ToggleBar-under-103"
                                        >
                                          <WithStyles(Component)
                                            className="ToggleBar-button-102"
                                            disableRipple={true}
                                            disabled={false}
                                            onClick={[Function]}
                                            selected={false}
                                            value="point"
                                          >
                                            <Component
                                              className="ToggleBar-button-102"
                                              classes={
                                                Object {
                                                  "disabled": "Component-disabled-109",
                                                  "notSelected": "Component-notSelected-108",
                                                  "root": "Component-root-106",
                                                  "selected": "Component-selected-107",
                                                }
                                              }
                                              disableRipple={true}
                                              disabled={false}
                                              onClick={[Function]}
                                              selected={false}
                                              value="point"
                                            >
                                              <WithStyles(Button)
                                                className="Component-root-106 ToggleBar-button-102"
                                                classes={
                                                  Object {
                                                    "disabled": "",
                                                  }
                                                }
                                                disabled={false}
                                                key="point"
                                                onClick={[Function]}
                                                size="small"
                                                value="point"
                                                variant="outlined"
                                              >
                                                <Button
                                                  className="Component-root-106 ToggleBar-button-102"
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiButton-colorInherit-131",
                                                      "contained": "MuiButton-contained-121",
                                                      "containedPrimary": "MuiButton-containedPrimary-122",
                                                      "containedSecondary": "MuiButton-containedSecondary-123",
                                                      "disabled": "MuiButton-disabled-130",
                                                      "extendedFab": "MuiButton-extendedFab-128",
                                                      "fab": "MuiButton-fab-127",
                                                      "flat": "MuiButton-flat-115",
                                                      "flatPrimary": "MuiButton-flatPrimary-116",
                                                      "flatSecondary": "MuiButton-flatSecondary-117",
                                                      "focusVisible": "MuiButton-focusVisible-129",
                                                      "fullWidth": "MuiButton-fullWidth-135",
                                                      "label": "MuiButton-label-111",
                                                      "mini": "MuiButton-mini-132",
                                                      "outlined": "MuiButton-outlined-118",
                                                      "outlinedPrimary": "MuiButton-outlinedPrimary-119",
                                                      "outlinedSecondary": "MuiButton-outlinedSecondary-120",
                                                      "raised": "MuiButton-raised-124",
                                                      "raisedPrimary": "MuiButton-raisedPrimary-125",
                                                      "raisedSecondary": "MuiButton-raisedSecondary-126",
                                                      "root": "MuiButton-root-110",
                                                      "sizeLarge": "MuiButton-sizeLarge-134",
                                                      "sizeSmall": "MuiButton-sizeSmall-133",
                                                      "text": "MuiButton-text-112",
                                                      "textPrimary": "MuiButton-textPrimary-113",
                                                      "textSecondary": "MuiButton-textSecondary-114",
                                                    }
                                                  }
                                                  color="default"
                                                  component="button"
                                                  disableFocusRipple={false}
                                                  disabled={false}
                                                  fullWidth={false}
                                                  mini={false}
                                                  onClick={[Function]}
                                                  size="small"
                                                  type="button"
                                                  value="point"
                                                  variant="outlined"
                                                >
                                                  <WithStyles(ButtonBase)
                                                    className="MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                    component="button"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    focusVisibleClassName="MuiButton-focusVisible-129"
                                                    onClick={[Function]}
                                                    type="button"
                                                    value="point"
                                                  >
                                                    <ButtonBase
                                                      centerRipple={false}
                                                      className="MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                      classes={
                                                        Object {
                                                          "disabled": "MuiButtonBase-disabled-137",
                                                          "focusVisible": "MuiButtonBase-focusVisible-138",
                                                          "root": "MuiButtonBase-root-136",
                                                        }
                                                      }
                                                      component="button"
                                                      disableRipple={false}
                                                      disableTouchRipple={false}
                                                      disabled={false}
                                                      focusRipple={true}
                                                      focusVisibleClassName="MuiButton-focusVisible-129"
                                                      onClick={[Function]}
                                                      tabIndex="0"
                                                      type="button"
                                                      value="point"
                                                    >
                                                      <button
                                                        className="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                        disabled={false}
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onContextMenu={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        tabIndex="0"
                                                        type="button"
                                                        value="point"
                                                      >
                                                        <span
                                                          className="MuiButton-label-111"
                                                        >
                                                          Point
                                                        </span>
                                                        <NoSsr
                                                          defer={false}
                                                          fallback={null}
                                                        >
                                                          <WithStyles(TouchRipple)
                                                            center={false}
                                                            innerRef={[Function]}
                                                          >
                                                            <TouchRipple
                                                              center={false}
                                                              classes={
                                                                Object {
                                                                  "child": "MuiTouchRipple-child-194",
                                                                  "childLeaving": "MuiTouchRipple-childLeaving-195",
                                                                  "childPulsate": "MuiTouchRipple-childPulsate-196",
                                                                  "ripple": "MuiTouchRipple-ripple-191",
                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate-193",
                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible-192",
                                                                  "root": "MuiTouchRipple-root-190",
                                                                }
                                                              }
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                className="MuiTouchRipple-root-190"
                                                                component="span"
                                                                enter={true}
                                                                exit={true}
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root-190"
                                                                />
                                                              </TransitionGroup>
                                                            </TouchRipple>
                                                          </WithStyles(TouchRipple)>
                                                        </NoSsr>
                                                      </button>
                                                    </ButtonBase>
                                                  </WithStyles(ButtonBase)>
                                                </Button>
                                              </WithStyles(Button)>
                                            </Component>
                                          </WithStyles(Component)>
                                        </div>
                                      </div>
                                    </Item>
                                  </DragSource(Item)>
                                </DropTarget(DragSource(Item))>
                                <DropTarget(DragSource(Item))
                                  classes={
                                    Object {
                                      "button": "ToggleBar-button-102",
                                      "hidden": "ToggleBar-hidden-105",
                                      "toolsContainer": "ToggleBar-toolsContainer-101",
                                      "under": "ToggleBar-under-103",
                                      "wrapper": "ToggleBar-wrapper-104",
                                    }
                                  }
                                  draggable={true}
                                  index={5}
                                  key="polygon"
                                  moveTool={[Function]}
                                  toolRef={
                                    Object {
                                      "current": <div
                                        class="ToggleBar-wrapper-104"
                                      >
                                        <div
                                          draggable="true"
                                        >
                                          <button
                                            class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                            tabindex="0"
                                            type="button"
                                            value="polygon"
                                          >
                                            <span
                                              class="MuiButton-label-111"
                                            >
                                              Polygon
                                            </span>
                                            <span
                                              class="MuiTouchRipple-root-190"
                                            />
                                          </button>
                                        </div>
                                        <div
                                          class="ToggleBar-under-103"
                                        >
                                          <button
                                            class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                            tabindex="0"
                                            type="button"
                                            value="polygon"
                                          >
                                            <span
                                              class="MuiButton-label-111"
                                            >
                                              Polygon
                                            </span>
                                            <span
                                              class="MuiTouchRipple-root-190"
                                            />
                                          </button>
                                        </div>
                                      </div>,
                                    }
                                  }
                                >
                                  <DragSource(Item)
                                    classes={
                                      Object {
                                        "button": "ToggleBar-button-102",
                                        "hidden": "ToggleBar-hidden-105",
                                        "toolsContainer": "ToggleBar-toolsContainer-101",
                                        "under": "ToggleBar-under-103",
                                        "wrapper": "ToggleBar-wrapper-104",
                                      }
                                    }
                                    connectDropTarget={[Function]}
                                    draggable={true}
                                    index={5}
                                    moveTool={[Function]}
                                    toolRef={
                                      Object {
                                        "current": <div
                                          class="ToggleBar-wrapper-104"
                                        >
                                          <div
                                            draggable="true"
                                          >
                                            <button
                                              class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                              tabindex="0"
                                              type="button"
                                              value="polygon"
                                            >
                                              <span
                                                class="MuiButton-label-111"
                                              >
                                                Polygon
                                              </span>
                                              <span
                                                class="MuiTouchRipple-root-190"
                                              />
                                            </button>
                                          </div>
                                          <div
                                            class="ToggleBar-under-103"
                                          >
                                            <button
                                              class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                              tabindex="0"
                                              type="button"
                                              value="polygon"
                                            >
                                              <span
                                                class="MuiButton-label-111"
                                              >
                                                Polygon
                                              </span>
                                              <span
                                                class="MuiTouchRipple-root-190"
                                              />
                                            </button>
                                          </div>
                                        </div>,
                                      }
                                    }
                                  >
                                    <Item
                                      classes={
                                        Object {
                                          "button": "ToggleBar-button-102",
                                          "hidden": "ToggleBar-hidden-105",
                                          "toolsContainer": "ToggleBar-toolsContainer-101",
                                          "under": "ToggleBar-under-103",
                                          "wrapper": "ToggleBar-wrapper-104",
                                        }
                                      }
                                      connectDragPreview={[Function]}
                                      connectDragSource={[Function]}
                                      connectDropTarget={[Function]}
                                      draggable={true}
                                      index={5}
                                      isDragging={false}
                                      moveTool={[Function]}
                                      toolRef={
                                        Object {
                                          "current": <div
                                            class="ToggleBar-wrapper-104"
                                          >
                                            <div
                                              draggable="true"
                                            >
                                              <button
                                                class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                tabindex="0"
                                                type="button"
                                                value="polygon"
                                              >
                                                <span
                                                  class="MuiButton-label-111"
                                                >
                                                  Polygon
                                                </span>
                                                <span
                                                  class="MuiTouchRipple-root-190"
                                                />
                                              </button>
                                            </div>
                                            <div
                                              class="ToggleBar-under-103"
                                            >
                                              <button
                                                class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                tabindex="0"
                                                type="button"
                                                value="polygon"
                                              >
                                                <span
                                                  class="MuiButton-label-111"
                                                >
                                                  Polygon
                                                </span>
                                                <span
                                                  class="MuiTouchRipple-root-190"
                                                />
                                              </button>
                                            </div>
                                          </div>,
                                        }
                                      }
                                    >
                                      <div
                                        className="ToggleBar-wrapper-104"
                                      >
                                        <div
                                          className={false}
                                        >
                                          <WithStyles(Component)
                                            className="ToggleBar-button-102"
                                            disableRipple={true}
                                            disabled={false}
                                            onClick={[Function]}
                                            selected={false}
                                            value="polygon"
                                          >
                                            <Component
                                              className="ToggleBar-button-102"
                                              classes={
                                                Object {
                                                  "disabled": "Component-disabled-109",
                                                  "notSelected": "Component-notSelected-108",
                                                  "root": "Component-root-106",
                                                  "selected": "Component-selected-107",
                                                }
                                              }
                                              disableRipple={true}
                                              disabled={false}
                                              onClick={[Function]}
                                              selected={false}
                                              value="polygon"
                                            >
                                              <WithStyles(Button)
                                                className="Component-root-106 ToggleBar-button-102"
                                                classes={
                                                  Object {
                                                    "disabled": "",
                                                  }
                                                }
                                                disabled={false}
                                                key="polygon"
                                                onClick={[Function]}
                                                size="small"
                                                value="polygon"
                                                variant="outlined"
                                              >
                                                <Button
                                                  className="Component-root-106 ToggleBar-button-102"
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiButton-colorInherit-131",
                                                      "contained": "MuiButton-contained-121",
                                                      "containedPrimary": "MuiButton-containedPrimary-122",
                                                      "containedSecondary": "MuiButton-containedSecondary-123",
                                                      "disabled": "MuiButton-disabled-130",
                                                      "extendedFab": "MuiButton-extendedFab-128",
                                                      "fab": "MuiButton-fab-127",
                                                      "flat": "MuiButton-flat-115",
                                                      "flatPrimary": "MuiButton-flatPrimary-116",
                                                      "flatSecondary": "MuiButton-flatSecondary-117",
                                                      "focusVisible": "MuiButton-focusVisible-129",
                                                      "fullWidth": "MuiButton-fullWidth-135",
                                                      "label": "MuiButton-label-111",
                                                      "mini": "MuiButton-mini-132",
                                                      "outlined": "MuiButton-outlined-118",
                                                      "outlinedPrimary": "MuiButton-outlinedPrimary-119",
                                                      "outlinedSecondary": "MuiButton-outlinedSecondary-120",
                                                      "raised": "MuiButton-raised-124",
                                                      "raisedPrimary": "MuiButton-raisedPrimary-125",
                                                      "raisedSecondary": "MuiButton-raisedSecondary-126",
                                                      "root": "MuiButton-root-110",
                                                      "sizeLarge": "MuiButton-sizeLarge-134",
                                                      "sizeSmall": "MuiButton-sizeSmall-133",
                                                      "text": "MuiButton-text-112",
                                                      "textPrimary": "MuiButton-textPrimary-113",
                                                      "textSecondary": "MuiButton-textSecondary-114",
                                                    }
                                                  }
                                                  color="default"
                                                  component="button"
                                                  disableFocusRipple={false}
                                                  disabled={false}
                                                  fullWidth={false}
                                                  mini={false}
                                                  onClick={[Function]}
                                                  size="small"
                                                  type="button"
                                                  value="polygon"
                                                  variant="outlined"
                                                >
                                                  <WithStyles(ButtonBase)
                                                    className="MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                    component="button"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    focusVisibleClassName="MuiButton-focusVisible-129"
                                                    onClick={[Function]}
                                                    type="button"
                                                    value="polygon"
                                                  >
                                                    <ButtonBase
                                                      centerRipple={false}
                                                      className="MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                      classes={
                                                        Object {
                                                          "disabled": "MuiButtonBase-disabled-137",
                                                          "focusVisible": "MuiButtonBase-focusVisible-138",
                                                          "root": "MuiButtonBase-root-136",
                                                        }
                                                      }
                                                      component="button"
                                                      disableRipple={false}
                                                      disableTouchRipple={false}
                                                      disabled={false}
                                                      focusRipple={true}
                                                      focusVisibleClassName="MuiButton-focusVisible-129"
                                                      onClick={[Function]}
                                                      tabIndex="0"
                                                      type="button"
                                                      value="polygon"
                                                    >
                                                      <button
                                                        className="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                        disabled={false}
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onContextMenu={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        tabIndex="0"
                                                        type="button"
                                                        value="polygon"
                                                      >
                                                        <span
                                                          className="MuiButton-label-111"
                                                        >
                                                          Polygon
                                                        </span>
                                                        <NoSsr
                                                          defer={false}
                                                          fallback={null}
                                                        >
                                                          <WithStyles(TouchRipple)
                                                            center={false}
                                                            innerRef={[Function]}
                                                          >
                                                            <TouchRipple
                                                              center={false}
                                                              classes={
                                                                Object {
                                                                  "child": "MuiTouchRipple-child-194",
                                                                  "childLeaving": "MuiTouchRipple-childLeaving-195",
                                                                  "childPulsate": "MuiTouchRipple-childPulsate-196",
                                                                  "ripple": "MuiTouchRipple-ripple-191",
                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate-193",
                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible-192",
                                                                  "root": "MuiTouchRipple-root-190",
                                                                }
                                                              }
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                className="MuiTouchRipple-root-190"
                                                                component="span"
                                                                enter={true}
                                                                exit={true}
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root-190"
                                                                />
                                                              </TransitionGroup>
                                                            </TouchRipple>
                                                          </WithStyles(TouchRipple)>
                                                        </NoSsr>
                                                      </button>
                                                    </ButtonBase>
                                                  </WithStyles(ButtonBase)>
                                                </Button>
                                              </WithStyles(Button)>
                                            </Component>
                                          </WithStyles(Component)>
                                        </div>
                                        <div
                                          className="ToggleBar-under-103"
                                        >
                                          <WithStyles(Component)
                                            className="ToggleBar-button-102"
                                            disableRipple={true}
                                            disabled={false}
                                            onClick={[Function]}
                                            selected={false}
                                            value="polygon"
                                          >
                                            <Component
                                              className="ToggleBar-button-102"
                                              classes={
                                                Object {
                                                  "disabled": "Component-disabled-109",
                                                  "notSelected": "Component-notSelected-108",
                                                  "root": "Component-root-106",
                                                  "selected": "Component-selected-107",
                                                }
                                              }
                                              disableRipple={true}
                                              disabled={false}
                                              onClick={[Function]}
                                              selected={false}
                                              value="polygon"
                                            >
                                              <WithStyles(Button)
                                                className="Component-root-106 ToggleBar-button-102"
                                                classes={
                                                  Object {
                                                    "disabled": "",
                                                  }
                                                }
                                                disabled={false}
                                                key="polygon"
                                                onClick={[Function]}
                                                size="small"
                                                value="polygon"
                                                variant="outlined"
                                              >
                                                <Button
                                                  className="Component-root-106 ToggleBar-button-102"
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiButton-colorInherit-131",
                                                      "contained": "MuiButton-contained-121",
                                                      "containedPrimary": "MuiButton-containedPrimary-122",
                                                      "containedSecondary": "MuiButton-containedSecondary-123",
                                                      "disabled": "MuiButton-disabled-130",
                                                      "extendedFab": "MuiButton-extendedFab-128",
                                                      "fab": "MuiButton-fab-127",
                                                      "flat": "MuiButton-flat-115",
                                                      "flatPrimary": "MuiButton-flatPrimary-116",
                                                      "flatSecondary": "MuiButton-flatSecondary-117",
                                                      "focusVisible": "MuiButton-focusVisible-129",
                                                      "fullWidth": "MuiButton-fullWidth-135",
                                                      "label": "MuiButton-label-111",
                                                      "mini": "MuiButton-mini-132",
                                                      "outlined": "MuiButton-outlined-118",
                                                      "outlinedPrimary": "MuiButton-outlinedPrimary-119",
                                                      "outlinedSecondary": "MuiButton-outlinedSecondary-120",
                                                      "raised": "MuiButton-raised-124",
                                                      "raisedPrimary": "MuiButton-raisedPrimary-125",
                                                      "raisedSecondary": "MuiButton-raisedSecondary-126",
                                                      "root": "MuiButton-root-110",
                                                      "sizeLarge": "MuiButton-sizeLarge-134",
                                                      "sizeSmall": "MuiButton-sizeSmall-133",
                                                      "text": "MuiButton-text-112",
                                                      "textPrimary": "MuiButton-textPrimary-113",
                                                      "textSecondary": "MuiButton-textSecondary-114",
                                                    }
                                                  }
                                                  color="default"
                                                  component="button"
                                                  disableFocusRipple={false}
                                                  disabled={false}
                                                  fullWidth={false}
                                                  mini={false}
                                                  onClick={[Function]}
                                                  size="small"
                                                  type="button"
                                                  value="polygon"
                                                  variant="outlined"
                                                >
                                                  <WithStyles(ButtonBase)
                                                    className="MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                    component="button"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    focusVisibleClassName="MuiButton-focusVisible-129"
                                                    onClick={[Function]}
                                                    type="button"
                                                    value="polygon"
                                                  >
                                                    <ButtonBase
                                                      centerRipple={false}
                                                      className="MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                      classes={
                                                        Object {
                                                          "disabled": "MuiButtonBase-disabled-137",
                                                          "focusVisible": "MuiButtonBase-focusVisible-138",
                                                          "root": "MuiButtonBase-root-136",
                                                        }
                                                      }
                                                      component="button"
                                                      disableRipple={false}
                                                      disableTouchRipple={false}
                                                      disabled={false}
                                                      focusRipple={true}
                                                      focusVisibleClassName="MuiButton-focusVisible-129"
                                                      onClick={[Function]}
                                                      tabIndex="0"
                                                      type="button"
                                                      value="polygon"
                                                    >
                                                      <button
                                                        className="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                        disabled={false}
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onContextMenu={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        tabIndex="0"
                                                        type="button"
                                                        value="polygon"
                                                      >
                                                        <span
                                                          className="MuiButton-label-111"
                                                        >
                                                          Polygon
                                                        </span>
                                                        <NoSsr
                                                          defer={false}
                                                          fallback={null}
                                                        >
                                                          <WithStyles(TouchRipple)
                                                            center={false}
                                                            innerRef={[Function]}
                                                          >
                                                            <TouchRipple
                                                              center={false}
                                                              classes={
                                                                Object {
                                                                  "child": "MuiTouchRipple-child-194",
                                                                  "childLeaving": "MuiTouchRipple-childLeaving-195",
                                                                  "childPulsate": "MuiTouchRipple-childPulsate-196",
                                                                  "ripple": "MuiTouchRipple-ripple-191",
                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate-193",
                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible-192",
                                                                  "root": "MuiTouchRipple-root-190",
                                                                }
                                                              }
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                className="MuiTouchRipple-root-190"
                                                                component="span"
                                                                enter={true}
                                                                exit={true}
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root-190"
                                                                />
                                                              </TransitionGroup>
                                                            </TouchRipple>
                                                          </WithStyles(TouchRipple)>
                                                        </NoSsr>
                                                      </button>
                                                    </ButtonBase>
                                                  </WithStyles(ButtonBase)>
                                                </Button>
                                              </WithStyles(Button)>
                                            </Component>
                                          </WithStyles(Component)>
                                        </div>
                                      </div>
                                    </Item>
                                  </DragSource(Item)>
                                </DropTarget(DragSource(Item))>
                                <DropTarget(DragSource(Item))
                                  classes={
                                    Object {
                                      "button": "ToggleBar-button-102",
                                      "hidden": "ToggleBar-hidden-105",
                                      "toolsContainer": "ToggleBar-toolsContainer-101",
                                      "under": "ToggleBar-under-103",
                                      "wrapper": "ToggleBar-wrapper-104",
                                    }
                                  }
                                  draggable={true}
                                  index={6}
                                  key="ray"
                                  moveTool={[Function]}
                                  toolRef={
                                    Object {
                                      "current": <div
                                        class="ToggleBar-wrapper-104"
                                      >
                                        <div
                                          draggable="true"
                                        >
                                          <button
                                            class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                            tabindex="0"
                                            type="button"
                                            value="ray"
                                          >
                                            <span
                                              class="MuiButton-label-111"
                                            >
                                              Ray
                                            </span>
                                            <span
                                              class="MuiTouchRipple-root-190"
                                            />
                                          </button>
                                        </div>
                                        <div
                                          class="ToggleBar-under-103"
                                        >
                                          <button
                                            class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                            tabindex="0"
                                            type="button"
                                            value="ray"
                                          >
                                            <span
                                              class="MuiButton-label-111"
                                            >
                                              Ray
                                            </span>
                                            <span
                                              class="MuiTouchRipple-root-190"
                                            />
                                          </button>
                                        </div>
                                      </div>,
                                    }
                                  }
                                >
                                  <DragSource(Item)
                                    classes={
                                      Object {
                                        "button": "ToggleBar-button-102",
                                        "hidden": "ToggleBar-hidden-105",
                                        "toolsContainer": "ToggleBar-toolsContainer-101",
                                        "under": "ToggleBar-under-103",
                                        "wrapper": "ToggleBar-wrapper-104",
                                      }
                                    }
                                    connectDropTarget={[Function]}
                                    draggable={true}
                                    index={6}
                                    moveTool={[Function]}
                                    toolRef={
                                      Object {
                                        "current": <div
                                          class="ToggleBar-wrapper-104"
                                        >
                                          <div
                                            draggable="true"
                                          >
                                            <button
                                              class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                              tabindex="0"
                                              type="button"
                                              value="ray"
                                            >
                                              <span
                                                class="MuiButton-label-111"
                                              >
                                                Ray
                                              </span>
                                              <span
                                                class="MuiTouchRipple-root-190"
                                              />
                                            </button>
                                          </div>
                                          <div
                                            class="ToggleBar-under-103"
                                          >
                                            <button
                                              class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                              tabindex="0"
                                              type="button"
                                              value="ray"
                                            >
                                              <span
                                                class="MuiButton-label-111"
                                              >
                                                Ray
                                              </span>
                                              <span
                                                class="MuiTouchRipple-root-190"
                                              />
                                            </button>
                                          </div>
                                        </div>,
                                      }
                                    }
                                  >
                                    <Item
                                      classes={
                                        Object {
                                          "button": "ToggleBar-button-102",
                                          "hidden": "ToggleBar-hidden-105",
                                          "toolsContainer": "ToggleBar-toolsContainer-101",
                                          "under": "ToggleBar-under-103",
                                          "wrapper": "ToggleBar-wrapper-104",
                                        }
                                      }
                                      connectDragPreview={[Function]}
                                      connectDragSource={[Function]}
                                      connectDropTarget={[Function]}
                                      draggable={true}
                                      index={6}
                                      isDragging={false}
                                      moveTool={[Function]}
                                      toolRef={
                                        Object {
                                          "current": <div
                                            class="ToggleBar-wrapper-104"
                                          >
                                            <div
                                              draggable="true"
                                            >
                                              <button
                                                class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                tabindex="0"
                                                type="button"
                                                value="ray"
                                              >
                                                <span
                                                  class="MuiButton-label-111"
                                                >
                                                  Ray
                                                </span>
                                                <span
                                                  class="MuiTouchRipple-root-190"
                                                />
                                              </button>
                                            </div>
                                            <div
                                              class="ToggleBar-under-103"
                                            >
                                              <button
                                                class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                tabindex="0"
                                                type="button"
                                                value="ray"
                                              >
                                                <span
                                                  class="MuiButton-label-111"
                                                >
                                                  Ray
                                                </span>
                                                <span
                                                  class="MuiTouchRipple-root-190"
                                                />
                                              </button>
                                            </div>
                                          </div>,
                                        }
                                      }
                                    >
                                      <div
                                        className="ToggleBar-wrapper-104"
                                      >
                                        <div
                                          className={false}
                                        >
                                          <WithStyles(Component)
                                            className="ToggleBar-button-102"
                                            disableRipple={true}
                                            disabled={false}
                                            onClick={[Function]}
                                            selected={false}
                                            value="ray"
                                          >
                                            <Component
                                              className="ToggleBar-button-102"
                                              classes={
                                                Object {
                                                  "disabled": "Component-disabled-109",
                                                  "notSelected": "Component-notSelected-108",
                                                  "root": "Component-root-106",
                                                  "selected": "Component-selected-107",
                                                }
                                              }
                                              disableRipple={true}
                                              disabled={false}
                                              onClick={[Function]}
                                              selected={false}
                                              value="ray"
                                            >
                                              <WithStyles(Button)
                                                className="Component-root-106 ToggleBar-button-102"
                                                classes={
                                                  Object {
                                                    "disabled": "",
                                                  }
                                                }
                                                disabled={false}
                                                key="ray"
                                                onClick={[Function]}
                                                size="small"
                                                value="ray"
                                                variant="outlined"
                                              >
                                                <Button
                                                  className="Component-root-106 ToggleBar-button-102"
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiButton-colorInherit-131",
                                                      "contained": "MuiButton-contained-121",
                                                      "containedPrimary": "MuiButton-containedPrimary-122",
                                                      "containedSecondary": "MuiButton-containedSecondary-123",
                                                      "disabled": "MuiButton-disabled-130",
                                                      "extendedFab": "MuiButton-extendedFab-128",
                                                      "fab": "MuiButton-fab-127",
                                                      "flat": "MuiButton-flat-115",
                                                      "flatPrimary": "MuiButton-flatPrimary-116",
                                                      "flatSecondary": "MuiButton-flatSecondary-117",
                                                      "focusVisible": "MuiButton-focusVisible-129",
                                                      "fullWidth": "MuiButton-fullWidth-135",
                                                      "label": "MuiButton-label-111",
                                                      "mini": "MuiButton-mini-132",
                                                      "outlined": "MuiButton-outlined-118",
                                                      "outlinedPrimary": "MuiButton-outlinedPrimary-119",
                                                      "outlinedSecondary": "MuiButton-outlinedSecondary-120",
                                                      "raised": "MuiButton-raised-124",
                                                      "raisedPrimary": "MuiButton-raisedPrimary-125",
                                                      "raisedSecondary": "MuiButton-raisedSecondary-126",
                                                      "root": "MuiButton-root-110",
                                                      "sizeLarge": "MuiButton-sizeLarge-134",
                                                      "sizeSmall": "MuiButton-sizeSmall-133",
                                                      "text": "MuiButton-text-112",
                                                      "textPrimary": "MuiButton-textPrimary-113",
                                                      "textSecondary": "MuiButton-textSecondary-114",
                                                    }
                                                  }
                                                  color="default"
                                                  component="button"
                                                  disableFocusRipple={false}
                                                  disabled={false}
                                                  fullWidth={false}
                                                  mini={false}
                                                  onClick={[Function]}
                                                  size="small"
                                                  type="button"
                                                  value="ray"
                                                  variant="outlined"
                                                >
                                                  <WithStyles(ButtonBase)
                                                    className="MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                    component="button"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    focusVisibleClassName="MuiButton-focusVisible-129"
                                                    onClick={[Function]}
                                                    type="button"
                                                    value="ray"
                                                  >
                                                    <ButtonBase
                                                      centerRipple={false}
                                                      className="MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                      classes={
                                                        Object {
                                                          "disabled": "MuiButtonBase-disabled-137",
                                                          "focusVisible": "MuiButtonBase-focusVisible-138",
                                                          "root": "MuiButtonBase-root-136",
                                                        }
                                                      }
                                                      component="button"
                                                      disableRipple={false}
                                                      disableTouchRipple={false}
                                                      disabled={false}
                                                      focusRipple={true}
                                                      focusVisibleClassName="MuiButton-focusVisible-129"
                                                      onClick={[Function]}
                                                      tabIndex="0"
                                                      type="button"
                                                      value="ray"
                                                    >
                                                      <button
                                                        className="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                        disabled={false}
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onContextMenu={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        tabIndex="0"
                                                        type="button"
                                                        value="ray"
                                                      >
                                                        <span
                                                          className="MuiButton-label-111"
                                                        >
                                                          Ray
                                                        </span>
                                                        <NoSsr
                                                          defer={false}
                                                          fallback={null}
                                                        >
                                                          <WithStyles(TouchRipple)
                                                            center={false}
                                                            innerRef={[Function]}
                                                          >
                                                            <TouchRipple
                                                              center={false}
                                                              classes={
                                                                Object {
                                                                  "child": "MuiTouchRipple-child-194",
                                                                  "childLeaving": "MuiTouchRipple-childLeaving-195",
                                                                  "childPulsate": "MuiTouchRipple-childPulsate-196",
                                                                  "ripple": "MuiTouchRipple-ripple-191",
                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate-193",
                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible-192",
                                                                  "root": "MuiTouchRipple-root-190",
                                                                }
                                                              }
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                className="MuiTouchRipple-root-190"
                                                                component="span"
                                                                enter={true}
                                                                exit={true}
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root-190"
                                                                />
                                                              </TransitionGroup>
                                                            </TouchRipple>
                                                          </WithStyles(TouchRipple)>
                                                        </NoSsr>
                                                      </button>
                                                    </ButtonBase>
                                                  </WithStyles(ButtonBase)>
                                                </Button>
                                              </WithStyles(Button)>
                                            </Component>
                                          </WithStyles(Component)>
                                        </div>
                                        <div
                                          className="ToggleBar-under-103"
                                        >
                                          <WithStyles(Component)
                                            className="ToggleBar-button-102"
                                            disableRipple={true}
                                            disabled={false}
                                            onClick={[Function]}
                                            selected={false}
                                            value="ray"
                                          >
                                            <Component
                                              className="ToggleBar-button-102"
                                              classes={
                                                Object {
                                                  "disabled": "Component-disabled-109",
                                                  "notSelected": "Component-notSelected-108",
                                                  "root": "Component-root-106",
                                                  "selected": "Component-selected-107",
                                                }
                                              }
                                              disableRipple={true}
                                              disabled={false}
                                              onClick={[Function]}
                                              selected={false}
                                              value="ray"
                                            >
                                              <WithStyles(Button)
                                                className="Component-root-106 ToggleBar-button-102"
                                                classes={
                                                  Object {
                                                    "disabled": "",
                                                  }
                                                }
                                                disabled={false}
                                                key="ray"
                                                onClick={[Function]}
                                                size="small"
                                                value="ray"
                                                variant="outlined"
                                              >
                                                <Button
                                                  className="Component-root-106 ToggleBar-button-102"
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiButton-colorInherit-131",
                                                      "contained": "MuiButton-contained-121",
                                                      "containedPrimary": "MuiButton-containedPrimary-122",
                                                      "containedSecondary": "MuiButton-containedSecondary-123",
                                                      "disabled": "MuiButton-disabled-130",
                                                      "extendedFab": "MuiButton-extendedFab-128",
                                                      "fab": "MuiButton-fab-127",
                                                      "flat": "MuiButton-flat-115",
                                                      "flatPrimary": "MuiButton-flatPrimary-116",
                                                      "flatSecondary": "MuiButton-flatSecondary-117",
                                                      "focusVisible": "MuiButton-focusVisible-129",
                                                      "fullWidth": "MuiButton-fullWidth-135",
                                                      "label": "MuiButton-label-111",
                                                      "mini": "MuiButton-mini-132",
                                                      "outlined": "MuiButton-outlined-118",
                                                      "outlinedPrimary": "MuiButton-outlinedPrimary-119",
                                                      "outlinedSecondary": "MuiButton-outlinedSecondary-120",
                                                      "raised": "MuiButton-raised-124",
                                                      "raisedPrimary": "MuiButton-raisedPrimary-125",
                                                      "raisedSecondary": "MuiButton-raisedSecondary-126",
                                                      "root": "MuiButton-root-110",
                                                      "sizeLarge": "MuiButton-sizeLarge-134",
                                                      "sizeSmall": "MuiButton-sizeSmall-133",
                                                      "text": "MuiButton-text-112",
                                                      "textPrimary": "MuiButton-textPrimary-113",
                                                      "textSecondary": "MuiButton-textSecondary-114",
                                                    }
                                                  }
                                                  color="default"
                                                  component="button"
                                                  disableFocusRipple={false}
                                                  disabled={false}
                                                  fullWidth={false}
                                                  mini={false}
                                                  onClick={[Function]}
                                                  size="small"
                                                  type="button"
                                                  value="ray"
                                                  variant="outlined"
                                                >
                                                  <WithStyles(ButtonBase)
                                                    className="MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                    component="button"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    focusVisibleClassName="MuiButton-focusVisible-129"
                                                    onClick={[Function]}
                                                    type="button"
                                                    value="ray"
                                                  >
                                                    <ButtonBase
                                                      centerRipple={false}
                                                      className="MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                      classes={
                                                        Object {
                                                          "disabled": "MuiButtonBase-disabled-137",
                                                          "focusVisible": "MuiButtonBase-focusVisible-138",
                                                          "root": "MuiButtonBase-root-136",
                                                        }
                                                      }
                                                      component="button"
                                                      disableRipple={false}
                                                      disableTouchRipple={false}
                                                      disabled={false}
                                                      focusRipple={true}
                                                      focusVisibleClassName="MuiButton-focusVisible-129"
                                                      onClick={[Function]}
                                                      tabIndex="0"
                                                      type="button"
                                                      value="ray"
                                                    >
                                                      <button
                                                        className="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                        disabled={false}
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onContextMenu={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        tabIndex="0"
                                                        type="button"
                                                        value="ray"
                                                      >
                                                        <span
                                                          className="MuiButton-label-111"
                                                        >
                                                          Ray
                                                        </span>
                                                        <NoSsr
                                                          defer={false}
                                                          fallback={null}
                                                        >
                                                          <WithStyles(TouchRipple)
                                                            center={false}
                                                            innerRef={[Function]}
                                                          >
                                                            <TouchRipple
                                                              center={false}
                                                              classes={
                                                                Object {
                                                                  "child": "MuiTouchRipple-child-194",
                                                                  "childLeaving": "MuiTouchRipple-childLeaving-195",
                                                                  "childPulsate": "MuiTouchRipple-childPulsate-196",
                                                                  "ripple": "MuiTouchRipple-ripple-191",
                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate-193",
                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible-192",
                                                                  "root": "MuiTouchRipple-root-190",
                                                                }
                                                              }
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                className="MuiTouchRipple-root-190"
                                                                component="span"
                                                                enter={true}
                                                                exit={true}
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root-190"
                                                                />
                                                              </TransitionGroup>
                                                            </TouchRipple>
                                                          </WithStyles(TouchRipple)>
                                                        </NoSsr>
                                                      </button>
                                                    </ButtonBase>
                                                  </WithStyles(ButtonBase)>
                                                </Button>
                                              </WithStyles(Button)>
                                            </Component>
                                          </WithStyles(Component)>
                                        </div>
                                      </div>
                                    </Item>
                                  </DragSource(Item)>
                                </DropTarget(DragSource(Item))>
                                <DropTarget(DragSource(Item))
                                  classes={
                                    Object {
                                      "button": "ToggleBar-button-102",
                                      "hidden": "ToggleBar-hidden-105",
                                      "toolsContainer": "ToggleBar-toolsContainer-101",
                                      "under": "ToggleBar-under-103",
                                      "wrapper": "ToggleBar-wrapper-104",
                                    }
                                  }
                                  draggable={true}
                                  index={7}
                                  key="segment"
                                  moveTool={[Function]}
                                  toolRef={
                                    Object {
                                      "current": <div
                                        class="ToggleBar-wrapper-104"
                                      >
                                        <div
                                          draggable="true"
                                        >
                                          <button
                                            class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                            tabindex="0"
                                            type="button"
                                            value="segment"
                                          >
                                            <span
                                              class="MuiButton-label-111"
                                            >
                                              Segment
                                            </span>
                                            <span
                                              class="MuiTouchRipple-root-190"
                                            />
                                          </button>
                                        </div>
                                        <div
                                          class="ToggleBar-under-103"
                                        >
                                          <button
                                            class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                            tabindex="0"
                                            type="button"
                                            value="segment"
                                          >
                                            <span
                                              class="MuiButton-label-111"
                                            >
                                              Segment
                                            </span>
                                            <span
                                              class="MuiTouchRipple-root-190"
                                            />
                                          </button>
                                        </div>
                                      </div>,
                                    }
                                  }
                                >
                                  <DragSource(Item)
                                    classes={
                                      Object {
                                        "button": "ToggleBar-button-102",
                                        "hidden": "ToggleBar-hidden-105",
                                        "toolsContainer": "ToggleBar-toolsContainer-101",
                                        "under": "ToggleBar-under-103",
                                        "wrapper": "ToggleBar-wrapper-104",
                                      }
                                    }
                                    connectDropTarget={[Function]}
                                    draggable={true}
                                    index={7}
                                    moveTool={[Function]}
                                    toolRef={
                                      Object {
                                        "current": <div
                                          class="ToggleBar-wrapper-104"
                                        >
                                          <div
                                            draggable="true"
                                          >
                                            <button
                                              class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                              tabindex="0"
                                              type="button"
                                              value="segment"
                                            >
                                              <span
                                                class="MuiButton-label-111"
                                              >
                                                Segment
                                              </span>
                                              <span
                                                class="MuiTouchRipple-root-190"
                                              />
                                            </button>
                                          </div>
                                          <div
                                            class="ToggleBar-under-103"
                                          >
                                            <button
                                              class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                              tabindex="0"
                                              type="button"
                                              value="segment"
                                            >
                                              <span
                                                class="MuiButton-label-111"
                                              >
                                                Segment
                                              </span>
                                              <span
                                                class="MuiTouchRipple-root-190"
                                              />
                                            </button>
                                          </div>
                                        </div>,
                                      }
                                    }
                                  >
                                    <Item
                                      classes={
                                        Object {
                                          "button": "ToggleBar-button-102",
                                          "hidden": "ToggleBar-hidden-105",
                                          "toolsContainer": "ToggleBar-toolsContainer-101",
                                          "under": "ToggleBar-under-103",
                                          "wrapper": "ToggleBar-wrapper-104",
                                        }
                                      }
                                      connectDragPreview={[Function]}
                                      connectDragSource={[Function]}
                                      connectDropTarget={[Function]}
                                      draggable={true}
                                      index={7}
                                      isDragging={false}
                                      moveTool={[Function]}
                                      toolRef={
                                        Object {
                                          "current": <div
                                            class="ToggleBar-wrapper-104"
                                          >
                                            <div
                                              draggable="true"
                                            >
                                              <button
                                                class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                tabindex="0"
                                                type="button"
                                                value="segment"
                                              >
                                                <span
                                                  class="MuiButton-label-111"
                                                >
                                                  Segment
                                                </span>
                                                <span
                                                  class="MuiTouchRipple-root-190"
                                                />
                                              </button>
                                            </div>
                                            <div
                                              class="ToggleBar-under-103"
                                            >
                                              <button
                                                class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                tabindex="0"
                                                type="button"
                                                value="segment"
                                              >
                                                <span
                                                  class="MuiButton-label-111"
                                                >
                                                  Segment
                                                </span>
                                                <span
                                                  class="MuiTouchRipple-root-190"
                                                />
                                              </button>
                                            </div>
                                          </div>,
                                        }
                                      }
                                    >
                                      <div
                                        className="ToggleBar-wrapper-104"
                                      >
                                        <div
                                          className={false}
                                        >
                                          <WithStyles(Component)
                                            className="ToggleBar-button-102"
                                            disableRipple={true}
                                            disabled={false}
                                            onClick={[Function]}
                                            selected={false}
                                            value="segment"
                                          >
                                            <Component
                                              className="ToggleBar-button-102"
                                              classes={
                                                Object {
                                                  "disabled": "Component-disabled-109",
                                                  "notSelected": "Component-notSelected-108",
                                                  "root": "Component-root-106",
                                                  "selected": "Component-selected-107",
                                                }
                                              }
                                              disableRipple={true}
                                              disabled={false}
                                              onClick={[Function]}
                                              selected={false}
                                              value="segment"
                                            >
                                              <WithStyles(Button)
                                                className="Component-root-106 ToggleBar-button-102"
                                                classes={
                                                  Object {
                                                    "disabled": "",
                                                  }
                                                }
                                                disabled={false}
                                                key="segment"
                                                onClick={[Function]}
                                                size="small"
                                                value="segment"
                                                variant="outlined"
                                              >
                                                <Button
                                                  className="Component-root-106 ToggleBar-button-102"
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiButton-colorInherit-131",
                                                      "contained": "MuiButton-contained-121",
                                                      "containedPrimary": "MuiButton-containedPrimary-122",
                                                      "containedSecondary": "MuiButton-containedSecondary-123",
                                                      "disabled": "MuiButton-disabled-130",
                                                      "extendedFab": "MuiButton-extendedFab-128",
                                                      "fab": "MuiButton-fab-127",
                                                      "flat": "MuiButton-flat-115",
                                                      "flatPrimary": "MuiButton-flatPrimary-116",
                                                      "flatSecondary": "MuiButton-flatSecondary-117",
                                                      "focusVisible": "MuiButton-focusVisible-129",
                                                      "fullWidth": "MuiButton-fullWidth-135",
                                                      "label": "MuiButton-label-111",
                                                      "mini": "MuiButton-mini-132",
                                                      "outlined": "MuiButton-outlined-118",
                                                      "outlinedPrimary": "MuiButton-outlinedPrimary-119",
                                                      "outlinedSecondary": "MuiButton-outlinedSecondary-120",
                                                      "raised": "MuiButton-raised-124",
                                                      "raisedPrimary": "MuiButton-raisedPrimary-125",
                                                      "raisedSecondary": "MuiButton-raisedSecondary-126",
                                                      "root": "MuiButton-root-110",
                                                      "sizeLarge": "MuiButton-sizeLarge-134",
                                                      "sizeSmall": "MuiButton-sizeSmall-133",
                                                      "text": "MuiButton-text-112",
                                                      "textPrimary": "MuiButton-textPrimary-113",
                                                      "textSecondary": "MuiButton-textSecondary-114",
                                                    }
                                                  }
                                                  color="default"
                                                  component="button"
                                                  disableFocusRipple={false}
                                                  disabled={false}
                                                  fullWidth={false}
                                                  mini={false}
                                                  onClick={[Function]}
                                                  size="small"
                                                  type="button"
                                                  value="segment"
                                                  variant="outlined"
                                                >
                                                  <WithStyles(ButtonBase)
                                                    className="MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                    component="button"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    focusVisibleClassName="MuiButton-focusVisible-129"
                                                    onClick={[Function]}
                                                    type="button"
                                                    value="segment"
                                                  >
                                                    <ButtonBase
                                                      centerRipple={false}
                                                      className="MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                      classes={
                                                        Object {
                                                          "disabled": "MuiButtonBase-disabled-137",
                                                          "focusVisible": "MuiButtonBase-focusVisible-138",
                                                          "root": "MuiButtonBase-root-136",
                                                        }
                                                      }
                                                      component="button"
                                                      disableRipple={false}
                                                      disableTouchRipple={false}
                                                      disabled={false}
                                                      focusRipple={true}
                                                      focusVisibleClassName="MuiButton-focusVisible-129"
                                                      onClick={[Function]}
                                                      tabIndex="0"
                                                      type="button"
                                                      value="segment"
                                                    >
                                                      <button
                                                        className="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                        disabled={false}
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onContextMenu={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        tabIndex="0"
                                                        type="button"
                                                        value="segment"
                                                      >
                                                        <span
                                                          className="MuiButton-label-111"
                                                        >
                                                          Segment
                                                        </span>
                                                        <NoSsr
                                                          defer={false}
                                                          fallback={null}
                                                        >
                                                          <WithStyles(TouchRipple)
                                                            center={false}
                                                            innerRef={[Function]}
                                                          >
                                                            <TouchRipple
                                                              center={false}
                                                              classes={
                                                                Object {
                                                                  "child": "MuiTouchRipple-child-194",
                                                                  "childLeaving": "MuiTouchRipple-childLeaving-195",
                                                                  "childPulsate": "MuiTouchRipple-childPulsate-196",
                                                                  "ripple": "MuiTouchRipple-ripple-191",
                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate-193",
                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible-192",
                                                                  "root": "MuiTouchRipple-root-190",
                                                                }
                                                              }
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                className="MuiTouchRipple-root-190"
                                                                component="span"
                                                                enter={true}
                                                                exit={true}
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root-190"
                                                                />
                                                              </TransitionGroup>
                                                            </TouchRipple>
                                                          </WithStyles(TouchRipple)>
                                                        </NoSsr>
                                                      </button>
                                                    </ButtonBase>
                                                  </WithStyles(ButtonBase)>
                                                </Button>
                                              </WithStyles(Button)>
                                            </Component>
                                          </WithStyles(Component)>
                                        </div>
                                        <div
                                          className="ToggleBar-under-103"
                                        >
                                          <WithStyles(Component)
                                            className="ToggleBar-button-102"
                                            disableRipple={true}
                                            disabled={false}
                                            onClick={[Function]}
                                            selected={false}
                                            value="segment"
                                          >
                                            <Component
                                              className="ToggleBar-button-102"
                                              classes={
                                                Object {
                                                  "disabled": "Component-disabled-109",
                                                  "notSelected": "Component-notSelected-108",
                                                  "root": "Component-root-106",
                                                  "selected": "Component-selected-107",
                                                }
                                              }
                                              disableRipple={true}
                                              disabled={false}
                                              onClick={[Function]}
                                              selected={false}
                                              value="segment"
                                            >
                                              <WithStyles(Button)
                                                className="Component-root-106 ToggleBar-button-102"
                                                classes={
                                                  Object {
                                                    "disabled": "",
                                                  }
                                                }
                                                disabled={false}
                                                key="segment"
                                                onClick={[Function]}
                                                size="small"
                                                value="segment"
                                                variant="outlined"
                                              >
                                                <Button
                                                  className="Component-root-106 ToggleBar-button-102"
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiButton-colorInherit-131",
                                                      "contained": "MuiButton-contained-121",
                                                      "containedPrimary": "MuiButton-containedPrimary-122",
                                                      "containedSecondary": "MuiButton-containedSecondary-123",
                                                      "disabled": "MuiButton-disabled-130",
                                                      "extendedFab": "MuiButton-extendedFab-128",
                                                      "fab": "MuiButton-fab-127",
                                                      "flat": "MuiButton-flat-115",
                                                      "flatPrimary": "MuiButton-flatPrimary-116",
                                                      "flatSecondary": "MuiButton-flatSecondary-117",
                                                      "focusVisible": "MuiButton-focusVisible-129",
                                                      "fullWidth": "MuiButton-fullWidth-135",
                                                      "label": "MuiButton-label-111",
                                                      "mini": "MuiButton-mini-132",
                                                      "outlined": "MuiButton-outlined-118",
                                                      "outlinedPrimary": "MuiButton-outlinedPrimary-119",
                                                      "outlinedSecondary": "MuiButton-outlinedSecondary-120",
                                                      "raised": "MuiButton-raised-124",
                                                      "raisedPrimary": "MuiButton-raisedPrimary-125",
                                                      "raisedSecondary": "MuiButton-raisedSecondary-126",
                                                      "root": "MuiButton-root-110",
                                                      "sizeLarge": "MuiButton-sizeLarge-134",
                                                      "sizeSmall": "MuiButton-sizeSmall-133",
                                                      "text": "MuiButton-text-112",
                                                      "textPrimary": "MuiButton-textPrimary-113",
                                                      "textSecondary": "MuiButton-textSecondary-114",
                                                    }
                                                  }
                                                  color="default"
                                                  component="button"
                                                  disableFocusRipple={false}
                                                  disabled={false}
                                                  fullWidth={false}
                                                  mini={false}
                                                  onClick={[Function]}
                                                  size="small"
                                                  type="button"
                                                  value="segment"
                                                  variant="outlined"
                                                >
                                                  <WithStyles(ButtonBase)
                                                    className="MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                    component="button"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    focusVisibleClassName="MuiButton-focusVisible-129"
                                                    onClick={[Function]}
                                                    type="button"
                                                    value="segment"
                                                  >
                                                    <ButtonBase
                                                      centerRipple={false}
                                                      className="MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                      classes={
                                                        Object {
                                                          "disabled": "MuiButtonBase-disabled-137",
                                                          "focusVisible": "MuiButtonBase-focusVisible-138",
                                                          "root": "MuiButtonBase-root-136",
                                                        }
                                                      }
                                                      component="button"
                                                      disableRipple={false}
                                                      disableTouchRipple={false}
                                                      disabled={false}
                                                      focusRipple={true}
                                                      focusVisibleClassName="MuiButton-focusVisible-129"
                                                      onClick={[Function]}
                                                      tabIndex="0"
                                                      type="button"
                                                      value="segment"
                                                    >
                                                      <button
                                                        className="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                        disabled={false}
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onContextMenu={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        tabIndex="0"
                                                        type="button"
                                                        value="segment"
                                                      >
                                                        <span
                                                          className="MuiButton-label-111"
                                                        >
                                                          Segment
                                                        </span>
                                                        <NoSsr
                                                          defer={false}
                                                          fallback={null}
                                                        >
                                                          <WithStyles(TouchRipple)
                                                            center={false}
                                                            innerRef={[Function]}
                                                          >
                                                            <TouchRipple
                                                              center={false}
                                                              classes={
                                                                Object {
                                                                  "child": "MuiTouchRipple-child-194",
                                                                  "childLeaving": "MuiTouchRipple-childLeaving-195",
                                                                  "childPulsate": "MuiTouchRipple-childPulsate-196",
                                                                  "ripple": "MuiTouchRipple-ripple-191",
                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate-193",
                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible-192",
                                                                  "root": "MuiTouchRipple-root-190",
                                                                }
                                                              }
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                className="MuiTouchRipple-root-190"
                                                                component="span"
                                                                enter={true}
                                                                exit={true}
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root-190"
                                                                />
                                                              </TransitionGroup>
                                                            </TouchRipple>
                                                          </WithStyles(TouchRipple)>
                                                        </NoSsr>
                                                      </button>
                                                    </ButtonBase>
                                                  </WithStyles(ButtonBase)>
                                                </Button>
                                              </WithStyles(Button)>
                                            </Component>
                                          </WithStyles(Component)>
                                        </div>
                                      </div>
                                    </Item>
                                  </DragSource(Item)>
                                </DropTarget(DragSource(Item))>
                                <DropTarget(DragSource(Item))
                                  classes={
                                    Object {
                                      "button": "ToggleBar-button-102",
                                      "hidden": "ToggleBar-hidden-105",
                                      "toolsContainer": "ToggleBar-toolsContainer-101",
                                      "under": "ToggleBar-under-103",
                                      "wrapper": "ToggleBar-wrapper-104",
                                    }
                                  }
                                  draggable={true}
                                  index={8}
                                  key="sine"
                                  moveTool={[Function]}
                                  toolRef={
                                    Object {
                                      "current": <div
                                        class="ToggleBar-wrapper-104"
                                      >
                                        <div
                                          draggable="true"
                                        >
                                          <button
                                            class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                            tabindex="0"
                                            type="button"
                                            value="sine"
                                          >
                                            <span
                                              class="MuiButton-label-111"
                                            >
                                              Sine
                                            </span>
                                            <span
                                              class="MuiTouchRipple-root-190"
                                            />
                                          </button>
                                        </div>
                                        <div
                                          class="ToggleBar-under-103"
                                        >
                                          <button
                                            class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                            tabindex="0"
                                            type="button"
                                            value="sine"
                                          >
                                            <span
                                              class="MuiButton-label-111"
                                            >
                                              Sine
                                            </span>
                                            <span
                                              class="MuiTouchRipple-root-190"
                                            />
                                          </button>
                                        </div>
                                      </div>,
                                    }
                                  }
                                >
                                  <DragSource(Item)
                                    classes={
                                      Object {
                                        "button": "ToggleBar-button-102",
                                        "hidden": "ToggleBar-hidden-105",
                                        "toolsContainer": "ToggleBar-toolsContainer-101",
                                        "under": "ToggleBar-under-103",
                                        "wrapper": "ToggleBar-wrapper-104",
                                      }
                                    }
                                    connectDropTarget={[Function]}
                                    draggable={true}
                                    index={8}
                                    moveTool={[Function]}
                                    toolRef={
                                      Object {
                                        "current": <div
                                          class="ToggleBar-wrapper-104"
                                        >
                                          <div
                                            draggable="true"
                                          >
                                            <button
                                              class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                              tabindex="0"
                                              type="button"
                                              value="sine"
                                            >
                                              <span
                                                class="MuiButton-label-111"
                                              >
                                                Sine
                                              </span>
                                              <span
                                                class="MuiTouchRipple-root-190"
                                              />
                                            </button>
                                          </div>
                                          <div
                                            class="ToggleBar-under-103"
                                          >
                                            <button
                                              class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                              tabindex="0"
                                              type="button"
                                              value="sine"
                                            >
                                              <span
                                                class="MuiButton-label-111"
                                              >
                                                Sine
                                              </span>
                                              <span
                                                class="MuiTouchRipple-root-190"
                                              />
                                            </button>
                                          </div>
                                        </div>,
                                      }
                                    }
                                  >
                                    <Item
                                      classes={
                                        Object {
                                          "button": "ToggleBar-button-102",
                                          "hidden": "ToggleBar-hidden-105",
                                          "toolsContainer": "ToggleBar-toolsContainer-101",
                                          "under": "ToggleBar-under-103",
                                          "wrapper": "ToggleBar-wrapper-104",
                                        }
                                      }
                                      connectDragPreview={[Function]}
                                      connectDragSource={[Function]}
                                      connectDropTarget={[Function]}
                                      draggable={true}
                                      index={8}
                                      isDragging={false}
                                      moveTool={[Function]}
                                      toolRef={
                                        Object {
                                          "current": <div
                                            class="ToggleBar-wrapper-104"
                                          >
                                            <div
                                              draggable="true"
                                            >
                                              <button
                                                class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                tabindex="0"
                                                type="button"
                                                value="sine"
                                              >
                                                <span
                                                  class="MuiButton-label-111"
                                                >
                                                  Sine
                                                </span>
                                                <span
                                                  class="MuiTouchRipple-root-190"
                                                />
                                              </button>
                                            </div>
                                            <div
                                              class="ToggleBar-under-103"
                                            >
                                              <button
                                                class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                tabindex="0"
                                                type="button"
                                                value="sine"
                                              >
                                                <span
                                                  class="MuiButton-label-111"
                                                >
                                                  Sine
                                                </span>
                                                <span
                                                  class="MuiTouchRipple-root-190"
                                                />
                                              </button>
                                            </div>
                                          </div>,
                                        }
                                      }
                                    >
                                      <div
                                        className="ToggleBar-wrapper-104"
                                      >
                                        <div
                                          className={false}
                                        >
                                          <WithStyles(Component)
                                            className="ToggleBar-button-102"
                                            disableRipple={true}
                                            disabled={false}
                                            onClick={[Function]}
                                            selected={false}
                                            value="sine"
                                          >
                                            <Component
                                              className="ToggleBar-button-102"
                                              classes={
                                                Object {
                                                  "disabled": "Component-disabled-109",
                                                  "notSelected": "Component-notSelected-108",
                                                  "root": "Component-root-106",
                                                  "selected": "Component-selected-107",
                                                }
                                              }
                                              disableRipple={true}
                                              disabled={false}
                                              onClick={[Function]}
                                              selected={false}
                                              value="sine"
                                            >
                                              <WithStyles(Button)
                                                className="Component-root-106 ToggleBar-button-102"
                                                classes={
                                                  Object {
                                                    "disabled": "",
                                                  }
                                                }
                                                disabled={false}
                                                key="sine"
                                                onClick={[Function]}
                                                size="small"
                                                value="sine"
                                                variant="outlined"
                                              >
                                                <Button
                                                  className="Component-root-106 ToggleBar-button-102"
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiButton-colorInherit-131",
                                                      "contained": "MuiButton-contained-121",
                                                      "containedPrimary": "MuiButton-containedPrimary-122",
                                                      "containedSecondary": "MuiButton-containedSecondary-123",
                                                      "disabled": "MuiButton-disabled-130",
                                                      "extendedFab": "MuiButton-extendedFab-128",
                                                      "fab": "MuiButton-fab-127",
                                                      "flat": "MuiButton-flat-115",
                                                      "flatPrimary": "MuiButton-flatPrimary-116",
                                                      "flatSecondary": "MuiButton-flatSecondary-117",
                                                      "focusVisible": "MuiButton-focusVisible-129",
                                                      "fullWidth": "MuiButton-fullWidth-135",
                                                      "label": "MuiButton-label-111",
                                                      "mini": "MuiButton-mini-132",
                                                      "outlined": "MuiButton-outlined-118",
                                                      "outlinedPrimary": "MuiButton-outlinedPrimary-119",
                                                      "outlinedSecondary": "MuiButton-outlinedSecondary-120",
                                                      "raised": "MuiButton-raised-124",
                                                      "raisedPrimary": "MuiButton-raisedPrimary-125",
                                                      "raisedSecondary": "MuiButton-raisedSecondary-126",
                                                      "root": "MuiButton-root-110",
                                                      "sizeLarge": "MuiButton-sizeLarge-134",
                                                      "sizeSmall": "MuiButton-sizeSmall-133",
                                                      "text": "MuiButton-text-112",
                                                      "textPrimary": "MuiButton-textPrimary-113",
                                                      "textSecondary": "MuiButton-textSecondary-114",
                                                    }
                                                  }
                                                  color="default"
                                                  component="button"
                                                  disableFocusRipple={false}
                                                  disabled={false}
                                                  fullWidth={false}
                                                  mini={false}
                                                  onClick={[Function]}
                                                  size="small"
                                                  type="button"
                                                  value="sine"
                                                  variant="outlined"
                                                >
                                                  <WithStyles(ButtonBase)
                                                    className="MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                    component="button"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    focusVisibleClassName="MuiButton-focusVisible-129"
                                                    onClick={[Function]}
                                                    type="button"
                                                    value="sine"
                                                  >
                                                    <ButtonBase
                                                      centerRipple={false}
                                                      className="MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                      classes={
                                                        Object {
                                                          "disabled": "MuiButtonBase-disabled-137",
                                                          "focusVisible": "MuiButtonBase-focusVisible-138",
                                                          "root": "MuiButtonBase-root-136",
                                                        }
                                                      }
                                                      component="button"
                                                      disableRipple={false}
                                                      disableTouchRipple={false}
                                                      disabled={false}
                                                      focusRipple={true}
                                                      focusVisibleClassName="MuiButton-focusVisible-129"
                                                      onClick={[Function]}
                                                      tabIndex="0"
                                                      type="button"
                                                      value="sine"
                                                    >
                                                      <button
                                                        className="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                        disabled={false}
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onContextMenu={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        tabIndex="0"
                                                        type="button"
                                                        value="sine"
                                                      >
                                                        <span
                                                          className="MuiButton-label-111"
                                                        >
                                                          Sine
                                                        </span>
                                                        <NoSsr
                                                          defer={false}
                                                          fallback={null}
                                                        >
                                                          <WithStyles(TouchRipple)
                                                            center={false}
                                                            innerRef={[Function]}
                                                          >
                                                            <TouchRipple
                                                              center={false}
                                                              classes={
                                                                Object {
                                                                  "child": "MuiTouchRipple-child-194",
                                                                  "childLeaving": "MuiTouchRipple-childLeaving-195",
                                                                  "childPulsate": "MuiTouchRipple-childPulsate-196",
                                                                  "ripple": "MuiTouchRipple-ripple-191",
                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate-193",
                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible-192",
                                                                  "root": "MuiTouchRipple-root-190",
                                                                }
                                                              }
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                className="MuiTouchRipple-root-190"
                                                                component="span"
                                                                enter={true}
                                                                exit={true}
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root-190"
                                                                />
                                                              </TransitionGroup>
                                                            </TouchRipple>
                                                          </WithStyles(TouchRipple)>
                                                        </NoSsr>
                                                      </button>
                                                    </ButtonBase>
                                                  </WithStyles(ButtonBase)>
                                                </Button>
                                              </WithStyles(Button)>
                                            </Component>
                                          </WithStyles(Component)>
                                        </div>
                                        <div
                                          className="ToggleBar-under-103"
                                        >
                                          <WithStyles(Component)
                                            className="ToggleBar-button-102"
                                            disableRipple={true}
                                            disabled={false}
                                            onClick={[Function]}
                                            selected={false}
                                            value="sine"
                                          >
                                            <Component
                                              className="ToggleBar-button-102"
                                              classes={
                                                Object {
                                                  "disabled": "Component-disabled-109",
                                                  "notSelected": "Component-notSelected-108",
                                                  "root": "Component-root-106",
                                                  "selected": "Component-selected-107",
                                                }
                                              }
                                              disableRipple={true}
                                              disabled={false}
                                              onClick={[Function]}
                                              selected={false}
                                              value="sine"
                                            >
                                              <WithStyles(Button)
                                                className="Component-root-106 ToggleBar-button-102"
                                                classes={
                                                  Object {
                                                    "disabled": "",
                                                  }
                                                }
                                                disabled={false}
                                                key="sine"
                                                onClick={[Function]}
                                                size="small"
                                                value="sine"
                                                variant="outlined"
                                              >
                                                <Button
                                                  className="Component-root-106 ToggleBar-button-102"
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiButton-colorInherit-131",
                                                      "contained": "MuiButton-contained-121",
                                                      "containedPrimary": "MuiButton-containedPrimary-122",
                                                      "containedSecondary": "MuiButton-containedSecondary-123",
                                                      "disabled": "MuiButton-disabled-130",
                                                      "extendedFab": "MuiButton-extendedFab-128",
                                                      "fab": "MuiButton-fab-127",
                                                      "flat": "MuiButton-flat-115",
                                                      "flatPrimary": "MuiButton-flatPrimary-116",
                                                      "flatSecondary": "MuiButton-flatSecondary-117",
                                                      "focusVisible": "MuiButton-focusVisible-129",
                                                      "fullWidth": "MuiButton-fullWidth-135",
                                                      "label": "MuiButton-label-111",
                                                      "mini": "MuiButton-mini-132",
                                                      "outlined": "MuiButton-outlined-118",
                                                      "outlinedPrimary": "MuiButton-outlinedPrimary-119",
                                                      "outlinedSecondary": "MuiButton-outlinedSecondary-120",
                                                      "raised": "MuiButton-raised-124",
                                                      "raisedPrimary": "MuiButton-raisedPrimary-125",
                                                      "raisedSecondary": "MuiButton-raisedSecondary-126",
                                                      "root": "MuiButton-root-110",
                                                      "sizeLarge": "MuiButton-sizeLarge-134",
                                                      "sizeSmall": "MuiButton-sizeSmall-133",
                                                      "text": "MuiButton-text-112",
                                                      "textPrimary": "MuiButton-textPrimary-113",
                                                      "textSecondary": "MuiButton-textSecondary-114",
                                                    }
                                                  }
                                                  color="default"
                                                  component="button"
                                                  disableFocusRipple={false}
                                                  disabled={false}
                                                  fullWidth={false}
                                                  mini={false}
                                                  onClick={[Function]}
                                                  size="small"
                                                  type="button"
                                                  value="sine"
                                                  variant="outlined"
                                                >
                                                  <WithStyles(ButtonBase)
                                                    className="MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                    component="button"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    focusVisibleClassName="MuiButton-focusVisible-129"
                                                    onClick={[Function]}
                                                    type="button"
                                                    value="sine"
                                                  >
                                                    <ButtonBase
                                                      centerRipple={false}
                                                      className="MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                      classes={
                                                        Object {
                                                          "disabled": "MuiButtonBase-disabled-137",
                                                          "focusVisible": "MuiButtonBase-focusVisible-138",
                                                          "root": "MuiButtonBase-root-136",
                                                        }
                                                      }
                                                      component="button"
                                                      disableRipple={false}
                                                      disableTouchRipple={false}
                                                      disabled={false}
                                                      focusRipple={true}
                                                      focusVisibleClassName="MuiButton-focusVisible-129"
                                                      onClick={[Function]}
                                                      tabIndex="0"
                                                      type="button"
                                                      value="sine"
                                                    >
                                                      <button
                                                        className="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                        disabled={false}
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onContextMenu={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        tabIndex="0"
                                                        type="button"
                                                        value="sine"
                                                      >
                                                        <span
                                                          className="MuiButton-label-111"
                                                        >
                                                          Sine
                                                        </span>
                                                        <NoSsr
                                                          defer={false}
                                                          fallback={null}
                                                        >
                                                          <WithStyles(TouchRipple)
                                                            center={false}
                                                            innerRef={[Function]}
                                                          >
                                                            <TouchRipple
                                                              center={false}
                                                              classes={
                                                                Object {
                                                                  "child": "MuiTouchRipple-child-194",
                                                                  "childLeaving": "MuiTouchRipple-childLeaving-195",
                                                                  "childPulsate": "MuiTouchRipple-childPulsate-196",
                                                                  "ripple": "MuiTouchRipple-ripple-191",
                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate-193",
                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible-192",
                                                                  "root": "MuiTouchRipple-root-190",
                                                                }
                                                              }
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                className="MuiTouchRipple-root-190"
                                                                component="span"
                                                                enter={true}
                                                                exit={true}
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root-190"
                                                                />
                                                              </TransitionGroup>
                                                            </TouchRipple>
                                                          </WithStyles(TouchRipple)>
                                                        </NoSsr>
                                                      </button>
                                                    </ButtonBase>
                                                  </WithStyles(ButtonBase)>
                                                </Button>
                                              </WithStyles(Button)>
                                            </Component>
                                          </WithStyles(Component)>
                                        </div>
                                      </div>
                                    </Item>
                                  </DragSource(Item)>
                                </DropTarget(DragSource(Item))>
                                <DropTarget(DragSource(Item))
                                  classes={
                                    Object {
                                      "button": "ToggleBar-button-102",
                                      "hidden": "ToggleBar-hidden-105",
                                      "toolsContainer": "ToggleBar-toolsContainer-101",
                                      "under": "ToggleBar-under-103",
                                      "wrapper": "ToggleBar-wrapper-104",
                                    }
                                  }
                                  draggable={true}
                                  index={9}
                                  key="vector"
                                  moveTool={[Function]}
                                  toolRef={
                                    Object {
                                      "current": <div
                                        class="ToggleBar-wrapper-104"
                                      >
                                        <div
                                          draggable="true"
                                        >
                                          <button
                                            class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                            tabindex="0"
                                            type="button"
                                            value="vector"
                                          >
                                            <span
                                              class="MuiButton-label-111"
                                            >
                                              Vector
                                            </span>
                                            <span
                                              class="MuiTouchRipple-root-190"
                                            />
                                          </button>
                                        </div>
                                        <div
                                          class="ToggleBar-under-103"
                                        >
                                          <button
                                            class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                            tabindex="0"
                                            type="button"
                                            value="vector"
                                          >
                                            <span
                                              class="MuiButton-label-111"
                                            >
                                              Vector
                                            </span>
                                            <span
                                              class="MuiTouchRipple-root-190"
                                            />
                                          </button>
                                        </div>
                                      </div>,
                                    }
                                  }
                                >
                                  <DragSource(Item)
                                    classes={
                                      Object {
                                        "button": "ToggleBar-button-102",
                                        "hidden": "ToggleBar-hidden-105",
                                        "toolsContainer": "ToggleBar-toolsContainer-101",
                                        "under": "ToggleBar-under-103",
                                        "wrapper": "ToggleBar-wrapper-104",
                                      }
                                    }
                                    connectDropTarget={[Function]}
                                    draggable={true}
                                    index={9}
                                    moveTool={[Function]}
                                    toolRef={
                                      Object {
                                        "current": <div
                                          class="ToggleBar-wrapper-104"
                                        >
                                          <div
                                            draggable="true"
                                          >
                                            <button
                                              class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                              tabindex="0"
                                              type="button"
                                              value="vector"
                                            >
                                              <span
                                                class="MuiButton-label-111"
                                              >
                                                Vector
                                              </span>
                                              <span
                                                class="MuiTouchRipple-root-190"
                                              />
                                            </button>
                                          </div>
                                          <div
                                            class="ToggleBar-under-103"
                                          >
                                            <button
                                              class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                              tabindex="0"
                                              type="button"
                                              value="vector"
                                            >
                                              <span
                                                class="MuiButton-label-111"
                                              >
                                                Vector
                                              </span>
                                              <span
                                                class="MuiTouchRipple-root-190"
                                              />
                                            </button>
                                          </div>
                                        </div>,
                                      }
                                    }
                                  >
                                    <Item
                                      classes={
                                        Object {
                                          "button": "ToggleBar-button-102",
                                          "hidden": "ToggleBar-hidden-105",
                                          "toolsContainer": "ToggleBar-toolsContainer-101",
                                          "under": "ToggleBar-under-103",
                                          "wrapper": "ToggleBar-wrapper-104",
                                        }
                                      }
                                      connectDragPreview={[Function]}
                                      connectDragSource={[Function]}
                                      connectDropTarget={[Function]}
                                      draggable={true}
                                      index={9}
                                      isDragging={false}
                                      moveTool={[Function]}
                                      toolRef={
                                        Object {
                                          "current": <div
                                            class="ToggleBar-wrapper-104"
                                          >
                                            <div
                                              draggable="true"
                                            >
                                              <button
                                                class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                tabindex="0"
                                                type="button"
                                                value="vector"
                                              >
                                                <span
                                                  class="MuiButton-label-111"
                                                >
                                                  Vector
                                                </span>
                                                <span
                                                  class="MuiTouchRipple-root-190"
                                                />
                                              </button>
                                            </div>
                                            <div
                                              class="ToggleBar-under-103"
                                            >
                                              <button
                                                class="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                tabindex="0"
                                                type="button"
                                                value="vector"
                                              >
                                                <span
                                                  class="MuiButton-label-111"
                                                >
                                                  Vector
                                                </span>
                                                <span
                                                  class="MuiTouchRipple-root-190"
                                                />
                                              </button>
                                            </div>
                                          </div>,
                                        }
                                      }
                                    >
                                      <div
                                        className="ToggleBar-wrapper-104"
                                      >
                                        <div
                                          className={false}
                                        >
                                          <WithStyles(Component)
                                            className="ToggleBar-button-102"
                                            disableRipple={true}
                                            disabled={false}
                                            onClick={[Function]}
                                            selected={false}
                                            value="vector"
                                          >
                                            <Component
                                              className="ToggleBar-button-102"
                                              classes={
                                                Object {
                                                  "disabled": "Component-disabled-109",
                                                  "notSelected": "Component-notSelected-108",
                                                  "root": "Component-root-106",
                                                  "selected": "Component-selected-107",
                                                }
                                              }
                                              disableRipple={true}
                                              disabled={false}
                                              onClick={[Function]}
                                              selected={false}
                                              value="vector"
                                            >
                                              <WithStyles(Button)
                                                className="Component-root-106 ToggleBar-button-102"
                                                classes={
                                                  Object {
                                                    "disabled": "",
                                                  }
                                                }
                                                disabled={false}
                                                key="vector"
                                                onClick={[Function]}
                                                size="small"
                                                value="vector"
                                                variant="outlined"
                                              >
                                                <Button
                                                  className="Component-root-106 ToggleBar-button-102"
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiButton-colorInherit-131",
                                                      "contained": "MuiButton-contained-121",
                                                      "containedPrimary": "MuiButton-containedPrimary-122",
                                                      "containedSecondary": "MuiButton-containedSecondary-123",
                                                      "disabled": "MuiButton-disabled-130",
                                                      "extendedFab": "MuiButton-extendedFab-128",
                                                      "fab": "MuiButton-fab-127",
                                                      "flat": "MuiButton-flat-115",
                                                      "flatPrimary": "MuiButton-flatPrimary-116",
                                                      "flatSecondary": "MuiButton-flatSecondary-117",
                                                      "focusVisible": "MuiButton-focusVisible-129",
                                                      "fullWidth": "MuiButton-fullWidth-135",
                                                      "label": "MuiButton-label-111",
                                                      "mini": "MuiButton-mini-132",
                                                      "outlined": "MuiButton-outlined-118",
                                                      "outlinedPrimary": "MuiButton-outlinedPrimary-119",
                                                      "outlinedSecondary": "MuiButton-outlinedSecondary-120",
                                                      "raised": "MuiButton-raised-124",
                                                      "raisedPrimary": "MuiButton-raisedPrimary-125",
                                                      "raisedSecondary": "MuiButton-raisedSecondary-126",
                                                      "root": "MuiButton-root-110",
                                                      "sizeLarge": "MuiButton-sizeLarge-134",
                                                      "sizeSmall": "MuiButton-sizeSmall-133",
                                                      "text": "MuiButton-text-112",
                                                      "textPrimary": "MuiButton-textPrimary-113",
                                                      "textSecondary": "MuiButton-textSecondary-114",
                                                    }
                                                  }
                                                  color="default"
                                                  component="button"
                                                  disableFocusRipple={false}
                                                  disabled={false}
                                                  fullWidth={false}
                                                  mini={false}
                                                  onClick={[Function]}
                                                  size="small"
                                                  type="button"
                                                  value="vector"
                                                  variant="outlined"
                                                >
                                                  <WithStyles(ButtonBase)
                                                    className="MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                    component="button"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    focusVisibleClassName="MuiButton-focusVisible-129"
                                                    onClick={[Function]}
                                                    type="button"
                                                    value="vector"
                                                  >
                                                    <ButtonBase
                                                      centerRipple={false}
                                                      className="MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                      classes={
                                                        Object {
                                                          "disabled": "MuiButtonBase-disabled-137",
                                                          "focusVisible": "MuiButtonBase-focusVisible-138",
                                                          "root": "MuiButtonBase-root-136",
                                                        }
                                                      }
                                                      component="button"
                                                      disableRipple={false}
                                                      disableTouchRipple={false}
                                                      disabled={false}
                                                      focusRipple={true}
                                                      focusVisibleClassName="MuiButton-focusVisible-129"
                                                      onClick={[Function]}
                                                      tabIndex="0"
                                                      type="button"
                                                      value="vector"
                                                    >
                                                      <button
                                                        className="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                        disabled={false}
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onContextMenu={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        tabIndex="0"
                                                        type="button"
                                                        value="vector"
                                                      >
                                                        <span
                                                          className="MuiButton-label-111"
                                                        >
                                                          Vector
                                                        </span>
                                                        <NoSsr
                                                          defer={false}
                                                          fallback={null}
                                                        >
                                                          <WithStyles(TouchRipple)
                                                            center={false}
                                                            innerRef={[Function]}
                                                          >
                                                            <TouchRipple
                                                              center={false}
                                                              classes={
                                                                Object {
                                                                  "child": "MuiTouchRipple-child-194",
                                                                  "childLeaving": "MuiTouchRipple-childLeaving-195",
                                                                  "childPulsate": "MuiTouchRipple-childPulsate-196",
                                                                  "ripple": "MuiTouchRipple-ripple-191",
                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate-193",
                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible-192",
                                                                  "root": "MuiTouchRipple-root-190",
                                                                }
                                                              }
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                className="MuiTouchRipple-root-190"
                                                                component="span"
                                                                enter={true}
                                                                exit={true}
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root-190"
                                                                />
                                                              </TransitionGroup>
                                                            </TouchRipple>
                                                          </WithStyles(TouchRipple)>
                                                        </NoSsr>
                                                      </button>
                                                    </ButtonBase>
                                                  </WithStyles(ButtonBase)>
                                                </Button>
                                              </WithStyles(Button)>
                                            </Component>
                                          </WithStyles(Component)>
                                        </div>
                                        <div
                                          className="ToggleBar-under-103"
                                        >
                                          <WithStyles(Component)
                                            className="ToggleBar-button-102"
                                            disableRipple={true}
                                            disabled={false}
                                            onClick={[Function]}
                                            selected={false}
                                            value="vector"
                                          >
                                            <Component
                                              className="ToggleBar-button-102"
                                              classes={
                                                Object {
                                                  "disabled": "Component-disabled-109",
                                                  "notSelected": "Component-notSelected-108",
                                                  "root": "Component-root-106",
                                                  "selected": "Component-selected-107",
                                                }
                                              }
                                              disableRipple={true}
                                              disabled={false}
                                              onClick={[Function]}
                                              selected={false}
                                              value="vector"
                                            >
                                              <WithStyles(Button)
                                                className="Component-root-106 ToggleBar-button-102"
                                                classes={
                                                  Object {
                                                    "disabled": "",
                                                  }
                                                }
                                                disabled={false}
                                                key="vector"
                                                onClick={[Function]}
                                                size="small"
                                                value="vector"
                                                variant="outlined"
                                              >
                                                <Button
                                                  className="Component-root-106 ToggleBar-button-102"
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiButton-colorInherit-131",
                                                      "contained": "MuiButton-contained-121",
                                                      "containedPrimary": "MuiButton-containedPrimary-122",
                                                      "containedSecondary": "MuiButton-containedSecondary-123",
                                                      "disabled": "MuiButton-disabled-130",
                                                      "extendedFab": "MuiButton-extendedFab-128",
                                                      "fab": "MuiButton-fab-127",
                                                      "flat": "MuiButton-flat-115",
                                                      "flatPrimary": "MuiButton-flatPrimary-116",
                                                      "flatSecondary": "MuiButton-flatSecondary-117",
                                                      "focusVisible": "MuiButton-focusVisible-129",
                                                      "fullWidth": "MuiButton-fullWidth-135",
                                                      "label": "MuiButton-label-111",
                                                      "mini": "MuiButton-mini-132",
                                                      "outlined": "MuiButton-outlined-118",
                                                      "outlinedPrimary": "MuiButton-outlinedPrimary-119",
                                                      "outlinedSecondary": "MuiButton-outlinedSecondary-120",
                                                      "raised": "MuiButton-raised-124",
                                                      "raisedPrimary": "MuiButton-raisedPrimary-125",
                                                      "raisedSecondary": "MuiButton-raisedSecondary-126",
                                                      "root": "MuiButton-root-110",
                                                      "sizeLarge": "MuiButton-sizeLarge-134",
                                                      "sizeSmall": "MuiButton-sizeSmall-133",
                                                      "text": "MuiButton-text-112",
                                                      "textPrimary": "MuiButton-textPrimary-113",
                                                      "textSecondary": "MuiButton-textSecondary-114",
                                                    }
                                                  }
                                                  color="default"
                                                  component="button"
                                                  disableFocusRipple={false}
                                                  disabled={false}
                                                  fullWidth={false}
                                                  mini={false}
                                                  onClick={[Function]}
                                                  size="small"
                                                  type="button"
                                                  value="vector"
                                                  variant="outlined"
                                                >
                                                  <WithStyles(ButtonBase)
                                                    className="MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                    component="button"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    focusVisibleClassName="MuiButton-focusVisible-129"
                                                    onClick={[Function]}
                                                    type="button"
                                                    value="vector"
                                                  >
                                                    <ButtonBase
                                                      centerRipple={false}
                                                      className="MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                      classes={
                                                        Object {
                                                          "disabled": "MuiButtonBase-disabled-137",
                                                          "focusVisible": "MuiButtonBase-focusVisible-138",
                                                          "root": "MuiButtonBase-root-136",
                                                        }
                                                      }
                                                      component="button"
                                                      disableRipple={false}
                                                      disableTouchRipple={false}
                                                      disabled={false}
                                                      focusRipple={true}
                                                      focusVisibleClassName="MuiButton-focusVisible-129"
                                                      onClick={[Function]}
                                                      tabIndex="0"
                                                      type="button"
                                                      value="vector"
                                                    >
                                                      <button
                                                        className="MuiButtonBase-root-136 MuiButton-root-110 MuiButton-outlined-118 MuiButton-sizeSmall-133 Component-root-106 ToggleBar-button-102"
                                                        disabled={false}
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onContextMenu={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        tabIndex="0"
                                                        type="button"
                                                        value="vector"
                                                      >
                                                        <span
                                                          className="MuiButton-label-111"
                                                        >
                                                          Vector
                                                        </span>
                                                        <NoSsr
                                                          defer={false}
                                                          fallback={null}
                                                        >
                                                          <WithStyles(TouchRipple)
                                                            center={false}
                                                            innerRef={[Function]}
                                                          >
                                                            <TouchRipple
                                                              center={false}
                                                              classes={
                                                                Object {
                                                                  "child": "MuiTouchRipple-child-194",
                                                                  "childLeaving": "MuiTouchRipple-childLeaving-195",
                                                                  "childPulsate": "MuiTouchRipple-childPulsate-196",
                                                                  "ripple": "MuiTouchRipple-ripple-191",
                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate-193",
                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible-192",
                                                                  "root": "MuiTouchRipple-root-190",
                                                                }
                                                              }
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                className="MuiTouchRipple-root-190"
                                                                component="span"
                                                                enter={true}
                                                                exit={true}
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root-190"
                                                                />
                                                              </TransitionGroup>
                                                            </TouchRipple>
                                                          </WithStyles(TouchRipple)>
                                                        </NoSsr>
                                                      </button>
                                                    </ButtonBase>
                                                  </WithStyles(ButtonBase)>
                                                </Button>
                                              </WithStyles(Button)>
                                            </Component>
                                          </WithStyles(Component)>
                                        </div>
                                      </div>
                                    </Item>
                                  </DragSource(Item)>
                                </DropTarget(DragSource(Item))>
                              </div>
                            </ToggleBar>
                          </WithStyles(ToggleBar)>
                          <PreviewComponent />
                        </Memo(DndProvider)>
                      </Component>
                    </div>
                  </ToolMenu>
                  <WithStyles(UndoRedo)
                    onRedo={[Function]}
                    onReset={[Function]}
                    onUndo={[Function]}
                  >
                    <UndoRedo
                      classes={
                        Object {
                          "button": "UndoRedo-button-139",
                        }
                      }
                      onRedo={[Function]}
                      onReset={[Function]}
                      onUndo={[Function]}
                    >
                      <div
                        className=""
                      >
                        <WithStyles(Button)
                          classes={
                            Object {
                              "root": "UndoRedo-button-139",
                            }
                          }
                          onClick={[Function]}
                        >
                          <Button
                            classes={
                              Object {
                                "colorInherit": "MuiButton-colorInherit-131",
                                "contained": "MuiButton-contained-121",
                                "containedPrimary": "MuiButton-containedPrimary-122",
                                "containedSecondary": "MuiButton-containedSecondary-123",
                                "disabled": "MuiButton-disabled-130",
                                "extendedFab": "MuiButton-extendedFab-128",
                                "fab": "MuiButton-fab-127",
                                "flat": "MuiButton-flat-115",
                                "flatPrimary": "MuiButton-flatPrimary-116",
                                "flatSecondary": "MuiButton-flatSecondary-117",
                                "focusVisible": "MuiButton-focusVisible-129",
                                "fullWidth": "MuiButton-fullWidth-135",
                                "label": "MuiButton-label-111",
                                "mini": "MuiButton-mini-132",
                                "outlined": "MuiButton-outlined-118",
                                "outlinedPrimary": "MuiButton-outlinedPrimary-119",
                                "outlinedSecondary": "MuiButton-outlinedSecondary-120",
                                "raised": "MuiButton-raised-124",
                                "raisedPrimary": "MuiButton-raisedPrimary-125",
                                "raisedSecondary": "MuiButton-raisedSecondary-126",
                                "root": "MuiButton-root-110 UndoRedo-button-139",
                                "sizeLarge": "MuiButton-sizeLarge-134",
                                "sizeSmall": "MuiButton-sizeSmall-133",
                                "text": "MuiButton-text-112",
                                "textPrimary": "MuiButton-textPrimary-113",
                                "textSecondary": "MuiButton-textSecondary-114",
                              }
                            }
                            color="default"
                            component="button"
                            disableFocusRipple={false}
                            disabled={false}
                            fullWidth={false}
                            mini={false}
                            onClick={[Function]}
                            size="medium"
                            type="button"
                            variant="text"
                          >
                            <WithStyles(ButtonBase)
                              className="MuiButton-root-110 UndoRedo-button-139 MuiButton-text-112 MuiButton-flat-115"
                              component="button"
                              disabled={false}
                              focusRipple={true}
                              focusVisibleClassName="MuiButton-focusVisible-129"
                              onClick={[Function]}
                              type="button"
                            >
                              <ButtonBase
                                centerRipple={false}
                                className="MuiButton-root-110 UndoRedo-button-139 MuiButton-text-112 MuiButton-flat-115"
                                classes={
                                  Object {
                                    "disabled": "MuiButtonBase-disabled-137",
                                    "focusVisible": "MuiButtonBase-focusVisible-138",
                                    "root": "MuiButtonBase-root-136",
                                  }
                                }
                                component="button"
                                disableRipple={false}
                                disableTouchRipple={false}
                                disabled={false}
                                focusRipple={true}
                                focusVisibleClassName="MuiButton-focusVisible-129"
                                onClick={[Function]}
                                tabIndex="0"
                                type="button"
                              >
                                <button
                                  className="MuiButtonBase-root-136 MuiButton-root-110 UndoRedo-button-139 MuiButton-text-112 MuiButton-flat-115"
                                  disabled={false}
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onContextMenu={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseUp={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchMove={[Function]}
                                  onTouchStart={[Function]}
                                  tabIndex="0"
                                  type="button"
                                >
                                  <span
                                    className="MuiButton-label-111"
                                  >
                                    Undo
                                  </span>
                                  <NoSsr
                                    defer={false}
                                    fallback={null}
                                  >
                                    <WithStyles(TouchRipple)
                                      center={false}
                                      innerRef={[Function]}
                                    >
                                      <TouchRipple
                                        center={false}
                                        classes={
                                          Object {
                                            "child": "MuiTouchRipple-child-194",
                                            "childLeaving": "MuiTouchRipple-childLeaving-195",
                                            "childPulsate": "MuiTouchRipple-childPulsate-196",
                                            "ripple": "MuiTouchRipple-ripple-191",
                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate-193",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible-192",
                                            "root": "MuiTouchRipple-root-190",
                                          }
                                        }
                                      >
                                        <TransitionGroup
                                          childFactory={[Function]}
                                          className="MuiTouchRipple-root-190"
                                          component="span"
                                          enter={true}
                                          exit={true}
                                        >
                                          <span
                                            className="MuiTouchRipple-root-190"
                                          />
                                        </TransitionGroup>
                                      </TouchRipple>
                                    </WithStyles(TouchRipple)>
                                  </NoSsr>
                                </button>
                              </ButtonBase>
                            </WithStyles(ButtonBase)>
                          </Button>
                        </WithStyles(Button)>
                        <WithStyles(Button)
                          classes={
                            Object {
                              "root": "UndoRedo-button-139",
                            }
                          }
                          onClick={[Function]}
                        >
                          <Button
                            classes={
                              Object {
                                "colorInherit": "MuiButton-colorInherit-131",
                                "contained": "MuiButton-contained-121",
                                "containedPrimary": "MuiButton-containedPrimary-122",
                                "containedSecondary": "MuiButton-containedSecondary-123",
                                "disabled": "MuiButton-disabled-130",
                                "extendedFab": "MuiButton-extendedFab-128",
                                "fab": "MuiButton-fab-127",
                                "flat": "MuiButton-flat-115",
                                "flatPrimary": "MuiButton-flatPrimary-116",
                                "flatSecondary": "MuiButton-flatSecondary-117",
                                "focusVisible": "MuiButton-focusVisible-129",
                                "fullWidth": "MuiButton-fullWidth-135",
                                "label": "MuiButton-label-111",
                                "mini": "MuiButton-mini-132",
                                "outlined": "MuiButton-outlined-118",
                                "outlinedPrimary": "MuiButton-outlinedPrimary-119",
                                "outlinedSecondary": "MuiButton-outlinedSecondary-120",
                                "raised": "MuiButton-raised-124",
                                "raisedPrimary": "MuiButton-raisedPrimary-125",
                                "raisedSecondary": "MuiButton-raisedSecondary-126",
                                "root": "MuiButton-root-110 UndoRedo-button-139",
                                "sizeLarge": "MuiButton-sizeLarge-134",
                                "sizeSmall": "MuiButton-sizeSmall-133",
                                "text": "MuiButton-text-112",
                                "textPrimary": "MuiButton-textPrimary-113",
                                "textSecondary": "MuiButton-textSecondary-114",
                              }
                            }
                            color="default"
                            component="button"
                            disableFocusRipple={false}
                            disabled={false}
                            fullWidth={false}
                            mini={false}
                            onClick={[Function]}
                            size="medium"
                            type="button"
                            variant="text"
                          >
                            <WithStyles(ButtonBase)
                              className="MuiButton-root-110 UndoRedo-button-139 MuiButton-text-112 MuiButton-flat-115"
                              component="button"
                              disabled={false}
                              focusRipple={true}
                              focusVisibleClassName="MuiButton-focusVisible-129"
                              onClick={[Function]}
                              type="button"
                            >
                              <ButtonBase
                                centerRipple={false}
                                className="MuiButton-root-110 UndoRedo-button-139 MuiButton-text-112 MuiButton-flat-115"
                                classes={
                                  Object {
                                    "disabled": "MuiButtonBase-disabled-137",
                                    "focusVisible": "MuiButtonBase-focusVisible-138",
                                    "root": "MuiButtonBase-root-136",
                                  }
                                }
                                component="button"
                                disableRipple={false}
                                disableTouchRipple={false}
                                disabled={false}
                                focusRipple={true}
                                focusVisibleClassName="MuiButton-focusVisible-129"
                                onClick={[Function]}
                                tabIndex="0"
                                type="button"
                              >
                                <button
                                  className="MuiButtonBase-root-136 MuiButton-root-110 UndoRedo-button-139 MuiButton-text-112 MuiButton-flat-115"
                                  disabled={false}
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onContextMenu={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseUp={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchMove={[Function]}
                                  onTouchStart={[Function]}
                                  tabIndex="0"
                                  type="button"
                                >
                                  <span
                                    className="MuiButton-label-111"
                                  >
                                    Redo
                                  </span>
                                  <NoSsr
                                    defer={false}
                                    fallback={null}
                                  >
                                    <WithStyles(TouchRipple)
                                      center={false}
                                      innerRef={[Function]}
                                    >
                                      <TouchRipple
                                        center={false}
                                        classes={
                                          Object {
                                            "child": "MuiTouchRipple-child-194",
                                            "childLeaving": "MuiTouchRipple-childLeaving-195",
                                            "childPulsate": "MuiTouchRipple-childPulsate-196",
                                            "ripple": "MuiTouchRipple-ripple-191",
                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate-193",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible-192",
                                            "root": "MuiTouchRipple-root-190",
                                          }
                                        }
                                      >
                                        <TransitionGroup
                                          childFactory={[Function]}
                                          className="MuiTouchRipple-root-190"
                                          component="span"
                                          enter={true}
                                          exit={true}
                                        >
                                          <span
                                            className="MuiTouchRipple-root-190"
                                          />
                                        </TransitionGroup>
                                      </TouchRipple>
                                    </WithStyles(TouchRipple)>
                                  </NoSsr>
                                </button>
                              </ButtonBase>
                            </WithStyles(ButtonBase)>
                          </Button>
                        </WithStyles(Button)>
                        <WithStyles(Button)
                          classes={
                            Object {
                              "root": "UndoRedo-button-139",
                            }
                          }
                          onClick={[Function]}
                        >
                          <Button
                            classes={
                              Object {
                                "colorInherit": "MuiButton-colorInherit-131",
                                "contained": "MuiButton-contained-121",
                                "containedPrimary": "MuiButton-containedPrimary-122",
                                "containedSecondary": "MuiButton-containedSecondary-123",
                                "disabled": "MuiButton-disabled-130",
                                "extendedFab": "MuiButton-extendedFab-128",
                                "fab": "MuiButton-fab-127",
                                "flat": "MuiButton-flat-115",
                                "flatPrimary": "MuiButton-flatPrimary-116",
                                "flatSecondary": "MuiButton-flatSecondary-117",
                                "focusVisible": "MuiButton-focusVisible-129",
                                "fullWidth": "MuiButton-fullWidth-135",
                                "label": "MuiButton-label-111",
                                "mini": "MuiButton-mini-132",
                                "outlined": "MuiButton-outlined-118",
                                "outlinedPrimary": "MuiButton-outlinedPrimary-119",
                                "outlinedSecondary": "MuiButton-outlinedSecondary-120",
                                "raised": "MuiButton-raised-124",
                                "raisedPrimary": "MuiButton-raisedPrimary-125",
                                "raisedSecondary": "MuiButton-raisedSecondary-126",
                                "root": "MuiButton-root-110 UndoRedo-button-139",
                                "sizeLarge": "MuiButton-sizeLarge-134",
                                "sizeSmall": "MuiButton-sizeSmall-133",
                                "text": "MuiButton-text-112",
                                "textPrimary": "MuiButton-textPrimary-113",
                                "textSecondary": "MuiButton-textSecondary-114",
                              }
                            }
                            color="default"
                            component="button"
                            disableFocusRipple={false}
                            disabled={false}
                            fullWidth={false}
                            mini={false}
                            onClick={[Function]}
                            size="medium"
                            type="button"
                            variant="text"
                          >
                            <WithStyles(ButtonBase)
                              className="MuiButton-root-110 UndoRedo-button-139 MuiButton-text-112 MuiButton-flat-115"
                              component="button"
                              disabled={false}
                              focusRipple={true}
                              focusVisibleClassName="MuiButton-focusVisible-129"
                              onClick={[Function]}
                              type="button"
                            >
                              <ButtonBase
                                centerRipple={false}
                                className="MuiButton-root-110 UndoRedo-button-139 MuiButton-text-112 MuiButton-flat-115"
                                classes={
                                  Object {
                                    "disabled": "MuiButtonBase-disabled-137",
                                    "focusVisible": "MuiButtonBase-focusVisible-138",
                                    "root": "MuiButtonBase-root-136",
                                  }
                                }
                                component="button"
                                disableRipple={false}
                                disableTouchRipple={false}
                                disabled={false}
                                focusRipple={true}
                                focusVisibleClassName="MuiButton-focusVisible-129"
                                onClick={[Function]}
                                tabIndex="0"
                                type="button"
                              >
                                <button
                                  className="MuiButtonBase-root-136 MuiButton-root-110 UndoRedo-button-139 MuiButton-text-112 MuiButton-flat-115"
                                  disabled={false}
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onContextMenu={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseUp={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchMove={[Function]}
                                  onTouchStart={[Function]}
                                  tabIndex="0"
                                  type="button"
                                >
                                  <span
                                    className="MuiButton-label-111"
                                  >
                                    Reset
                                  </span>
                                  <NoSsr
                                    defer={false}
                                    fallback={null}
                                  >
                                    <WithStyles(TouchRipple)
                                      center={false}
                                      innerRef={[Function]}
                                    >
                                      <TouchRipple
                                        center={false}
                                        classes={
                                          Object {
                                            "child": "MuiTouchRipple-child-194",
                                            "childLeaving": "MuiTouchRipple-childLeaving-195",
                                            "childPulsate": "MuiTouchRipple-childPulsate-196",
                                            "ripple": "MuiTouchRipple-ripple-191",
                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate-193",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible-192",
                                            "root": "MuiTouchRipple-root-190",
                                          }
                                        }
                                      >
                                        <TransitionGroup
                                          childFactory={[Function]}
                                          className="MuiTouchRipple-root-190"
                                          component="span"
                                          enter={true}
                                          exit={true}
                                        >
                                          <span
                                            className="MuiTouchRipple-root-190"
                                          />
                                        </TransitionGroup>
                                      </TouchRipple>
                                    </WithStyles(TouchRipple)>
                                  </NoSsr>
                                </button>
                              </ButtonBase>
                            </WithStyles(ButtonBase)>
                          </Button>
                        </WithStyles(Button)>
                      </div>
                    </UndoRedo>
                  </WithStyles(UndoRedo)>
                </div>
                <div />
                <Graph
                  axesSettings={
                    Object {
                      "includeArrows": Object {
                        "down": true,
                        "left": true,
                        "right": true,
                        "up": true,
                      },
                    }
                  }
                  backgroundMarks={Array []}
                  coordinatesOnHover={false}
                  currentTool={
                    Object {
                      "Component": [Function],
                      "addPoint": [Function],
                      "hover": [Function],
                      "toolbar": true,
                      "type": "circle",
                    }
                  }
                  disabledLabels={true}
                  disabledTitle={true}
                  domain={
                    Object {
                      "axisLabel": "x",
                      "labelStep": 1,
                      "max": 5,
                      "min": -5,
                      "step": 1,
                    }
                  }
                  labelModeEnabled={false}
                  labels={Object {}}
                  limitLabeling={true}
                  marks={Array []}
                  onChangeMarks={[Function]}
                  range={
                    Object {
                      "axisLabel": "y",
                      "labelStep": 1,
                      "max": 5,
                      "min": -5,
                      "step": 1,
                    }
                  }
                  showLabels={true}
                  showTitle={true}
                  size={
                    Object {
                      "height": 500,
                      "width": 500,
                    }
                  }
                  title=""
                  tools={
                    Array [
                      Object {
                        "Component": [Function],
                        "addPoint": [Function],
                        "hover": [Function],
                        "toolbar": true,
                        "type": "circle",
                      },
                      Object {
                        "Component": [Function],
                        "addPoint": [Function],
                        "toolbar": true,
                        "type": "line",
                      },
                      Object {
                        "Component": [Function],
                        "addPoint": [Function],
                        "complete": [Function],
                        "toolbar": true,
                        "type": "parabola",
                      },
                      Object {
                        "Component": [Function],
                        "addPoint": [Function],
                        "label": "Point",
                        "toolbar": true,
                        "type": "point",
                      },
                      Object {
                        "Component": [Function],
                        "addPoint": [Function],
                        "complete": [Function],
                        "toolbar": true,
                        "type": "polygon",
                      },
                      Object {
                        "Component": [Function],
                        "addPoint": [Function],
                        "toolbar": true,
                        "type": "ray",
                      },
                      Object {
                        "Component": [Function],
                        "addPoint": [Function],
                        "toolbar": true,
                        "type": "segment",
                      },
                      Object {
                        "Component": [Function],
                        "addPoint": [Function],
                        "complete": [Function],
                        "toolbar": true,
                        "type": "sine",
                      },
                      Object {
                        "Component": [Function],
                        "addPoint": [Function],
                        "toolbar": true,
                        "type": "vector",
                      },
                      Object {
                        "Component": [Function],
                        "addPoint": [Function],
                        "complete": [Function],
                        "toolbar": false,
                        "type": "absolute",
                      },
                      Object {
                        "Component": [Function],
                        "addPoint": [Function],
                        "complete": [Function],
                        "toolbar": false,
                        "type": "exponential",
                      },
                      Object {
                        "toolbar": true,
                        "type": "label",
                      },
                    ]
                  }
                >
                  <WithStyles(Root)
                    disabledLabels={true}
                    disabledTitle={true}
                    graphProps={
                      Object {
                        "domain": Object {
                          "axisLabel": "x",
                          "labelStep": 1,
                          "max": 5,
                          "min": -5,
                          "step": 1,
                        },
                        "getRootNode": [Function],
                        "range": Object {
                          "axisLabel": "y",
                          "labelStep": 1,
                          "max": 5,
                          "min": -5,
                          "step": 1,
                        },
                        "scale": Object {
                          "x": [Function],
                          "y": [Function],
                        },
                        "size": Object {
                          "height": 500,
                          "width": 500,
                        },
                        "snap": Object {
                          "x": [Function],
                          "y": [Function],
                        },
                      }
                    }
                    labelModeEnabled={false}
                    labels={Object {}}
                    labelsPlaceholders={Object {}}
                    limitLabeling={true}
                    mathMlOptions={Object {}}
                    rootRef={[Function]}
                    showLabels={true}
                    showTitle={true}
                    title=""
                  >
                    <Root
                      classes={
                        Object {
                          "chart": "Root-chart-144",
                          "chartTitle": "Root-chartTitle-147",
                          "defineChart": "Root-defineChart-143",
                          "disabledTitle": "Root-disabledTitle-148",
                          "graphBox": "Root-graphBox-145",
                          "graphTitle": "Root-graphTitle-146",
                          "rightMargin": "Root-rightMargin-149",
                          "root": "Root-root-140",
                          "sidePixelGuides": "Root-sidePixelGuides-152",
                          "sidePixelIndicator": "Root-sidePixelIndicator-153",
                          "svg": "Root-svg-142",
                          "topPixelGuides": "Root-topPixelGuides-150",
                          "topPixelIndicator": "Root-topPixelIndicator-151",
                          "wrapper": "Root-wrapper-141",
                        }
                      }
                      disabledLabels={true}
                      disabledTitle={true}
                      graphProps={
                        Object {
                          "domain": Object {
                            "axisLabel": "x",
                            "labelStep": 1,
                            "max": 5,
                            "min": -5,
                            "step": 1,
                          },
                          "getRootNode": [Function],
                          "range": Object {
                            "axisLabel": "y",
                            "labelStep": 1,
                            "max": 5,
                            "min": -5,
                            "step": 1,
                          },
                          "scale": Object {
                            "x": [Function],
                            "y": [Function],
                          },
                          "size": Object {
                            "height": 500,
                            "width": 500,
                          },
                          "snap": Object {
                            "x": [Function],
                            "y": [Function],
                          },
                        }
                      }
                      labelModeEnabled={false}
                      labels={Object {}}
                      labelsPlaceholders={Object {}}
                      limitLabeling={true}
                      mathMlOptions={Object {}}
                      rootRef={[Function]}
                      showLabels={true}
                      showTitle={true}
                      title=""
                    >
                      <div
                        className="Root-root-140"
                      >
                        <div
                          className="Root-graphTitle-146 Root-disabledTitle-148"
                          dangerouslySetInnerHTML={
                            Object {
                              "__html": "",
                            }
                          }
                          id="editable-title"
                          style={Object {}}
                        />
                        <WithStyles(LabelComponent)
                          disabledLabel={true}
                          graphHeight={580}
                          graphWidth={640}
                          mathMlOptions={Object {}}
                          onChange={[Function]}
                          side="top"
                        >
                          <LabelComponent
                            classes={
                              Object {
                                "axisLabel": "LabelComponent-axisLabel-155",
                                "chartLabel": "LabelComponent-chartLabel-156",
                                "customBottom": "LabelComponent-customBottom-161",
                                "disabledLabel": "LabelComponent-disabledLabel-157",
                                "displayNone": "LabelComponent-displayNone-162",
                                "editLabel": "LabelComponent-editLabel-158",
                                "label": "LabelComponent-label-154",
                                "rotateLeftLabel": "LabelComponent-rotateLeftLabel-159",
                                "rotateRightLabel": "LabelComponent-rotateRightLabel-160",
                              }
                            }
                            disabledLabel={true}
                            graphHeight={580}
                            graphWidth={640}
                            mathMlOptions={Object {}}
                            onChange={[Function]}
                            side="top"
                          >
                            <Readable
                              false={true}
                            >
                              <div
                                className="LabelComponent-axisLabel-155"
                                data-pie-readable={false}
                                key=".0"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "left": 0,
                                    "top": 0,
                                    "width": 632,
                                  }
                                }
                              >
                                <div
                                  className="LabelComponent-disabledLabel-157"
                                  dangerouslySetInnerHTML={
                                    Object {
                                      "__html": "",
                                    }
                                  }
                                />
                              </div>
                            </Readable>
                          </LabelComponent>
                        </WithStyles(LabelComponent)>
                        <div
                          className="Root-wrapper-141"
                        >
                          <WithStyles(LabelComponent)
                            disabledLabel={true}
                            graphHeight={580}
                            graphWidth={640}
                            mathMlOptions={Object {}}
                            onChange={[Function]}
                            side="left"
                          >
                            <LabelComponent
                              classes={
                                Object {
                                  "axisLabel": "LabelComponent-axisLabel-155",
                                  "chartLabel": "LabelComponent-chartLabel-156",
                                  "customBottom": "LabelComponent-customBottom-161",
                                  "disabledLabel": "LabelComponent-disabledLabel-157",
                                  "displayNone": "LabelComponent-displayNone-162",
                                  "editLabel": "LabelComponent-editLabel-158",
                                  "label": "LabelComponent-label-154",
                                  "rotateLeftLabel": "LabelComponent-rotateLeftLabel-159",
                                  "rotateRightLabel": "LabelComponent-rotateRightLabel-160",
                                }
                              }
                              disabledLabel={true}
                              graphHeight={580}
                              graphWidth={640}
                              mathMlOptions={Object {}}
                              onChange={[Function]}
                              side="left"
                            >
                              <Readable
                                false={true}
                              >
                                <div
                                  className="LabelComponent-axisLabel-155 LabelComponent-rotateLeftLabel-159"
                                  data-pie-readable={false}
                                  key=".0"
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "left": 0,
                                      "top": "572px",
                                      "width": 572,
                                    }
                                  }
                                >
                                  <div
                                    className="LabelComponent-disabledLabel-157"
                                    dangerouslySetInnerHTML={
                                      Object {
                                        "__html": "",
                                      }
                                    }
                                  />
                                </div>
                              </Readable>
                            </LabelComponent>
                          </WithStyles(LabelComponent)>
                          <svg
                            className="Root-chart-144"
                            height={580}
                            width={640}
                          >
                            <g
                              className="Root-graphBox-145"
                              transform="translate(70, 40)"
                            >
                              <g>
                                <WithStyles(Grid)
                                  graphProps={
                                    Object {
                                      "domain": Object {
                                        "axisLabel": "x",
                                        "labelStep": 1,
                                        "max": 5,
                                        "min": -5,
                                        "step": 1,
                                      },
                                      "getRootNode": [Function],
                                      "range": Object {
                                        "axisLabel": "y",
                                        "labelStep": 1,
                                        "max": 5,
                                        "min": -5,
                                        "step": 1,
                                      },
                                      "scale": Object {
                                        "x": [Function],
                                        "y": [Function],
                                      },
                                      "size": Object {
                                        "height": 500,
                                        "width": 500,
                                      },
                                      "snap": Object {
                                        "x": [Function],
                                        "y": [Function],
                                      },
                                    }
                                  }
                                  labelModeEnabled={false}
                                  limitLabeling={true}
                                >
                                  <Grid
                                    classes={Object {}}
                                    graphProps={
                                      Object {
                                        "domain": Object {
                                          "axisLabel": "x",
                                          "labelStep": 1,
                                          "max": 5,
                                          "min": -5,
                                          "step": 1,
                                        },
                                        "getRootNode": [Function],
                                        "range": Object {
                                          "axisLabel": "y",
                                          "labelStep": 1,
                                          "max": 5,
                                          "min": -5,
                                          "step": 1,
                                        },
                                        "scale": Object {
                                          "x": [Function],
                                          "y": [Function],
                                        },
                                        "size": Object {
                                          "height": 500,
                                          "width": 500,
                                        },
                                        "snap": Object {
                                          "x": [Function],
                                          "y": [Function],
                                        },
                                      }
                                    }
                                    labelModeEnabled={false}
                                    limitLabeling={true}
                                  >
                                    <r
                                      columnTickValues={
                                        Array [
                                          0,
                                          -1,
                                          -2,
                                          -3,
                                          -4,
                                          -5,
                                          1,
                                          2,
                                          3,
                                          4,
                                          5,
                                        ]
                                      }
                                      height={500}
                                      innerRef={[Function]}
                                      rowTickValues={
                                        Array [
                                          0,
                                          -1,
                                          -2,
                                          -3,
                                          -4,
                                          -5,
                                          1,
                                          2,
                                          3,
                                          4,
                                          5,
                                        ]
                                      }
                                      stroke="#E1E6EC"
                                      width={500}
                                      xScale={[Function]}
                                      yScale={[Function]}
                                    >
                                      <t
                                        className="vx-grid"
                                      >
                                        <g
                                          className="vx-group vx-grid"
                                          transform="translate(0, 0)"
                                        >
                                          <q
                                            innerRef={[Function]}
                                            scale={[Function]}
                                            stroke="#E1E6EC"
                                            tickValues={
                                              Array [
                                                0,
                                                -1,
                                                -2,
                                                -3,
                                                -4,
                                                -5,
                                                1,
                                                2,
                                                3,
                                                4,
                                                5,
                                              ]
                                            }
                                            width={500}
                                          >
                                            <t
                                              className="vx-rows"
                                              left={0}
                                              top={0}
                                            >
                                              <g
                                                className="vx-group vx-rows"
                                                transform="translate(0, 0)"
                                              >
                                                <a
                                                  from={
                                                    r {
                                                      "x": 0,
                                                      "y": 250,
                                                    }
                                                  }
                                                  innerRef={[Function]}
                                                  key="row-line-0-0"
                                                  stroke="#E1E6EC"
                                                  strokeWidth={1}
                                                  to={
                                                    r {
                                                      "x": 500,
                                                      "y": 250,
                                                    }
                                                  }
                                                >
                                                  <line
                                                    className="vx-line"
                                                    fill="transparent"
                                                    stroke="#E1E6EC"
                                                    strokeWidth={1}
                                                    x1={0}
                                                    x2={500}
                                                    y1={250}
                                                    y2={250}
                                                  />
                                                </a>
                                                <a
                                                  from={
                                                    r {
                                                      "x": 0,
                                                      "y": 300,
                                                    }
                                                  }
                                                  innerRef={[Function]}
                                                  key="row-line--1-1"
                                                  stroke="#E1E6EC"
                                                  strokeWidth={1}
                                                  to={
                                                    r {
                                                      "x": 500,
                                                      "y": 300,
                                                    }
                                                  }
                                                >
                                                  <line
                                                    className="vx-line"
                                                    fill="transparent"
                                                    stroke="#E1E6EC"
                                                    strokeWidth={1}
                                                    x1={0}
                                                    x2={500}
                                                    y1={300}
                                                    y2={300}
                                                  />
                                                </a>
                                                <a
                                                  from={
                                                    r {
                                                      "x": 0,
                                                      "y": 350,
                                                    }
                                                  }
                                                  innerRef={[Function]}
                                                  key="row-line--2-2"
                                                  stroke="#E1E6EC"
                                                  strokeWidth={1}
                                                  to={
                                                    r {
                                                      "x": 500,
                                                      "y": 350,
                                                    }
                                                  }
                                                >
                                                  <line
                                                    className="vx-line"
                                                    fill="transparent"
                                                    stroke="#E1E6EC"
                                                    strokeWidth={1}
                                                    x1={0}
                                                    x2={500}
                                                    y1={350}
                                                    y2={350}
                                                  />
                                                </a>
                                                <a
                                                  from={
                                                    r {
                                                      "x": 0,
                                                      "y": 400,
                                                    }
                                                  }
                                                  innerRef={[Function]}
                                                  key="row-line--3-3"
                                                  stroke="#E1E6EC"
                                                  strokeWidth={1}
                                                  to={
                                                    r {
                                                      "x": 500,
                                                      "y": 400,
                                                    }
                                                  }
                                                >
                                                  <line
                                                    className="vx-line"
                                                    fill="transparent"
                                                    stroke="#E1E6EC"
                                                    strokeWidth={1}
                                                    x1={0}
                                                    x2={500}
                                                    y1={400}
                                                    y2={400}
                                                  />
                                                </a>
                                                <a
                                                  from={
                                                    r {
                                                      "x": 0,
                                                      "y": 450,
                                                    }
                                                  }
                                                  innerRef={[Function]}
                                                  key="row-line--4-4"
                                                  stroke="#E1E6EC"
                                                  strokeWidth={1}
                                                  to={
                                                    r {
                                                      "x": 500,
                                                      "y": 450,
                                                    }
                                                  }
                                                >
                                                  <line
                                                    className="vx-line"
                                                    fill="transparent"
                                                    stroke="#E1E6EC"
                                                    strokeWidth={1}
                                                    x1={0}
                                                    x2={500}
                                                    y1={450}
                                                    y2={450}
                                                  />
                                                </a>
                                                <a
                                                  from={
                                                    r {
                                                      "x": 0,
                                                      "y": 500,
                                                    }
                                                  }
                                                  innerRef={[Function]}
                                                  key="row-line--5-5"
                                                  stroke="#E1E6EC"
                                                  strokeWidth={1}
                                                  to={
                                                    r {
                                                      "x": 500,
                                                      "y": 500,
                                                    }
                                                  }
                                                >
                                                  <line
                                                    className="vx-line"
                                                    fill="transparent"
                                                    stroke="#E1E6EC"
                                                    strokeWidth={1}
                                                    x1={0}
                                                    x2={500}
                                                    y1={500}
                                                    y2={500}
                                                  />
                                                </a>
                                                <a
                                                  from={
                                                    r {
                                                      "x": 0,
                                                      "y": 200,
                                                    }
                                                  }
                                                  innerRef={[Function]}
                                                  key="row-line-1-6"
                                                  stroke="#E1E6EC"
                                                  strokeWidth={1}
                                                  to={
                                                    r {
                                                      "x": 500,
                                                      "y": 200,
                                                    }
                                                  }
                                                >
                                                  <line
                                                    className="vx-line"
                                                    fill="transparent"
                                                    stroke="#E1E6EC"
                                                    strokeWidth={1}
                                                    x1={0}
                                                    x2={500}
                                                    y1={200}
                                                    y2={200}
                                                  />
                                                </a>
                                                <a
                                                  from={
                                                    r {
                                                      "x": 0,
                                                      "y": 150.00000000000003,
                                                    }
                                                  }
                                                  innerRef={[Function]}
                                                  key="row-line-2-7"
                                                  stroke="#E1E6EC"
                                                  strokeWidth={1}
                                                  to={
                                                    r {
                                                      "x": 500,
                                                      "y": 150.00000000000003,
                                                    }
                                                  }
                                                >
                                                  <line
                                                    className="vx-line"
                                                    fill="transparent"
                                                    stroke="#E1E6EC"
                                                    strokeWidth={1}
                                                    x1={0}
                                                    x2={500}
                                                    y1={150.00000000000003}
                                                    y2={150.00000000000003}
                                                  />
                                                </a>
                                                <a
                                                  from={
                                                    r {
                                                      "x": 0,
                                                      "y": 99.99999999999997,
                                                    }
                                                  }
                                                  innerRef={[Function]}
                                                  key="row-line-3-8"
                                                  stroke="#E1E6EC"
                                                  strokeWidth={1}
                                                  to={
                                                    r {
                                                      "x": 500,
                                                      "y": 99.99999999999997,
                                                    }
                                                  }
                                                >
                                                  <line
                                                    className="vx-line"
                                                    fill="transparent"
                                                    stroke="#E1E6EC"
                                                    strokeWidth={1}
                                                    x1={0}
                                                    x2={500}
                                                    y1={99.99999999999997}
                                                    y2={99.99999999999997}
                                                  />
                                                </a>
                                                <a
                                                  from={
                                                    r {
                                                      "x": 0,
                                                      "y": 49.999999999999986,
                                                    }
                                                  }
                                                  innerRef={[Function]}
                                                  key="row-line-4-9"
                                                  stroke="#E1E6EC"
                                                  strokeWidth={1}
                                                  to={
                                                    r {
                                                      "x": 500,
                                                      "y": 49.999999999999986,
                                                    }
                                                  }
                                                >
                                                  <line
                                                    className="vx-line"
                                                    fill="transparent"
                                                    stroke="#E1E6EC"
                                                    strokeWidth={1}
                                                    x1={0}
                                                    x2={500}
                                                    y1={49.999999999999986}
                                                    y2={49.999999999999986}
                                                  />
                                                </a>
                                                <a
                                                  from={
                                                    r {
                                                      "x": 0,
                                                      "y": 0,
                                                    }
                                                  }
                                                  innerRef={[Function]}
                                                  key="row-line-5-10"
                                                  stroke="#E1E6EC"
                                                  strokeWidth={1}
                                                  to={
                                                    r {
                                                      "x": 500,
                                                      "y": 0,
                                                    }
                                                  }
                                                >
                                                  <line
                                                    className="vx-line"
                                                    fill="transparent"
                                                    stroke="#E1E6EC"
                                                    strokeWidth={1}
                                                    x1={0}
                                                    x2={500}
                                                    y1={0}
                                                    y2={0}
                                                  />
                                                </a>
                                              </g>
                                            </t>
                                          </q>
                                          <V
                                            height={500}
                                            innerRef={[Function]}
                                            scale={[Function]}
                                            stroke="#E1E6EC"
                                            tickValues={
                                              Array [
                                                0,
                                                -1,
                                                -2,
                                                -3,
                                                -4,
                                                -5,
                                                1,
                                                2,
                                                3,
                                                4,
                                                5,
                                              ]
                                            }
                                          >
                                            <t
                                              className="vx-columns"
                                              left={0}
                                              top={0}
                                            >
                                              <g
                                                className="vx-group vx-columns"
                                                transform="translate(0, 0)"
                                              >
                                                <a
                                                  from={
                                                    r {
                                                      "x": 250,
                                                      "y": 0,
                                                    }
                                                  }
                                                  innerRef={[Function]}
                                                  key="column-line-0-0"
                                                  stroke="#E1E6EC"
                                                  strokeWidth={1}
                                                  to={
                                                    r {
                                                      "x": 250,
                                                      "y": 500,
                                                    }
                                                  }
                                                >
                                                  <line
                                                    className="vx-line"
                                                    fill="transparent"
                                                    stroke="#E1E6EC"
                                                    strokeWidth={1}
                                                    x1={250}
                                                    x2={250}
                                                    y1={0}
                                                    y2={500}
                                                  />
                                                </a>
                                                <a
                                                  from={
                                                    r {
                                                      "x": 200,
                                                      "y": 0,
                                                    }
                                                  }
                                                  innerRef={[Function]}
                                                  key="column-line--1-1"
                                                  stroke="#E1E6EC"
                                                  strokeWidth={1}
                                                  to={
                                                    r {
                                                      "x": 200,
                                                      "y": 500,
                                                    }
                                                  }
                                                >
                                                  <line
                                                    className="vx-line"
                                                    fill="transparent"
                                                    stroke="#E1E6EC"
                                                    strokeWidth={1}
                                                    x1={200}
                                                    x2={200}
                                                    y1={0}
                                                    y2={500}
                                                  />
                                                </a>
                                                <a
                                                  from={
                                                    r {
                                                      "x": 150,
                                                      "y": 0,
                                                    }
                                                  }
                                                  innerRef={[Function]}
                                                  key="column-line--2-2"
                                                  stroke="#E1E6EC"
                                                  strokeWidth={1}
                                                  to={
                                                    r {
                                                      "x": 150,
                                                      "y": 500,
                                                    }
                                                  }
                                                >
                                                  <line
                                                    className="vx-line"
                                                    fill="transparent"
                                                    stroke="#E1E6EC"
                                                    strokeWidth={1}
                                                    x1={150}
                                                    x2={150}
                                                    y1={0}
                                                    y2={500}
                                                  />
                                                </a>
                                                <a
                                                  from={
                                                    r {
                                                      "x": 100,
                                                      "y": 0,
                                                    }
                                                  }
                                                  innerRef={[Function]}
                                                  key="column-line--3-3"
                                                  stroke="#E1E6EC"
                                                  strokeWidth={1}
                                                  to={
                                                    r {
                                                      "x": 100,
                                                      "y": 500,
                                                    }
                                                  }
                                                >
                                                  <line
                                                    className="vx-line"
                                                    fill="transparent"
                                                    stroke="#E1E6EC"
                                                    strokeWidth={1}
                                                    x1={100}
                                                    x2={100}
                                                    y1={0}
                                                    y2={500}
                                                  />
                                                </a>
                                                <a
                                                  from={
                                                    r {
                                                      "x": 50,
                                                      "y": 0,
                                                    }
                                                  }
                                                  innerRef={[Function]}
                                                  key="column-line--4-4"
                                                  stroke="#E1E6EC"
                                                  strokeWidth={1}
                                                  to={
                                                    r {
                                                      "x": 50,
                                                      "y": 500,
                                                    }
                                                  }
                                                >
                                                  <line
                                                    className="vx-line"
                                                    fill="transparent"
                                                    stroke="#E1E6EC"
                                                    strokeWidth={1}
                                                    x1={50}
                                                    x2={50}
                                                    y1={0}
                                                    y2={500}
                                                  />
                                                </a>
                                                <a
                                                  from={
                                                    r {
                                                      "x": 0,
                                                      "y": 0,
                                                    }
                                                  }
                                                  innerRef={[Function]}
                                                  key="column-line--5-5"
                                                  stroke="#E1E6EC"
                                                  strokeWidth={1}
                                                  to={
                                                    r {
                                                      "x": 0,
                                                      "y": 500,
                                                    }
                                                  }
                                                >
                                                  <line
                                                    className="vx-line"
                                                    fill="transparent"
                                                    stroke="#E1E6EC"
                                                    strokeWidth={1}
                                                    x1={0}
                                                    x2={0}
                                                    y1={0}
                                                    y2={500}
                                                  />
                                                </a>
                                                <a
                                                  from={
                                                    r {
                                                      "x": 300,
                                                      "y": 0,
                                                    }
                                                  }
                                                  innerRef={[Function]}
                                                  key="column-line-1-6"
                                                  stroke="#E1E6EC"
                                                  strokeWidth={1}
                                                  to={
                                                    r {
                                                      "x": 300,
                                                      "y": 500,
                                                    }
                                                  }
                                                >
                                                  <line
                                                    className="vx-line"
                                                    fill="transparent"
                                                    stroke="#E1E6EC"
                                                    strokeWidth={1}
                                                    x1={300}
                                                    x2={300}
                                                    y1={0}
                                                    y2={500}
                                                  />
                                                </a>
                                                <a
                                                  from={
                                                    r {
                                                      "x": 350,
                                                      "y": 0,
                                                    }
                                                  }
                                                  innerRef={[Function]}
                                                  key="column-line-2-7"
                                                  stroke="#E1E6EC"
                                                  strokeWidth={1}
                                                  to={
                                                    r {
                                                      "x": 350,
                                                      "y": 500,
                                                    }
                                                  }
                                                >
                                                  <line
                                                    className="vx-line"
                                                    fill="transparent"
                                                    stroke="#E1E6EC"
                                                    strokeWidth={1}
                                                    x1={350}
                                                    x2={350}
                                                    y1={0}
                                                    y2={500}
                                                  />
                                                </a>
                                                <a
                                                  from={
                                                    r {
                                                      "x": 400,
                                                      "y": 0,
                                                    }
                                                  }
                                                  innerRef={[Function]}
                                                  key="column-line-3-8"
                                                  stroke="#E1E6EC"
                                                  strokeWidth={1}
                                                  to={
                                                    r {
                                                      "x": 400,
                                                      "y": 500,
                                                    }
                                                  }
                                                >
                                                  <line
                                                    className="vx-line"
                                                    fill="transparent"
                                                    stroke="#E1E6EC"
                                                    strokeWidth={1}
                                                    x1={400}
                                                    x2={400}
                                                    y1={0}
                                                    y2={500}
                                                  />
                                                </a>
                                                <a
                                                  from={
                                                    r {
                                                      "x": 450,
                                                      "y": 0,
                                                    }
                                                  }
                                                  innerRef={[Function]}
                                                  key="column-line-4-9"
                                                  stroke="#E1E6EC"
                                                  strokeWidth={1}
                                                  to={
                                                    r {
                                                      "x": 450,
                                                      "y": 500,
                                                    }
                                                  }
                                                >
                                                  <line
                                                    className="vx-line"
                                                    fill="transparent"
                                                    stroke="#E1E6EC"
                                                    strokeWidth={1}
                                                    x1={450}
                                                    x2={450}
                                                    y1={0}
                                                    y2={500}
                                                  />
                                                </a>
                                                <a
                                                  from={
                                                    r {
                                                      "x": 500,
                                                      "y": 0,
                                                    }
                                                  }
                                                  innerRef={[Function]}
                                                  key="column-line-5-10"
                                                  stroke="#E1E6EC"
                                                  strokeWidth={1}
                                                  to={
                                                    r {
                                                      "x": 500,
                                                      "y": 500,
                                                    }
                                                  }
                                                >
                                                  <line
                                                    className="vx-line"
                                                    fill="transparent"
                                                    stroke="#E1E6EC"
                                                    strokeWidth={1}
                                                    x1={500}
                                                    x2={500}
                                                    y1={0}
                                                    y2={500}
                                                  />
                                                </a>
                                              </g>
                                            </t>
                                          </V>
                                        </g>
                                      </t>
                                    </r>
                                  </Grid>
                                </WithStyles(Grid)>
                                <Axes
                                  graphProps={
                                    Object {
                                      "domain": Object {
                                        "axisLabel": "x",
                                        "labelStep": 1,
                                        "max": 5,
                                        "min": -5,
                                        "step": 1,
                                      },
                                      "getRootNode": [Function],
                                      "range": Object {
                                        "axisLabel": "y",
                                        "labelStep": 1,
                                        "max": 5,
                                        "min": -5,
                                        "step": 1,
                                      },
                                      "scale": Object {
                                        "x": [Function],
                                        "y": [Function],
                                      },
                                      "size": Object {
                                        "height": 500,
                                        "width": 500,
                                      },
                                      "snap": Object {
                                        "x": [Function],
                                        "y": [Function],
                                      },
                                    }
                                  }
                                  includeArrows={
                                    Object {
                                      "down": true,
                                      "left": true,
                                      "right": true,
                                      "up": true,
                                    }
                                  }
                                  labelModeEnabled={false}
                                  limitLabeling={true}
                                >
                                  <WithStyles(RawXAxis)
                                    columnTicksValues={
                                      Array [
                                        0,
                                        -1,
                                        -2,
                                        -3,
                                        -4,
                                        -5,
                                        1,
                                        2,
                                        3,
                                        4,
                                        5,
                                      ]
                                    }
                                    distanceFromOriginToFirstNegativeY={50}
                                    dy={25}
                                    graphProps={
                                      Object {
                                        "domain": Object {
                                          "axisLabel": "x",
                                          "labelStep": 1,
                                          "max": 5,
                                          "min": -5,
                                          "step": 1,
                                        },
                                        "getRootNode": [Function],
                                        "range": Object {
                                          "axisLabel": "y",
                                          "labelStep": 1,
                                          "max": 5,
                                          "min": -5,
                                          "step": 1,
                                        },
                                        "scale": Object {
                                          "x": [Function],
                                          "y": [Function],
                                        },
                                        "size": Object {
                                          "height": 500,
                                          "width": 500,
                                        },
                                        "snap": Object {
                                          "x": [Function],
                                          "y": [Function],
                                        },
                                      }
                                    }
                                    includeArrows={
                                      Object {
                                        "down": true,
                                        "left": true,
                                        "right": true,
                                        "up": true,
                                      }
                                    }
                                    labelModeEnabled={false}
                                    limitLabeling={true}
                                    skipValues={Array []}
                                  >
                                    <RawXAxis
                                      classes={
                                        Object {
                                          "arrow": "RawXAxis-arrow-164",
                                          "axisLabelHolder": "RawXAxis-axisLabelHolder-167",
                                          "labelFontSize": "RawXAxis-labelFontSize-166",
                                          "line": "RawXAxis-line-163",
                                          "tick": "RawXAxis-tick-165",
                                        }
                                      }
                                      columnTicksValues={
                                        Array [
                                          0,
                                          -1,
                                          -2,
                                          -3,
                                          -4,
                                          -5,
                                          1,
                                          2,
                                          3,
                                          4,
                                          5,
                                        ]
                                      }
                                      distanceFromOriginToFirstNegativeY={50}
                                      dy={25}
                                      graphProps={
                                        Object {
                                          "domain": Object {
                                            "axisLabel": "x",
                                            "labelStep": 1,
                                            "max": 5,
                                            "min": -5,
                                            "step": 1,
                                          },
                                          "getRootNode": [Function],
                                          "range": Object {
                                            "axisLabel": "y",
                                            "labelStep": 1,
                                            "max": 5,
                                            "min": -5,
                                            "step": 1,
                                          },
                                          "scale": Object {
                                            "x": [Function],
                                            "y": [Function],
                                          },
                                          "size": Object {
                                            "height": 500,
                                            "width": 500,
                                          },
                                          "snap": Object {
                                            "x": [Function],
                                            "y": [Function],
                                          },
                                        }
                                      }
                                      includeArrows={
                                        Object {
                                          "down": true,
                                          "left": true,
                                          "right": true,
                                          "up": true,
                                        }
                                      }
                                      labelModeEnabled={false}
                                      limitLabeling={true}
                                      skipValues={Array []}
                                    >
                                      <F
                                        axisLineClassName="RawXAxis-line-163"
                                        left={0}
                                        rangePadding={8}
                                        scale={[Function]}
                                        tickClassName="RawXAxis-tick-165"
                                        tickFormat={[Function]}
                                        tickLabelProps={[Function]}
                                        tickValues={
                                          Array [
                                            "0",
                                            0,
                                            -1,
                                            -2,
                                            -3,
                                            -4,
                                            -5,
                                            1,
                                            2,
                                            3,
                                            4,
                                            5,
                                          ]
                                        }
                                        top={250}
                                      >
                                        <t
                                          className="vx-axis"
                                          left={0}
                                          top={250}
                                        >
                                          <g
                                            className="vx-group vx-axis"
                                            transform="translate(0, 250)"
                                          >
                                            <t
                                              className="vx-axis-tick RawXAxis-tick-165"
                                              key="vx-tick-0-0"
                                            >
                                              <g
                                                className="vx-group vx-axis-tick RawXAxis-tick-165"
                                                transform="translate(0, 0)"
                                              >
                                                <a
                                                  from={
                                                    r {
                                                      "x": 250,
                                                      "y": 0,
                                                    }
                                                  }
                                                  stroke="black"
                                                  to={
                                                    r {
                                                      "x": 250,
                                                      "y": 8,
                                                    }
                                                  }
                                                >
                                                  <line
                                                    className="vx-line"
                                                    fill="transparent"
                                                    stroke="black"
                                                    x1={250}
                                                    x2={250}
                                                    y1={0}
                                                    y2={8}
                                                  />
                                                </a>
                                                <r
                                                  capHeight="0.71em"
                                                  cursor="inherit"
                                                  dx={-10}
                                                  dy={-7}
                                                  fontFamily="Roboto"
                                                  fontSize="14px"
                                                  lineHeight="1em"
                                                  scaleToFit={false}
                                                  textAnchor="middle"
                                                  verticalAnchor="end"
                                                  x={250}
                                                  y={25}
                                                >
                                                  <svg
                                                    fontSize="14px"
                                                    style={
                                                      Object {
                                                        "overflow": "visible",
                                                      }
                                                    }
                                                    x={-10}
                                                    y={-7}
                                                  >
                                                    <text
                                                      cursor="inherit"
                                                      fontFamily="Roboto"
                                                      fontSize="14px"
                                                      textAnchor="middle"
                                                      x={250}
                                                      y={25}
                                                    >
                                                      <tspan
                                                        dy="0em"
                                                        key="0"
                                                        x={250}
                                                      >
                                                        0
                                                      </tspan>
                                                    </text>
                                                  </svg>
                                                </r>
                                              </g>
                                            </t>
                                            <t
                                              className="vx-axis-tick RawXAxis-tick-165"
                                              key="vx-tick-0-1"
                                            >
                                              <g
                                                className="vx-group vx-axis-tick RawXAxis-tick-165"
                                                transform="translate(0, 0)"
                                              >
                                                <a
                                                  from={
                                                    r {
                                                      "x": 250,
                                                      "y": 0,
                                                    }
                                                  }
                                                  stroke="black"
                                                  to={
                                                    r {
                                                      "x": 250,
                                                      "y": 8,
                                                    }
                                                  }
                                                >
                                                  <line
                                                    className="vx-line"
                                                    fill="transparent"
                                                    stroke="black"
                                                    x1={250}
                                                    x2={250}
                                                    y1={0}
                                                    y2={8}
                                                  />
                                                </a>
                                                <r
                                                  capHeight="0.71em"
                                                  cursor="inherit"
                                                  dx={0}
                                                  dy={0}
                                                  fontFamily="Roboto"
                                                  fontSize="14px"
                                                  lineHeight="1em"
                                                  scaleToFit={false}
                                                  textAnchor="middle"
                                                  verticalAnchor="end"
                                                  x={250}
                                                  y={25}
                                                >
                                                  <svg
                                                    fontSize="14px"
                                                    style={
                                                      Object {
                                                        "overflow": "visible",
                                                      }
                                                    }
                                                    x={0}
                                                    y={0}
                                                  >
                                                    <text
                                                      cursor="inherit"
                                                      fontFamily="Roboto"
                                                      fontSize="14px"
                                                      textAnchor="middle"
                                                      x={250}
                                                      y={25}
                                                    >
                                                      <tspan
                                                        dy="0em"
                                                        key="0"
                                                        x={250}
                                                      />
                                                    </text>
                                                  </svg>
                                                </r>
                                              </g>
                                            </t>
                                            <t
                                              className="vx-axis-tick RawXAxis-tick-165"
                                              key="vx-tick--1-2"
                                            >
                                              <g
                                                className="vx-group vx-axis-tick RawXAxis-tick-165"
                                                transform="translate(0, 0)"
                                              >
                                                <a
                                                  from={
                                                    r {
                                                      "x": 200,
                                                      "y": 0,
                                                    }
                                                  }
                                                  stroke="black"
                                                  to={
                                                    r {
                                                      "x": 200,
                                                      "y": 8,
                                                    }
                                                  }
                                                >
                                                  <line
                                                    className="vx-line"
                                                    fill="transparent"
                                                    stroke="black"
                                                    x1={200}
                                                    x2={200}
                                                    y1={0}
                                                    y2={8}
                                                  />
                                                </a>
                                                <r
                                                  capHeight="0.71em"
                                                  cursor="inherit"
                                                  dx={0}
                                                  dy={0}
                                                  fontFamily="Roboto"
                                                  fontSize="14px"
                                                  lineHeight="1em"
                                                  scaleToFit={false}
                                                  textAnchor="middle"
                                                  verticalAnchor="end"
                                                  x={200}
                                                  y={25}
                                                >
                                                  <svg
                                                    fontSize="14px"
                                                    style={
                                                      Object {
                                                        "overflow": "visible",
                                                      }
                                                    }
                                                    x={0}
                                                    y={0}
                                                  >
                                                    <text
                                                      cursor="inherit"
                                                      fontFamily="Roboto"
                                                      fontSize="14px"
                                                      textAnchor="middle"
                                                      x={200}
                                                      y={25}
                                                    >
                                                      <tspan
                                                        dy="0em"
                                                        key="0"
                                                        x={200}
                                                      >
                                                        -1
                                                      </tspan>
                                                    </text>
                                                  </svg>
                                                </r>
                                              </g>
                                            </t>
                                            <t
                                              className="vx-axis-tick RawXAxis-tick-165"
                                              key="vx-tick--2-3"
                                            >
                                              <g
                                                className="vx-group vx-axis-tick RawXAxis-tick-165"
                                                transform="translate(0, 0)"
                                              >
                                                <a
                                                  from={
                                                    r {
                                                      "x": 150,
                                                      "y": 0,
                                                    }
                                                  }
                                                  stroke="black"
                                                  to={
                                                    r {
                                                      "x": 150,
                                                      "y": 8,
                                                    }
                                                  }
                                                >
                                                  <line
                                                    className="vx-line"
                                                    fill="transparent"
                                                    stroke="black"
                                                    x1={150}
                                                    x2={150}
                                                    y1={0}
                                                    y2={8}
                                                  />
                                                </a>
                                                <r
                                                  capHeight="0.71em"
                                                  cursor="inherit"
                                                  dx={0}
                                                  dy={0}
                                                  fontFamily="Roboto"
                                                  fontSize="14px"
                                                  lineHeight="1em"
                                                  scaleToFit={false}
                                                  textAnchor="middle"
                                                  verticalAnchor="end"
                                                  x={150}
                                                  y={25}
                                                >
                                                  <svg
                                                    fontSize="14px"
                                                    style={
                                                      Object {
                                                        "overflow": "visible",
                                                      }
                                                    }
                                                    x={0}
                                                    y={0}
                                                  >
                                                    <text
                                                      cursor="inherit"
                                                      fontFamily="Roboto"
                                                      fontSize="14px"
                                                      textAnchor="middle"
                                                      x={150}
                                                      y={25}
                                                    >
                                                      <tspan
                                                        dy="0em"
                                                        key="0"
                                                        x={150}
                                                      >
                                                        -2
                                                      </tspan>
                                                    </text>
                                                  </svg>
                                                </r>
                                              </g>
                                            </t>
                                            <t
                                              className="vx-axis-tick RawXAxis-tick-165"
                                              key="vx-tick--3-4"
                                            >
                                              <g
                                                className="vx-group vx-axis-tick RawXAxis-tick-165"
                                                transform="translate(0, 0)"
                                              >
                                                <a
                                                  from={
                                                    r {
                                                      "x": 100,
                                                      "y": 0,
                                                    }
                                                  }
                                                  stroke="black"
                                                  to={
                                                    r {
                                                      "x": 100,
                                                      "y": 8,
                                                    }
                                                  }
                                                >
                                                  <line
                                                    className="vx-line"
                                                    fill="transparent"
                                                    stroke="black"
                                                    x1={100}
                                                    x2={100}
                                                    y1={0}
                                                    y2={8}
                                                  />
                                                </a>
                                                <r
                                                  capHeight="0.71em"
                                                  cursor="inherit"
                                                  dx={0}
                                                  dy={0}
                                                  fontFamily="Roboto"
                                                  fontSize="14px"
                                                  lineHeight="1em"
                                                  scaleToFit={false}
                                                  textAnchor="middle"
                                                  verticalAnchor="end"
                                                  x={100}
                                                  y={25}
                                                >
                                                  <svg
                                                    fontSize="14px"
                                                    style={
                                                      Object {
                                                        "overflow": "visible",
                                                      }
                                                    }
                                                    x={0}
                                                    y={0}
                                                  >
                                                    <text
                                                      cursor="inherit"
                                                      fontFamily="Roboto"
                                                      fontSize="14px"
                                                      textAnchor="middle"
                                                      x={100}
                                                      y={25}
                                                    >
                                                      <tspan
                                                        dy="0em"
                                                        key="0"
                                                        x={100}
                                                      >
                                                        -3
                                                      </tspan>
                                                    </text>
                                                  </svg>
                                                </r>
                                              </g>
                                            </t>
                                            <t
                                              className="vx-axis-tick RawXAxis-tick-165"
                                              key="vx-tick--4-5"
                                            >
                                              <g
                                                className="vx-group vx-axis-tick RawXAxis-tick-165"
                                                transform="translate(0, 0)"
                                              >
                                                <a
                                                  from={
                                                    r {
                                                      "x": 50,
                                                      "y": 0,
                                                    }
                                                  }
                                                  stroke="black"
                                                  to={
                                                    r {
                                                      "x": 50,
                                                      "y": 8,
                                                    }
                                                  }
                                                >
                                                  <line
                                                    className="vx-line"
                                                    fill="transparent"
                                                    stroke="black"
                                                    x1={50}
                                                    x2={50}
                                                    y1={0}
                                                    y2={8}
                                                  />
                                                </a>
                                                <r
                                                  capHeight="0.71em"
                                                  cursor="inherit"
                                                  dx={0}
                                                  dy={0}
                                                  fontFamily="Roboto"
                                                  fontSize="14px"
                                                  lineHeight="1em"
                                                  scaleToFit={false}
                                                  textAnchor="middle"
                                                  verticalAnchor="end"
                                                  x={50}
                                                  y={25}
                                                >
                                                  <svg
                                                    fontSize="14px"
                                                    style={
                                                      Object {
                                                        "overflow": "visible",
                                                      }
                                                    }
                                                    x={0}
                                                    y={0}
                                                  >
                                                    <text
                                                      cursor="inherit"
                                                      fontFamily="Roboto"
                                                      fontSize="14px"
                                                      textAnchor="middle"
                                                      x={50}
                                                      y={25}
                                                    >
                                                      <tspan
                                                        dy="0em"
                                                        key="0"
                                                        x={50}
                                                      >
                                                        -4
                                                      </tspan>
                                                    </text>
                                                  </svg>
                                                </r>
                                              </g>
                                            </t>
                                            <t
                                              className="vx-axis-tick RawXAxis-tick-165"
                                              key="vx-tick--5-6"
                                            >
                                              <g
                                                className="vx-group vx-axis-tick RawXAxis-tick-165"
                                                transform="translate(0, 0)"
                                              >
                                                <a
                                                  from={
                                                    r {
                                                      "x": 0,
                                                      "y": 0,
                                                    }
                                                  }
                                                  stroke="black"
                                                  to={
                                                    r {
                                                      "x": 0,
                                                      "y": 8,
                                                    }
                                                  }
                                                >
                                                  <line
                                                    className="vx-line"
                                                    fill="transparent"
                                                    stroke="black"
                                                    x1={0}
                                                    x2={0}
                                                    y1={0}
                                                    y2={8}
                                                  />
                                                </a>
                                                <r
                                                  capHeight="0.71em"
                                                  cursor="inherit"
                                                  dx={0}
                                                  dy={0}
                                                  fontFamily="Roboto"
                                                  fontSize="14px"
                                                  lineHeight="1em"
                                                  scaleToFit={false}
                                                  textAnchor="middle"
                                                  verticalAnchor="end"
                                                  x={0}
                                                  y={25}
                                                >
                                                  <svg
                                                    fontSize="14px"
                                                    style={
                                                      Object {
                                                        "overflow": "visible",
                                                      }
                                                    }
                                                    x={0}
                                                    y={0}
                                                  >
                                                    <text
                                                      cursor="inherit"
                                                      fontFamily="Roboto"
                                                      fontSize="14px"
                                                      textAnchor="middle"
                                                      x={0}
                                                      y={25}
                                                    >
                                                      <tspan
                                                        dy="0em"
                                                        key="0"
                                                        x={0}
                                                      >
                                                        -5
                                                      </tspan>
                                                    </text>
                                                  </svg>
                                                </r>
                                              </g>
                                            </t>
                                            <t
                                              className="vx-axis-tick RawXAxis-tick-165"
                                              key="vx-tick-1-7"
                                            >
                                              <g
                                                className="vx-group vx-axis-tick RawXAxis-tick-165"
                                                transform="translate(0, 0)"
                                              >
                                                <a
                                                  from={
                                                    r {
                                                      "x": 300,
                                                      "y": 0,
                                                    }
                                                  }
                                                  stroke="black"
                                                  to={
                                                    r {
                                                      "x": 300,
                                                      "y": 8,
                                                    }
                                                  }
                                                >
                                                  <line
                                                    className="vx-line"
                                                    fill="transparent"
                                                    stroke="black"
                                                    x1={300}
                                                    x2={300}
                                                    y1={0}
                                                    y2={8}
                                                  />
                                                </a>
                                                <r
                                                  capHeight="0.71em"
                                                  cursor="inherit"
                                                  dx={0}
                                                  dy={0}
                                                  fontFamily="Roboto"
                                                  fontSize="14px"
                                                  lineHeight="1em"
                                                  scaleToFit={false}
                                                  textAnchor="middle"
                                                  verticalAnchor="end"
                                                  x={300}
                                                  y={25}
                                                >
                                                  <svg
                                                    fontSize="14px"
                                                    style={
                                                      Object {
                                                        "overflow": "visible",
                                                      }
                                                    }
                                                    x={0}
                                                    y={0}
                                                  >
                                                    <text
                                                      cursor="inherit"
                                                      fontFamily="Roboto"
                                                      fontSize="14px"
                                                      textAnchor="middle"
                                                      x={300}
                                                      y={25}
                                                    >
                                                      <tspan
                                                        dy="0em"
                                                        key="0"
                                                        x={300}
                                                      >
                                                        1
                                                      </tspan>
                                                    </text>
                                                  </svg>
                                                </r>
                                              </g>
                                            </t>
                                            <t
                                              className="vx-axis-tick RawXAxis-tick-165"
                                              key="vx-tick-2-8"
                                            >
                                              <g
                                                className="vx-group vx-axis-tick RawXAxis-tick-165"
                                                transform="translate(0, 0)"
                                              >
                                                <a
                                                  from={
                                                    r {
                                                      "x": 350,
                                                      "y": 0,
                                                    }
                                                  }
                                                  stroke="black"
                                                  to={
                                                    r {
                                                      "x": 350,
                                                      "y": 8,
                                                    }
                                                  }
                                                >
                                                  <line
                                                    className="vx-line"
                                                    fill="transparent"
                                                    stroke="black"
                                                    x1={350}
                                                    x2={350}
                                                    y1={0}
                                                    y2={8}
                                                  />
                                                </a>
                                                <r
                                                  capHeight="0.71em"
                                                  cursor="inherit"
                                                  dx={0}
                                                  dy={0}
                                                  fontFamily="Roboto"
                                                  fontSize="14px"
                                                  lineHeight="1em"
                                                  scaleToFit={false}
                                                  textAnchor="middle"
                                                  verticalAnchor="end"
                                                  x={350}
                                                  y={25}
                                                >
                                                  <svg
                                                    fontSize="14px"
                                                    style={
                                                      Object {
                                                        "overflow": "visible",
                                                      }
                                                    }
                                                    x={0}
                                                    y={0}
                                                  >
                                                    <text
                                                      cursor="inherit"
                                                      fontFamily="Roboto"
                                                      fontSize="14px"
                                                      textAnchor="middle"
                                                      x={350}
                                                      y={25}
                                                    >
                                                      <tspan
                                                        dy="0em"
                                                        key="0"
                                                        x={350}
                                                      >
                                                        2
                                                      </tspan>
                                                    </text>
                                                  </svg>
                                                </r>
                                              </g>
                                            </t>
                                            <t
                                              className="vx-axis-tick RawXAxis-tick-165"
                                              key="vx-tick-3-9"
                                            >
                                              <g
                                                className="vx-group vx-axis-tick RawXAxis-tick-165"
                                                transform="translate(0, 0)"
                                              >
                                                <a
                                                  from={
                                                    r {
                                                      "x": 400,
                                                      "y": 0,
                                                    }
                                                  }
                                                  stroke="black"
                                                  to={
                                                    r {
                                                      "x": 400,
                                                      "y": 8,
                                                    }
                                                  }
                                                >
                                                  <line
                                                    className="vx-line"
                                                    fill="transparent"
                                                    stroke="black"
                                                    x1={400}
                                                    x2={400}
                                                    y1={0}
                                                    y2={8}
                                                  />
                                                </a>
                                                <r
                                                  capHeight="0.71em"
                                                  cursor="inherit"
                                                  dx={0}
                                                  dy={0}
                                                  fontFamily="Roboto"
                                                  fontSize="14px"
                                                  lineHeight="1em"
                                                  scaleToFit={false}
                                                  textAnchor="middle"
                                                  verticalAnchor="end"
                                                  x={400}
                                                  y={25}
                                                >
                                                  <svg
                                                    fontSize="14px"
                                                    style={
                                                      Object {
                                                        "overflow": "visible",
                                                      }
                                                    }
                                                    x={0}
                                                    y={0}
                                                  >
                                                    <text
                                                      cursor="inherit"
                                                      fontFamily="Roboto"
                                                      fontSize="14px"
                                                      textAnchor="middle"
                                                      x={400}
                                                      y={25}
                                                    >
                                                      <tspan
                                                        dy="0em"
                                                        key="0"
                                                        x={400}
                                                      >
                                                        3
                                                      </tspan>
                                                    </text>
                                                  </svg>
                                                </r>
                                              </g>
                                            </t>
                                            <t
                                              className="vx-axis-tick RawXAxis-tick-165"
                                              key="vx-tick-4-10"
                                            >
                                              <g
                                                className="vx-group vx-axis-tick RawXAxis-tick-165"
                                                transform="translate(0, 0)"
                                              >
                                                <a
                                                  from={
                                                    r {
                                                      "x": 450,
                                                      "y": 0,
                                                    }
                                                  }
                                                  stroke="black"
                                                  to={
                                                    r {
                                                      "x": 450,
                                                      "y": 8,
                                                    }
                                                  }
                                                >
                                                  <line
                                                    className="vx-line"
                                                    fill="transparent"
                                                    stroke="black"
                                                    x1={450}
                                                    x2={450}
                                                    y1={0}
                                                    y2={8}
                                                  />
                                                </a>
                                                <r
                                                  capHeight="0.71em"
                                                  cursor="inherit"
                                                  dx={0}
                                                  dy={0}
                                                  fontFamily="Roboto"
                                                  fontSize="14px"
                                                  lineHeight="1em"
                                                  scaleToFit={false}
                                                  textAnchor="middle"
                                                  verticalAnchor="end"
                                                  x={450}
                                                  y={25}
                                                >
                                                  <svg
                                                    fontSize="14px"
                                                    style={
                                                      Object {
                                                        "overflow": "visible",
                                                      }
                                                    }
                                                    x={0}
                                                    y={0}
                                                  >
                                                    <text
                                                      cursor="inherit"
                                                      fontFamily="Roboto"
                                                      fontSize="14px"
                                                      textAnchor="middle"
                                                      x={450}
                                                      y={25}
                                                    >
                                                      <tspan
                                                        dy="0em"
                                                        key="0"
                                                        x={450}
                                                      >
                                                        4
                                                      </tspan>
                                                    </text>
                                                  </svg>
                                                </r>
                                              </g>
                                            </t>
                                            <t
                                              className="vx-axis-tick RawXAxis-tick-165"
                                              key="vx-tick-5-11"
                                            >
                                              <g
                                                className="vx-group vx-axis-tick RawXAxis-tick-165"
                                                transform="translate(0, 0)"
                                              >
                                                <a
                                                  from={
                                                    r {
                                                      "x": 500,
                                                      "y": 0,
                                                    }
                                                  }
                                                  stroke="black"
                                                  to={
                                                    r {
                                                      "x": 500,
                                                      "y": 8,
                                                    }
                                                  }
                                                >
                                                  <line
                                                    className="vx-line"
                                                    fill="transparent"
                                                    stroke="black"
                                                    x1={500}
                                                    x2={500}
                                                    y1={0}
                                                    y2={8}
                                                  />
                                                </a>
                                                <r
                                                  capHeight="0.71em"
                                                  cursor="inherit"
                                                  dx={0}
                                                  dy={0}
                                                  fontFamily="Roboto"
                                                  fontSize="14px"
                                                  lineHeight="1em"
                                                  scaleToFit={false}
                                                  textAnchor="middle"
                                                  verticalAnchor="end"
                                                  x={500}
                                                  y={25}
                                                >
                                                  <svg
                                                    fontSize="14px"
                                                    style={
                                                      Object {
                                                        "overflow": "visible",
                                                      }
                                                    }
                                                    x={0}
                                                    y={0}
                                                  >
                                                    <text
                                                      cursor="inherit"
                                                      fontFamily="Roboto"
                                                      fontSize="14px"
                                                      textAnchor="middle"
                                                      x={500}
                                                      y={25}
                                                    >
                                                      <tspan
                                                        dy="0em"
                                                        key="0"
                                                        x={500}
                                                      >
                                                        5
                                                      </tspan>
                                                    </text>
                                                  </svg>
                                                </r>
                                              </g>
                                            </t>
                                            <a
                                              className="vx-axis-line RawXAxis-line-163"
                                              from={
                                                r {
                                                  "x": -7.5,
                                                  "y": 0,
                                                }
                                              }
                                              stroke="black"
                                              strokeWidth={1}
                                              to={
                                                r {
                                                  "x": 508.5,
                                                  "y": 0,
                                                }
                                              }
                                            >
                                              <line
                                                className="vx-line vx-axis-line RawXAxis-line-163"
                                                fill="transparent"
                                                stroke="black"
                                                strokeWidth={1}
                                                x1={-7.5}
                                                x2={508.5}
                                                y1={0}
                                                y2={0}
                                              />
                                            </a>
                                          </g>
                                        </t>
                                      </F>
                                      <WithStyles(Arrow)
                                        className="RawXAxis-arrow-164"
                                        direction="left"
                                        scale={
                                          Object {
                                            "x": [Function],
                                            "y": [Function],
                                          }
                                        }
                                        x={-5}
                                        y={0}
                                      >
                                        <Arrow
                                          className="RawXAxis-arrow-164"
                                          classes={
                                            Object {
                                              "root": "Arrow-root-168",
                                            }
                                          }
                                          direction="left"
                                          scale={
                                            Object {
                                              "x": [Function],
                                              "y": [Function],
                                            }
                                          }
                                          x={-5}
                                          y={0}
                                        >
                                          <path
                                            className="Arrow-root-168 RawXAxis-arrow-164"
                                            d="m 0,0 8,-5 0,10 -8,-5"
                                            transform="translate(-15, 250) rotate(0)"
                                          />
                                        </Arrow>
                                      </WithStyles(Arrow)>
                                      <WithStyles(Arrow)
                                        className="RawXAxis-arrow-164"
                                        direction="right"
                                        scale={
                                          Object {
                                            "x": [Function],
                                            "y": [Function],
                                          }
                                        }
                                        x={5}
                                        y={0}
                                      >
                                        <Arrow
                                          className="RawXAxis-arrow-164"
                                          classes={
                                            Object {
                                              "root": "Arrow-root-168",
                                            }
                                          }
                                          direction="right"
                                          scale={
                                            Object {
                                              "x": [Function],
                                              "y": [Function],
                                            }
                                          }
                                          x={5}
                                          y={0}
                                        >
                                          <path
                                            className="Arrow-root-168 RawXAxis-arrow-164"
                                            d="m 0,0 8,-5 0,10 -8,-5"
                                            transform="translate(515, 250) rotate(180)"
                                          />
                                        </Arrow>
                                      </WithStyles(Arrow)>
                                      <foreignObject
                                        height={20}
                                        width={12}
                                        x={517}
                                        y={241}
                                      >
                                        <div
                                          className="RawXAxis-labelFontSize-166"
                                          dangerouslySetInnerHTML={
                                            Object {
                                              "__html": "x",
                                            }
                                          }
                                        />
                                      </foreignObject>
                                    </RawXAxis>
                                  </WithStyles(RawXAxis)>
                                  <WithStyles(RawYAxis)
                                    distanceFromOriginToFirstNegativeX={50}
                                    graphProps={
                                      Object {
                                        "domain": Object {
                                          "axisLabel": "x",
                                          "labelStep": 1,
                                          "max": 5,
                                          "min": -5,
                                          "step": 1,
                                        },
                                        "getRootNode": [Function],
                                        "range": Object {
                                          "axisLabel": "y",
                                          "labelStep": 1,
                                          "max": 5,
                                          "min": -5,
                                          "step": 1,
                                        },
                                        "scale": Object {
                                          "x": [Function],
                                          "y": [Function],
                                        },
                                        "size": Object {
                                          "height": 500,
                                          "width": 500,
                                        },
                                        "snap": Object {
                                          "x": [Function],
                                          "y": [Function],
                                        },
                                      }
                                    }
                                    includeArrows={
                                      Object {
                                        "down": true,
                                        "left": true,
                                        "right": true,
                                        "up": true,
                                      }
                                    }
                                    labelModeEnabled={false}
                                    limitLabeling={true}
                                    rowTickValues={
                                      Array [
                                        0,
                                        -1,
                                        -2,
                                        -3,
                                        -4,
                                        -5,
                                        1,
                                        2,
                                        3,
                                        4,
                                        5,
                                      ]
                                    }
                                    skipValues={Array []}
                                  >
                                    <RawYAxis
                                      classes={
                                        Object {
                                          "arrow": "RawYAxis-arrow-170",
                                          "axisLabelHolder": "RawYAxis-axisLabelHolder-173",
                                          "labelFontSize": "RawYAxis-labelFontSize-172",
                                          "line": "RawYAxis-line-169",
                                          "tick": "RawYAxis-tick-171",
                                        }
                                      }
                                      distanceFromOriginToFirstNegativeX={50}
                                      graphProps={
                                        Object {
                                          "domain": Object {
                                            "axisLabel": "x",
                                            "labelStep": 1,
                                            "max": 5,
                                            "min": -5,
                                            "step": 1,
                                          },
                                          "getRootNode": [Function],
                                          "range": Object {
                                            "axisLabel": "y",
                                            "labelStep": 1,
                                            "max": 5,
                                            "min": -5,
                                            "step": 1,
                                          },
                                          "scale": Object {
                                            "x": [Function],
                                            "y": [Function],
                                          },
                                          "size": Object {
                                            "height": 500,
                                            "width": 500,
                                          },
                                          "snap": Object {
                                            "x": [Function],
                                            "y": [Function],
                                          },
                                        }
                                      }
                                      includeArrows={
                                        Object {
                                          "down": true,
                                          "left": true,
                                          "right": true,
                                          "up": true,
                                        }
                                      }
                                      labelModeEnabled={false}
                                      limitLabeling={true}
                                      rowTickValues={
                                        Array [
                                          0,
                                          -1,
                                          -2,
                                          -3,
                                          -4,
                                          -5,
                                          1,
                                          2,
                                          3,
                                          4,
                                          5,
                                        ]
                                      }
                                      skipValues={Array []}
                                    >
                                      <F
                                        axisLineClassName="RawYAxis-line-169"
                                        height={500}
                                        hideZero={true}
                                        labelProps={
                                          Object {
                                            "data-pie-readable": false,
                                          }
                                        }
                                        left={250}
                                        orientation="left"
                                        rangePadding={8}
                                        scale={[Function]}
                                        tickClassName="RawYAxis-tick-171"
                                        tickFormat={[Function]}
                                        tickLabelProps={[Function]}
                                        tickLength={10}
                                        tickTextAnchor="bottom"
                                        tickValues={
                                          Array [
                                            0,
                                            -1,
                                            -2,
                                            -3,
                                            -4,
                                            -5,
                                            1,
                                            2,
                                            3,
                                            4,
                                            5,
                                          ]
                                        }
                                        top={0}
                                      >
                                        <t
                                          className="vx-axis"
                                          left={250}
                                          top={0}
                                        >
                                          <g
                                            className="vx-group vx-axis"
                                            transform="translate(250, 0)"
                                          >
                                            <t
                                              className="vx-axis-tick RawYAxis-tick-171"
                                              key="vx-tick--1-1"
                                            >
                                              <g
                                                className="vx-group vx-axis-tick RawYAxis-tick-171"
                                                transform="translate(0, 0)"
                                              >
                                                <a
                                                  from={
                                                    r {
                                                      "x": 0,
                                                      "y": 300,
                                                    }
                                                  }
                                                  stroke="black"
                                                  to={
                                                    r {
                                                      "x": -10,
                                                      "y": 300,
                                                    }
                                                  }
                                                >
                                                  <line
                                                    className="vx-line"
                                                    fill="transparent"
                                                    stroke="black"
                                                    x1={0}
                                                    x2={-10}
                                                    y1={300}
                                                    y2={300}
                                                  />
                                                </a>
                                                <r
                                                  capHeight="0.71em"
                                                  cursor="inherit"
                                                  data-pie-readable={false}
                                                  dx={-19}
                                                  dy={4}
                                                  fontFamily="Roboto"
                                                  fontSize="14px"
                                                  lineHeight="1em"
                                                  scaleToFit={false}
                                                  textAnchor="start"
                                                  verticalAnchor="end"
                                                  x={-10}
                                                  y={300}
                                                >
                                                  <svg
                                                    fontSize="14px"
                                                    style={
                                                      Object {
                                                        "overflow": "visible",
                                                      }
                                                    }
                                                    x={-19}
                                                    y={4}
                                                  >
                                                    <text
                                                      cursor="inherit"
                                                      data-pie-readable={false}
                                                      fontFamily="Roboto"
                                                      fontSize="14px"
                                                      textAnchor="start"
                                                      x={-10}
                                                      y={300}
                                                    >
                                                      <tspan
                                                        dy="0em"
                                                        key="0"
                                                        x={-10}
                                                      >
                                                        -1
                                                      </tspan>
                                                    </text>
                                                  </svg>
                                                </r>
                                              </g>
                                            </t>
                                            <t
                                              className="vx-axis-tick RawYAxis-tick-171"
                                              key="vx-tick--2-2"
                                            >
                                              <g
                                                className="vx-group vx-axis-tick RawYAxis-tick-171"
                                                transform="translate(0, 0)"
                                              >
                                                <a
                                                  from={
                                                    r {
                                                      "x": 0,
                                                      "y": 350,
                                                    }
                                                  }
                                                  stroke="black"
                                                  to={
                                                    r {
                                                      "x": -10,
                                                      "y": 350,
                                                    }
                                                  }
                                                >
                                                  <line
                                                    className="vx-line"
                                                    fill="transparent"
                                                    stroke="black"
                                                    x1={0}
                                                    x2={-10}
                                                    y1={350}
                                                    y2={350}
                                                  />
                                                </a>
                                                <r
                                                  capHeight="0.71em"
                                                  cursor="inherit"
                                                  data-pie-readable={false}
                                                  dx={-19}
                                                  dy={4}
                                                  fontFamily="Roboto"
                                                  fontSize="14px"
                                                  lineHeight="1em"
                                                  scaleToFit={false}
                                                  textAnchor="start"
                                                  verticalAnchor="end"
                                                  x={-10}
                                                  y={350}
                                                >
                                                  <svg
                                                    fontSize="14px"
                                                    style={
                                                      Object {
                                                        "overflow": "visible",
                                                      }
                                                    }
                                                    x={-19}
                                                    y={4}
                                                  >
                                                    <text
                                                      cursor="inherit"
                                                      data-pie-readable={false}
                                                      fontFamily="Roboto"
                                                      fontSize="14px"
                                                      textAnchor="start"
                                                      x={-10}
                                                      y={350}
                                                    >
                                                      <tspan
                                                        dy="0em"
                                                        key="0"
                                                        x={-10}
                                                      >
                                                        -2
                                                      </tspan>
                                                    </text>
                                                  </svg>
                                                </r>
                                              </g>
                                            </t>
                                            <t
                                              className="vx-axis-tick RawYAxis-tick-171"
                                              key="vx-tick--3-3"
                                            >
                                              <g
                                                className="vx-group vx-axis-tick RawYAxis-tick-171"
                                                transform="translate(0, 0)"
                                              >
                                                <a
                                                  from={
                                                    r {
                                                      "x": 0,
                                                      "y": 400,
                                                    }
                                                  }
                                                  stroke="black"
                                                  to={
                                                    r {
                                                      "x": -10,
                                                      "y": 400,
                                                    }
                                                  }
                                                >
                                                  <line
                                                    className="vx-line"
                                                    fill="transparent"
                                                    stroke="black"
                                                    x1={0}
                                                    x2={-10}
                                                    y1={400}
                                                    y2={400}
                                                  />
                                                </a>
                                                <r
                                                  capHeight="0.71em"
                                                  cursor="inherit"
                                                  data-pie-readable={false}
                                                  dx={-19}
                                                  dy={4}
                                                  fontFamily="Roboto"
                                                  fontSize="14px"
                                                  lineHeight="1em"
                                                  scaleToFit={false}
                                                  textAnchor="start"
                                                  verticalAnchor="end"
                                                  x={-10}
                                                  y={400}
                                                >
                                                  <svg
                                                    fontSize="14px"
                                                    style={
                                                      Object {
                                                        "overflow": "visible",
                                                      }
                                                    }
                                                    x={-19}
                                                    y={4}
                                                  >
                                                    <text
                                                      cursor="inherit"
                                                      data-pie-readable={false}
                                                      fontFamily="Roboto"
                                                      fontSize="14px"
                                                      textAnchor="start"
                                                      x={-10}
                                                      y={400}
                                                    >
                                                      <tspan
                                                        dy="0em"
                                                        key="0"
                                                        x={-10}
                                                      >
                                                        -3
                                                      </tspan>
                                                    </text>
                                                  </svg>
                                                </r>
                                              </g>
                                            </t>
                                            <t
                                              className="vx-axis-tick RawYAxis-tick-171"
                                              key="vx-tick--4-4"
                                            >
                                              <g
                                                className="vx-group vx-axis-tick RawYAxis-tick-171"
                                                transform="translate(0, 0)"
                                              >
                                                <a
                                                  from={
                                                    r {
                                                      "x": 0,
                                                      "y": 450,
                                                    }
                                                  }
                                                  stroke="black"
                                                  to={
                                                    r {
                                                      "x": -10,
                                                      "y": 450,
                                                    }
                                                  }
                                                >
                                                  <line
                                                    className="vx-line"
                                                    fill="transparent"
                                                    stroke="black"
                                                    x1={0}
                                                    x2={-10}
                                                    y1={450}
                                                    y2={450}
                                                  />
                                                </a>
                                                <r
                                                  capHeight="0.71em"
                                                  cursor="inherit"
                                                  data-pie-readable={false}
                                                  dx={-19}
                                                  dy={4}
                                                  fontFamily="Roboto"
                                                  fontSize="14px"
                                                  lineHeight="1em"
                                                  scaleToFit={false}
                                                  textAnchor="start"
                                                  verticalAnchor="end"
                                                  x={-10}
                                                  y={450}
                                                >
                                                  <svg
                                                    fontSize="14px"
                                                    style={
                                                      Object {
                                                        "overflow": "visible",
                                                      }
                                                    }
                                                    x={-19}
                                                    y={4}
                                                  >
                                                    <text
                                                      cursor="inherit"
                                                      data-pie-readable={false}
                                                      fontFamily="Roboto"
                                                      fontSize="14px"
                                                      textAnchor="start"
                                                      x={-10}
                                                      y={450}
                                                    >
                                                      <tspan
                                                        dy="0em"
                                                        key="0"
                                                        x={-10}
                                                      >
                                                        -4
                                                      </tspan>
                                                    </text>
                                                  </svg>
                                                </r>
                                              </g>
                                            </t>
                                            <t
                                              className="vx-axis-tick RawYAxis-tick-171"
                                              key="vx-tick--5-5"
                                            >
                                              <g
                                                className="vx-group vx-axis-tick RawYAxis-tick-171"
                                                transform="translate(0, 0)"
                                              >
                                                <a
                                                  from={
                                                    r {
                                                      "x": 0,
                                                      "y": 500,
                                                    }
                                                  }
                                                  stroke="black"
                                                  to={
                                                    r {
                                                      "x": -10,
                                                      "y": 500,
                                                    }
                                                  }
                                                >
                                                  <line
                                                    className="vx-line"
                                                    fill="transparent"
                                                    stroke="black"
                                                    x1={0}
                                                    x2={-10}
                                                    y1={500}
                                                    y2={500}
                                                  />
                                                </a>
                                                <r
                                                  capHeight="0.71em"
                                                  cursor="inherit"
                                                  data-pie-readable={false}
                                                  dx={-19}
                                                  dy={4}
                                                  fontFamily="Roboto"
                                                  fontSize="14px"
                                                  lineHeight="1em"
                                                  scaleToFit={false}
                                                  textAnchor="start"
                                                  verticalAnchor="end"
                                                  x={-10}
                                                  y={500}
                                                >
                                                  <svg
                                                    fontSize="14px"
                                                    style={
                                                      Object {
                                                        "overflow": "visible",
                                                      }
                                                    }
                                                    x={-19}
                                                    y={4}
                                                  >
                                                    <text
                                                      cursor="inherit"
                                                      data-pie-readable={false}
                                                      fontFamily="Roboto"
                                                      fontSize="14px"
                                                      textAnchor="start"
                                                      x={-10}
                                                      y={500}
                                                    >
                                                      <tspan
                                                        dy="0em"
                                                        key="0"
                                                        x={-10}
                                                      >
                                                        -5
                                                      </tspan>
                                                    </text>
                                                  </svg>
                                                </r>
                                              </g>
                                            </t>
                                            <t
                                              className="vx-axis-tick RawYAxis-tick-171"
                                              key="vx-tick-1-6"
                                            >
                                              <g
                                                className="vx-group vx-axis-tick RawYAxis-tick-171"
                                                transform="translate(0, 0)"
                                              >
                                                <a
                                                  from={
                                                    r {
                                                      "x": 0,
                                                      "y": 200,
                                                    }
                                                  }
                                                  stroke="black"
                                                  to={
                                                    r {
                                                      "x": -10,
                                                      "y": 200,
                                                    }
                                                  }
                                                >
                                                  <line
                                                    className="vx-line"
                                                    fill="transparent"
                                                    stroke="black"
                                                    x1={0}
                                                    x2={-10}
                                                    y1={200}
                                                    y2={200}
                                                  />
                                                </a>
                                                <r
                                                  capHeight="0.71em"
                                                  cursor="inherit"
                                                  data-pie-readable={false}
                                                  dx={-19}
                                                  dy={4}
                                                  fontFamily="Roboto"
                                                  fontSize="14px"
                                                  lineHeight="1em"
                                                  scaleToFit={false}
                                                  textAnchor="start"
                                                  verticalAnchor="end"
                                                  x={-10}
                                                  y={200}
                                                >
                                                  <svg
                                                    fontSize="14px"
                                                    style={
                                                      Object {
                                                        "overflow": "visible",
                                                      }
                                                    }
                                                    x={-19}
                                                    y={4}
                                                  >
                                                    <text
                                                      cursor="inherit"
                                                      data-pie-readable={false}
                                                      fontFamily="Roboto"
                                                      fontSize="14px"
                                                      textAnchor="start"
                                                      x={-10}
                                                      y={200}
                                                    >
                                                      <tspan
                                                        dy="0em"
                                                        key="0"
                                                        x={-10}
                                                      >
                                                        1
                                                      </tspan>
                                                    </text>
                                                  </svg>
                                                </r>
                                              </g>
                                            </t>
                                            <t
                                              className="vx-axis-tick RawYAxis-tick-171"
                                              key="vx-tick-2-7"
                                            >
                                              <g
                                                className="vx-group vx-axis-tick RawYAxis-tick-171"
                                                transform="translate(0, 0)"
                                              >
                                                <a
                                                  from={
                                                    r {
                                                      "x": 0,
                                                      "y": 150.00000000000003,
                                                    }
                                                  }
                                                  stroke="black"
                                                  to={
                                                    r {
                                                      "x": -10,
                                                      "y": 150.00000000000003,
                                                    }
                                                  }
                                                >
                                                  <line
                                                    className="vx-line"
                                                    fill="transparent"
                                                    stroke="black"
                                                    x1={0}
                                                    x2={-10}
                                                    y1={150.00000000000003}
                                                    y2={150.00000000000003}
                                                  />
                                                </a>
                                                <r
                                                  capHeight="0.71em"
                                                  cursor="inherit"
                                                  data-pie-readable={false}
                                                  dx={-19}
                                                  dy={4}
                                                  fontFamily="Roboto"
                                                  fontSize="14px"
                                                  lineHeight="1em"
                                                  scaleToFit={false}
                                                  textAnchor="start"
                                                  verticalAnchor="end"
                                                  x={-10}
                                                  y={150.00000000000003}
                                                >
                                                  <svg
                                                    fontSize="14px"
                                                    style={
                                                      Object {
                                                        "overflow": "visible",
                                                      }
                                                    }
                                                    x={-19}
                                                    y={4}
                                                  >
                                                    <text
                                                      cursor="inherit"
                                                      data-pie-readable={false}
                                                      fontFamily="Roboto"
                                                      fontSize="14px"
                                                      textAnchor="start"
                                                      x={-10}
                                                      y={150.00000000000003}
                                                    >
                                                      <tspan
                                                        dy="0em"
                                                        key="0"
                                                        x={-10}
                                                      >
                                                        2
                                                      </tspan>
                                                    </text>
                                                  </svg>
                                                </r>
                                              </g>
                                            </t>
                                            <t
                                              className="vx-axis-tick RawYAxis-tick-171"
                                              key="vx-tick-3-8"
                                            >
                                              <g
                                                className="vx-group vx-axis-tick RawYAxis-tick-171"
                                                transform="translate(0, 0)"
                                              >
                                                <a
                                                  from={
                                                    r {
                                                      "x": 0,
                                                      "y": 99.99999999999997,
                                                    }
                                                  }
                                                  stroke="black"
                                                  to={
                                                    r {
                                                      "x": -10,
                                                      "y": 99.99999999999997,
                                                    }
                                                  }
                                                >
                                                  <line
                                                    className="vx-line"
                                                    fill="transparent"
                                                    stroke="black"
                                                    x1={0}
                                                    x2={-10}
                                                    y1={99.99999999999997}
                                                    y2={99.99999999999997}
                                                  />
                                                </a>
                                                <r
                                                  capHeight="0.71em"
                                                  cursor="inherit"
                                                  data-pie-readable={false}
                                                  dx={-19}
                                                  dy={4}
                                                  fontFamily="Roboto"
                                                  fontSize="14px"
                                                  lineHeight="1em"
                                                  scaleToFit={false}
                                                  textAnchor="start"
                                                  verticalAnchor="end"
                                                  x={-10}
                                                  y={99.99999999999997}
                                                >
                                                  <svg
                                                    fontSize="14px"
                                                    style={
                                                      Object {
                                                        "overflow": "visible",
                                                      }
                                                    }
                                                    x={-19}
                                                    y={4}
                                                  >
                                                    <text
                                                      cursor="inherit"
                                                      data-pie-readable={false}
                                                      fontFamily="Roboto"
                                                      fontSize="14px"
                                                      textAnchor="start"
                                                      x={-10}
                                                      y={99.99999999999997}
                                                    >
                                                      <tspan
                                                        dy="0em"
                                                        key="0"
                                                        x={-10}
                                                      >
                                                        3
                                                      </tspan>
                                                    </text>
                                                  </svg>
                                                </r>
                                              </g>
                                            </t>
                                            <t
                                              className="vx-axis-tick RawYAxis-tick-171"
                                              key="vx-tick-4-9"
                                            >
                                              <g
                                                className="vx-group vx-axis-tick RawYAxis-tick-171"
                                                transform="translate(0, 0)"
                                              >
                                                <a
                                                  from={
                                                    r {
                                                      "x": 0,
                                                      "y": 49.999999999999986,
                                                    }
                                                  }
                                                  stroke="black"
                                                  to={
                                                    r {
                                                      "x": -10,
                                                      "y": 49.999999999999986,
                                                    }
                                                  }
                                                >
                                                  <line
                                                    className="vx-line"
                                                    fill="transparent"
                                                    stroke="black"
                                                    x1={0}
                                                    x2={-10}
                                                    y1={49.999999999999986}
                                                    y2={49.999999999999986}
                                                  />
                                                </a>
                                                <r
                                                  capHeight="0.71em"
                                                  cursor="inherit"
                                                  data-pie-readable={false}
                                                  dx={-19}
                                                  dy={4}
                                                  fontFamily="Roboto"
                                                  fontSize="14px"
                                                  lineHeight="1em"
                                                  scaleToFit={false}
                                                  textAnchor="start"
                                                  verticalAnchor="end"
                                                  x={-10}
                                                  y={49.999999999999986}
                                                >
                                                  <svg
                                                    fontSize="14px"
                                                    style={
                                                      Object {
                                                        "overflow": "visible",
                                                      }
                                                    }
                                                    x={-19}
                                                    y={4}
                                                  >
                                                    <text
                                                      cursor="inherit"
                                                      data-pie-readable={false}
                                                      fontFamily="Roboto"
                                                      fontSize="14px"
                                                      textAnchor="start"
                                                      x={-10}
                                                      y={49.999999999999986}
                                                    >
                                                      <tspan
                                                        dy="0em"
                                                        key="0"
                                                        x={-10}
                                                      >
                                                        4
                                                      </tspan>
                                                    </text>
                                                  </svg>
                                                </r>
                                              </g>
                                            </t>
                                            <t
                                              className="vx-axis-tick RawYAxis-tick-171"
                                              key="vx-tick-5-10"
                                            >
                                              <g
                                                className="vx-group vx-axis-tick RawYAxis-tick-171"
                                                transform="translate(0, 0)"
                                              >
                                                <a
                                                  from={
                                                    r {
                                                      "x": 0,
                                                      "y": 0,
                                                    }
                                                  }
                                                  stroke="black"
                                                  to={
                                                    r {
                                                      "x": -10,
                                                      "y": 0,
                                                    }
                                                  }
                                                >
                                                  <line
                                                    className="vx-line"
                                                    fill="transparent"
                                                    stroke="black"
                                                    x1={0}
                                                    x2={-10}
                                                    y1={0}
                                                    y2={0}
                                                  />
                                                </a>
                                                <r
                                                  capHeight="0.71em"
                                                  cursor="inherit"
                                                  data-pie-readable={false}
                                                  dx={-19}
                                                  dy={4}
                                                  fontFamily="Roboto"
                                                  fontSize="14px"
                                                  lineHeight="1em"
                                                  scaleToFit={false}
                                                  textAnchor="start"
                                                  verticalAnchor="end"
                                                  x={-10}
                                                  y={0}
                                                >
                                                  <svg
                                                    fontSize="14px"
                                                    style={
                                                      Object {
                                                        "overflow": "visible",
                                                      }
                                                    }
                                                    x={-19}
                                                    y={4}
                                                  >
                                                    <text
                                                      cursor="inherit"
                                                      data-pie-readable={false}
                                                      fontFamily="Roboto"
                                                      fontSize="14px"
                                                      textAnchor="start"
                                                      x={-10}
                                                      y={0}
                                                    >
                                                      <tspan
                                                        dy="0em"
                                                        key="0"
                                                        x={-10}
                                                      >
                                                        5
                                                      </tspan>
                                                    </text>
                                                  </svg>
                                                </r>
                                              </g>
                                            </t>
                                            <a
                                              className="vx-axis-line RawYAxis-line-169"
                                              from={
                                                r {
                                                  "x": 0,
                                                  "y": -7.5,
                                                }
                                              }
                                              stroke="black"
                                              strokeWidth={1}
                                              to={
                                                r {
                                                  "x": 0,
                                                  "y": 508.5,
                                                }
                                              }
                                            >
                                              <line
                                                className="vx-line vx-axis-line RawYAxis-line-169"
                                                fill="transparent"
                                                stroke="black"
                                                strokeWidth={1}
                                                x1={0}
                                                x2={0}
                                                y1={-7.5}
                                                y2={508.5}
                                              />
                                            </a>
                                          </g>
                                        </t>
                                      </F>
                                      <WithStyles(Arrow)
                                        className="RawYAxis-arrow-170"
                                        direction="down"
                                        scale={
                                          Object {
                                            "x": [Function],
                                            "y": [Function],
                                          }
                                        }
                                        x={0}
                                        y={-5}
                                      >
                                        <Arrow
                                          className="RawYAxis-arrow-170"
                                          classes={
                                            Object {
                                              "root": "Arrow-root-168",
                                            }
                                          }
                                          direction="down"
                                          scale={
                                            Object {
                                              "x": [Function],
                                              "y": [Function],
                                            }
                                          }
                                          x={0}
                                          y={-5}
                                        >
                                          <path
                                            className="Arrow-root-168 RawYAxis-arrow-170"
                                            d="m 0,0 8,-5 0,10 -8,-5"
                                            transform="translate(250, 515) rotate(270)"
                                          />
                                        </Arrow>
                                      </WithStyles(Arrow)>
                                      <WithStyles(Arrow)
                                        className="RawYAxis-arrow-170"
                                        direction="up"
                                        scale={
                                          Object {
                                            "x": [Function],
                                            "y": [Function],
                                          }
                                        }
                                        x={0}
                                        y={5}
                                      >
                                        <Arrow
                                          className="RawYAxis-arrow-170"
                                          classes={
                                            Object {
                                              "root": "Arrow-root-168",
                                            }
                                          }
                                          direction="up"
                                          scale={
                                            Object {
                                              "x": [Function],
                                              "y": [Function],
                                            }
                                          }
                                          x={0}
                                          y={5}
                                        >
                                          <path
                                            className="Arrow-root-168 RawYAxis-arrow-170"
                                            d="m 0,0 8,-5 0,10 -8,-5"
                                            transform="translate(250, -15) rotate(90)"
                                          />
                                        </Arrow>
                                      </WithStyles(Arrow)>
                                      <foreignObject
                                        height="20"
                                        width={10}
                                        x={245}
                                        y={-33}
                                      >
                                        <Readable
                                          false={true}
                                        >
                                          <div
                                            className="RawYAxis-axisLabelHolder-173"
                                            dangerouslySetInnerHTML={
                                              Object {
                                                "__html": "y",
                                              }
                                            }
                                            data-pie-readable={false}
                                            key=".0"
                                          />
                                        </Readable>
                                      </foreignObject>
                                    </RawYAxis>
                                  </WithStyles(RawYAxis)>
                                </Axes>
                                <Bg
                                  graphProps={
                                    Object {
                                      "domain": Object {
                                        "axisLabel": "x",
                                        "labelStep": 1,
                                        "max": 5,
                                        "min": -5,
                                        "step": 1,
                                      },
                                      "getRootNode": [Function],
                                      "range": Object {
                                        "axisLabel": "y",
                                        "labelStep": 1,
                                        "max": 5,
                                        "min": -5,
                                        "step": 1,
                                      },
                                      "scale": Object {
                                        "x": [Function],
                                        "y": [Function],
                                      },
                                      "size": Object {
                                        "height": 500,
                                        "width": 500,
                                      },
                                      "snap": Object {
                                        "x": [Function],
                                        "y": [Function],
                                      },
                                    }
                                  }
                                  height={500}
                                  labelModeEnabled={false}
                                  limitLabeling={true}
                                  onClick={[Function]}
                                  width={500}
                                >
                                  <rect
                                    fill="red"
                                    fillOpacity="0.0"
                                    height={520}
                                    transform="translate(-10, -10)"
                                    width={520}
                                  />
                                </Bg>
                                <mask
                                  id="graph-7320"
                                >
                                  <rect
                                    fill="white"
                                    height={546}
                                    width={546}
                                    x={-23}
                                    y={-23}
                                  />
                                   
                                </mask>
                                <g
                                  id="marks"
                                  mask="url('#graph-7320')"
                                >
                                  <foreignObject
                                    height={500}
                                    style={
                                      Object {
                                        "fontSize": "14px",
                                        "pointerEvents": "none",
                                      }
                                    }
                                    width={500}
                                    x="0"
                                    y="0"
                                  />
                                </g>
                              </g>
                            </g>
                          </svg>
                          <WithStyles(LabelComponent)
                            disabledLabel={true}
                            graphHeight={580}
                            graphWidth={640}
                            mathMlOptions={Object {}}
                            onChange={[Function]}
                            side="right"
                          >
                            <LabelComponent
                              classes={
                                Object {
                                  "axisLabel": "LabelComponent-axisLabel-155",
                                  "chartLabel": "LabelComponent-chartLabel-156",
                                  "customBottom": "LabelComponent-customBottom-161",
                                  "disabledLabel": "LabelComponent-disabledLabel-157",
                                  "displayNone": "LabelComponent-displayNone-162",
                                  "editLabel": "LabelComponent-editLabel-158",
                                  "label": "LabelComponent-label-154",
                                  "rotateLeftLabel": "LabelComponent-rotateLeftLabel-159",
                                  "rotateRightLabel": "LabelComponent-rotateRightLabel-160",
                                }
                              }
                              disabledLabel={true}
                              graphHeight={580}
                              graphWidth={640}
                              mathMlOptions={Object {}}
                              onChange={[Function]}
                              side="right"
                            >
                              <Readable
                                false={true}
                              >
                                <div
                                  className="LabelComponent-axisLabel-155 LabelComponent-rotateRightLabel-160"
                                  data-pie-readable={false}
                                  key=".0"
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "left": "632px",
                                      "top": 0,
                                      "width": 572,
                                    }
                                  }
                                >
                                  <div
                                    className="LabelComponent-disabledLabel-157"
                                    dangerouslySetInnerHTML={
                                      Object {
                                        "__html": "",
                                      }
                                    }
                                  />
                                </div>
                              </Readable>
                            </LabelComponent>
                          </WithStyles(LabelComponent)>
                        </div>
                        <WithStyles(LabelComponent)
                          disabledLabel={true}
                          graphHeight={580}
                          graphWidth={640}
                          mathMlOptions={Object {}}
                          onChange={[Function]}
                          side="bottom"
                          titleHeight={0}
                        >
                          <LabelComponent
                            classes={
                              Object {
                                "axisLabel": "LabelComponent-axisLabel-155",
                                "chartLabel": "LabelComponent-chartLabel-156",
                                "customBottom": "LabelComponent-customBottom-161",
                                "disabledLabel": "LabelComponent-disabledLabel-157",
                                "displayNone": "LabelComponent-displayNone-162",
                                "editLabel": "LabelComponent-editLabel-158",
                                "label": "LabelComponent-label-154",
                                "rotateLeftLabel": "LabelComponent-rotateLeftLabel-159",
                                "rotateRightLabel": "LabelComponent-rotateRightLabel-160",
                              }
                            }
                            disabledLabel={true}
                            graphHeight={580}
                            graphWidth={640}
                            mathMlOptions={Object {}}
                            onChange={[Function]}
                            side="bottom"
                            titleHeight={0}
                          >
                            <Readable
                              false={true}
                            >
                              <div
                                className="LabelComponent-axisLabel-155"
                                data-pie-readable={false}
                                key=".0"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "left": 0,
                                    "top": "460px",
                                    "width": 632,
                                  }
                                }
                              >
                                <div
                                  className="LabelComponent-disabledLabel-157"
                                  dangerouslySetInnerHTML={
                                    Object {
                                      "__html": "",
                                    }
                                  }
                                />
                              </div>
                            </Readable>
                          </LabelComponent>
                        </WithStyles(LabelComponent)>
                      </div>
                    </Root>
                  </WithStyles(Root)>
                </Graph>
              </div>
            </GraphWithControls>
          </WithStyles(GraphWithControls)>
        </Connect(WithStyles(GraphWithControls))>
      </Provider>
    </Root>
    <div
      onClick={[Function]}
    >
      ADD ALTERNATE
    </div>
    <WithStyles(AlertDialog)
      open={false}
    >
      <AlertDialog
        classes={
          Object {
            "heading": "AlertDialog-heading-174",
            "subheading": "AlertDialog-subheading-175",
          }
        }
        onCloseText="CANCEL"
        onConfirmText="OK"
        open={false}
      >
        <WithStyles(Dialog)
          open={false}
        >
          <Dialog
            PaperComponent={[Function]}
            TransitionComponent={[Function]}
            classes={
              Object {
                "container": "MuiDialog-container-179",
                "paper": "MuiDialog-paper-180",
                "paperFullScreen": "MuiDialog-paperFullScreen-189",
                "paperFullWidth": "MuiDialog-paperFullWidth-188",
                "paperScrollBody": "MuiDialog-paperScrollBody-182",
                "paperScrollPaper": "MuiDialog-paperScrollPaper-181",
                "paperWidthLg": "MuiDialog-paperWidthLg-186",
                "paperWidthMd": "MuiDialog-paperWidthMd-185",
                "paperWidthSm": "MuiDialog-paperWidthSm-184",
                "paperWidthXl": "MuiDialog-paperWidthXl-187",
                "paperWidthXs": "MuiDialog-paperWidthXs-183",
                "root": "MuiDialog-root-176",
                "scrollBody": "MuiDialog-scrollBody-178",
                "scrollPaper": "MuiDialog-scrollPaper-177",
              }
            }
            disableBackdropClick={false}
            disableEscapeKeyDown={false}
            fullScreen={false}
            fullWidth={false}
            maxWidth="sm"
            open={false}
            scroll="paper"
            transitionDuration={
              Object {
                "enter": 225,
                "exit": 195,
              }
            }
          >
            <WithStyles(Modal)
              BackdropProps={
                Object {
                  "transitionDuration": Object {
                    "enter": 225,
                    "exit": 195,
                  },
                }
              }
              className="MuiDialog-root-176"
              closeAfterTransition={true}
              disableBackdropClick={false}
              disableEscapeKeyDown={false}
              open={false}
              role="dialog"
            >
              <Modal
                BackdropComponent={[Function]}
                BackdropProps={
                  Object {
                    "transitionDuration": Object {
                      "enter": 225,
                      "exit": 195,
                    },
                  }
                }
                className="MuiDialog-root-176"
                classes={
                  Object {
                    "hidden": "MuiModal-hidden-86",
                    "root": "MuiModal-root-85",
                  }
                }
                closeAfterTransition={true}
                disableAutoFocus={false}
                disableBackdropClick={false}
                disableEnforceFocus={false}
                disableEscapeKeyDown={false}
                disablePortal={false}
                disableRestoreFocus={false}
                hideBackdrop={false}
                keepMounted={false}
                manager={
                  ModalManager {
                    "data": Array [],
                    "handleContainerOverflow": true,
                    "hideSiblingNodes": true,
                    "modals": Array [],
                  }
                }
                open={false}
                role="dialog"
              />
            </WithStyles(Modal)>
          </Dialog>
        </WithStyles(Dialog)>
      </AlertDialog>
    </WithStyles(AlertDialog)>
  </div>
</CorrectResponse>
`;

exports[`CorrectResponse: if answers is null it should still work as expected renders snapshot 1`] = `
<CorrectResponse
  classes={Object {}}
  model={
    Object {
      "answers": null,
      "arrows": Object {
        "down": true,
        "left": true,
        "right": true,
        "up": true,
      },
      "backgroundMarks": Array [],
      "coordinatesOnHover": false,
      "defaultGridConfiguration": 0,
      "domain": Object {
        "axisLabel": "x",
        "labelStep": 1,
        "max": 5,
        "min": -5,
        "step": 1,
      },
      "graph": Object {
        "height": 500,
        "width": 500,
      },
      "includeAxes": true,
      "labels": Object {},
      "labelsEnabled": true,
      "padding": true,
      "prompt": "",
      "promptEnabled": true,
      "range": Object {
        "axisLabel": "y",
        "labelStep": 1,
        "max": 5,
        "min": -5,
        "step": 1,
      },
      "rationale": "",
      "rationaleEnabled": true,
      "standardGrid": false,
      "studentInstructionsEnabled": true,
      "teacherInstructionsEnabled": true,
      "title": "",
      "toolbarTools": Array [],
    }
  }
  onChange={[MockFunction]}
  tools={Array []}
>
  <div>
    <WithStyles(Typography)
      component="div"
      variant="subheading"
    >
      <Typography
        align="inherit"
        classes={
          Object {
            "alignCenter": "MuiTypography-alignCenter-24",
            "alignJustify": "MuiTypography-alignJustify-26",
            "alignLeft": "MuiTypography-alignLeft-23",
            "alignRight": "MuiTypography-alignRight-25",
            "body1": "MuiTypography-body1-10",
            "body2": "MuiTypography-body2-9",
            "button": "MuiTypography-button-12",
            "caption": "MuiTypography-caption-11",
            "colorError": "MuiTypography-colorError-35",
            "colorInherit": "MuiTypography-colorInherit-30",
            "colorPrimary": "MuiTypography-colorPrimary-31",
            "colorSecondary": "MuiTypography-colorSecondary-32",
            "colorTextPrimary": "MuiTypography-colorTextPrimary-33",
            "colorTextSecondary": "MuiTypography-colorTextSecondary-34",
            "display1": "MuiTypography-display1-5",
            "display2": "MuiTypography-display2-4",
            "display3": "MuiTypography-display3-3",
            "display4": "MuiTypography-display4-2",
            "gutterBottom": "MuiTypography-gutterBottom-28",
            "h1": "MuiTypography-h1-13",
            "h2": "MuiTypography-h2-14",
            "h3": "MuiTypography-h3-15",
            "h4": "MuiTypography-h4-16",
            "h5": "MuiTypography-h5-17",
            "h6": "MuiTypography-h6-18",
            "headline": "MuiTypography-headline-6",
            "inline": "MuiTypography-inline-36",
            "noWrap": "MuiTypography-noWrap-27",
            "overline": "MuiTypography-overline-21",
            "paragraph": "MuiTypography-paragraph-29",
            "root": "MuiTypography-root-1",
            "srOnly": "MuiTypography-srOnly-22",
            "subheading": "MuiTypography-subheading-8",
            "subtitle1": "MuiTypography-subtitle1-19",
            "subtitle2": "MuiTypography-subtitle2-20",
            "title": "MuiTypography-title-7",
          }
        }
        color="default"
        component="div"
        gutterBottom={false}
        headlineMapping={
          Object {
            "body1": "p",
            "body2": "p",
            "display1": "h1",
            "display2": "h1",
            "display3": "h1",
            "display4": "h1",
            "h1": "h1",
            "h2": "h2",
            "h3": "h3",
            "h4": "h4",
            "h5": "h5",
            "h6": "h6",
            "headline": "h1",
            "subheading": "h3",
            "subtitle1": "h6",
            "subtitle2": "h6",
            "title": "h2",
          }
        }
        inline={false}
        noWrap={false}
        paragraph={false}
        theme={
          Object {
            "breakpoints": Object {
              "between": [Function],
              "down": [Function],
              "keys": Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ],
              "only": [Function],
              "up": [Function],
              "values": Object {
                "lg": 1280,
                "md": 960,
                "sm": 600,
                "xl": 1920,
                "xs": 0,
              },
              "width": [Function],
            },
            "direction": "ltr",
            "mixins": Object {
              "gutters": [Function],
              "toolbar": Object {
                "@media (min-width:0px) and (orientation: landscape)": Object {
                  "minHeight": 48,
                },
                "@media (min-width:600px)": Object {
                  "minHeight": 64,
                },
                "minHeight": 56,
              },
            },
            "overrides": Object {},
            "palette": Object {
              "action": Object {
                "active": "rgba(0, 0, 0, 0.54)",
                "disabled": "rgba(0, 0, 0, 0.26)",
                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                "hover": "rgba(0, 0, 0, 0.08)",
                "hoverOpacity": 0.08,
                "selected": "rgba(0, 0, 0, 0.14)",
              },
              "augmentColor": [Function],
              "background": Object {
                "default": "#fafafa",
                "paper": "#fff",
              },
              "common": Object {
                "black": "#000",
                "white": "#fff",
              },
              "contrastThreshold": 3,
              "divider": "rgba(0, 0, 0, 0.12)",
              "error": Object {
                "contrastText": "#fff",
                "dark": "#d32f2f",
                "light": "#e57373",
                "main": "#f44336",
              },
              "getContrastText": [Function],
              "grey": Object {
                "100": "#f5f5f5",
                "200": "#eeeeee",
                "300": "#e0e0e0",
                "400": "#bdbdbd",
                "50": "#fafafa",
                "500": "#9e9e9e",
                "600": "#757575",
                "700": "#616161",
                "800": "#424242",
                "900": "#212121",
                "A100": "#d5d5d5",
                "A200": "#aaaaaa",
                "A400": "#303030",
                "A700": "#616161",
              },
              "primary": Object {
                "contrastText": "#fff",
                "dark": "#303f9f",
                "light": "#7986cb",
                "main": "#3f51b5",
              },
              "secondary": Object {
                "contrastText": "#fff",
                "dark": "#c51162",
                "light": "#ff4081",
                "main": "#f50057",
              },
              "text": Object {
                "disabled": "rgba(0, 0, 0, 0.38)",
                "hint": "rgba(0, 0, 0, 0.38)",
                "primary": "rgba(0, 0, 0, 0.87)",
                "secondary": "rgba(0, 0, 0, 0.54)",
              },
              "tonalOffset": 0.2,
              "type": "light",
            },
            "props": Object {},
            "shadows": Array [
              "none",
              "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
              "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
              "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
            ],
            "shape": Object {
              "borderRadius": 4,
            },
            "spacing": Object {
              "unit": 8,
            },
            "transitions": Object {
              "create": [Function],
              "duration": Object {
                "complex": 375,
                "enteringScreen": 225,
                "leavingScreen": 195,
                "short": 250,
                "shorter": 200,
                "shortest": 150,
                "standard": 300,
              },
              "easing": Object {
                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
              },
              "getAutoHeightDuration": [Function],
            },
            "typography": Object {
              "body1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "lineHeight": "1.46429em",
              },
              "body1Next": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 400,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.5,
              },
              "body2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "lineHeight": "1.71429em",
              },
              "body2Next": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "letterSpacing": "0.01071em",
                "lineHeight": 1.5,
              },
              "button": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "textTransform": "uppercase",
              },
              "buttonNext": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "letterSpacing": "0.02857em",
                "lineHeight": 1.75,
                "textTransform": "uppercase",
              },
              "caption": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 400,
                "lineHeight": "1.375em",
              },
              "captionNext": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 400,
                "letterSpacing": "0.03333em",
                "lineHeight": 1.66,
              },
              "display1": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.125rem",
                "fontWeight": 400,
                "lineHeight": "1.20588em",
              },
              "display2": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.8125rem",
                "fontWeight": 400,
                "lineHeight": "1.13333em",
                "marginLeft": "-.02em",
              },
              "display3": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3.5rem",
                "fontWeight": 400,
                "letterSpacing": "-.02em",
                "lineHeight": "1.30357em",
                "marginLeft": "-.02em",
              },
              "display4": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "7rem",
                "fontWeight": 300,
                "letterSpacing": "-.04em",
                "lineHeight": "1.14286em",
                "marginLeft": "-.04em",
              },
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": 14,
              "fontWeightLight": 300,
              "fontWeightMedium": 500,
              "fontWeightRegular": 400,
              "h1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "6rem",
                "fontWeight": 300,
                "letterSpacing": "-0.01562em",
                "lineHeight": 1,
              },
              "h2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3.75rem",
                "fontWeight": 300,
                "letterSpacing": "-0.00833em",
                "lineHeight": 1,
              },
              "h3": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3rem",
                "fontWeight": 400,
                "letterSpacing": "0em",
                "lineHeight": 1.04,
              },
              "h4": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.125rem",
                "fontWeight": 400,
                "letterSpacing": "0.00735em",
                "lineHeight": 1.17,
              },
              "h5": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.5rem",
                "fontWeight": 400,
                "letterSpacing": "0em",
                "lineHeight": 1.33,
              },
              "h6": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.25rem",
                "fontWeight": 500,
                "letterSpacing": "0.0075em",
                "lineHeight": 1.6,
              },
              "headline": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.5rem",
                "fontWeight": 400,
                "lineHeight": "1.35417em",
              },
              "overline": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 400,
                "letterSpacing": "0.08333em",
                "lineHeight": 2.66,
                "textTransform": "uppercase",
              },
              "pxToRem": [Function],
              "round": [Function],
              "subheading": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 400,
                "lineHeight": "1.5em",
              },
              "subtitle1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 400,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.75,
              },
              "subtitle2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "letterSpacing": "0.00714em",
                "lineHeight": 1.57,
              },
              "title": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.3125rem",
                "fontWeight": 500,
                "lineHeight": "1.16667em",
              },
              "useNextVariants": false,
            },
            "zIndex": Object {
              "appBar": 1100,
              "drawer": 1200,
              "mobileStepper": 1000,
              "modal": 1300,
              "snackbar": 1400,
              "tooltip": 1500,
            },
          }
        }
        variant="subheading"
      >
        <div
          className="MuiTypography-root-1 MuiTypography-subheading-8"
        >
          Define Tool Set and Correct Response
        </div>
      </Typography>
    </WithStyles(Typography)>
    <WithStyles(Typography)
      component="div"
      variant="body1"
    >
      <Typography
        align="inherit"
        classes={
          Object {
            "alignCenter": "MuiTypography-alignCenter-24",
            "alignJustify": "MuiTypography-alignJustify-26",
            "alignLeft": "MuiTypography-alignLeft-23",
            "alignRight": "MuiTypography-alignRight-25",
            "body1": "MuiTypography-body1-10",
            "body2": "MuiTypography-body2-9",
            "button": "MuiTypography-button-12",
            "caption": "MuiTypography-caption-11",
            "colorError": "MuiTypography-colorError-35",
            "colorInherit": "MuiTypography-colorInherit-30",
            "colorPrimary": "MuiTypography-colorPrimary-31",
            "colorSecondary": "MuiTypography-colorSecondary-32",
            "colorTextPrimary": "MuiTypography-colorTextPrimary-33",
            "colorTextSecondary": "MuiTypography-colorTextSecondary-34",
            "display1": "MuiTypography-display1-5",
            "display2": "MuiTypography-display2-4",
            "display3": "MuiTypography-display3-3",
            "display4": "MuiTypography-display4-2",
            "gutterBottom": "MuiTypography-gutterBottom-28",
            "h1": "MuiTypography-h1-13",
            "h2": "MuiTypography-h2-14",
            "h3": "MuiTypography-h3-15",
            "h4": "MuiTypography-h4-16",
            "h5": "MuiTypography-h5-17",
            "h6": "MuiTypography-h6-18",
            "headline": "MuiTypography-headline-6",
            "inline": "MuiTypography-inline-36",
            "noWrap": "MuiTypography-noWrap-27",
            "overline": "MuiTypography-overline-21",
            "paragraph": "MuiTypography-paragraph-29",
            "root": "MuiTypography-root-1",
            "srOnly": "MuiTypography-srOnly-22",
            "subheading": "MuiTypography-subheading-8",
            "subtitle1": "MuiTypography-subtitle1-19",
            "subtitle2": "MuiTypography-subtitle2-20",
            "title": "MuiTypography-title-7",
          }
        }
        color="default"
        component="div"
        gutterBottom={false}
        headlineMapping={
          Object {
            "body1": "p",
            "body2": "p",
            "display1": "h1",
            "display2": "h1",
            "display3": "h1",
            "display4": "h1",
            "h1": "h1",
            "h2": "h2",
            "h3": "h3",
            "h4": "h4",
            "h5": "h5",
            "h6": "h6",
            "headline": "h1",
            "subheading": "h3",
            "subtitle1": "h6",
            "subtitle2": "h6",
            "title": "h2",
          }
        }
        inline={false}
        noWrap={false}
        paragraph={false}
        theme={
          Object {
            "breakpoints": Object {
              "between": [Function],
              "down": [Function],
              "keys": Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ],
              "only": [Function],
              "up": [Function],
              "values": Object {
                "lg": 1280,
                "md": 960,
                "sm": 600,
                "xl": 1920,
                "xs": 0,
              },
              "width": [Function],
            },
            "direction": "ltr",
            "mixins": Object {
              "gutters": [Function],
              "toolbar": Object {
                "@media (min-width:0px) and (orientation: landscape)": Object {
                  "minHeight": 48,
                },
                "@media (min-width:600px)": Object {
                  "minHeight": 64,
                },
                "minHeight": 56,
              },
            },
            "overrides": Object {},
            "palette": Object {
              "action": Object {
                "active": "rgba(0, 0, 0, 0.54)",
                "disabled": "rgba(0, 0, 0, 0.26)",
                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                "hover": "rgba(0, 0, 0, 0.08)",
                "hoverOpacity": 0.08,
                "selected": "rgba(0, 0, 0, 0.14)",
              },
              "augmentColor": [Function],
              "background": Object {
                "default": "#fafafa",
                "paper": "#fff",
              },
              "common": Object {
                "black": "#000",
                "white": "#fff",
              },
              "contrastThreshold": 3,
              "divider": "rgba(0, 0, 0, 0.12)",
              "error": Object {
                "contrastText": "#fff",
                "dark": "#d32f2f",
                "light": "#e57373",
                "main": "#f44336",
              },
              "getContrastText": [Function],
              "grey": Object {
                "100": "#f5f5f5",
                "200": "#eeeeee",
                "300": "#e0e0e0",
                "400": "#bdbdbd",
                "50": "#fafafa",
                "500": "#9e9e9e",
                "600": "#757575",
                "700": "#616161",
                "800": "#424242",
                "900": "#212121",
                "A100": "#d5d5d5",
                "A200": "#aaaaaa",
                "A400": "#303030",
                "A700": "#616161",
              },
              "primary": Object {
                "contrastText": "#fff",
                "dark": "#303f9f",
                "light": "#7986cb",
                "main": "#3f51b5",
              },
              "secondary": Object {
                "contrastText": "#fff",
                "dark": "#c51162",
                "light": "#ff4081",
                "main": "#f50057",
              },
              "text": Object {
                "disabled": "rgba(0, 0, 0, 0.38)",
                "hint": "rgba(0, 0, 0, 0.38)",
                "primary": "rgba(0, 0, 0, 0.87)",
                "secondary": "rgba(0, 0, 0, 0.54)",
              },
              "tonalOffset": 0.2,
              "type": "light",
            },
            "props": Object {},
            "shadows": Array [
              "none",
              "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
              "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
              "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
            ],
            "shape": Object {
              "borderRadius": 4,
            },
            "spacing": Object {
              "unit": 8,
            },
            "transitions": Object {
              "create": [Function],
              "duration": Object {
                "complex": 375,
                "enteringScreen": 225,
                "leavingScreen": 195,
                "short": 250,
                "shorter": 200,
                "shortest": 150,
                "standard": 300,
              },
              "easing": Object {
                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
              },
              "getAutoHeightDuration": [Function],
            },
            "typography": Object {
              "body1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "lineHeight": "1.46429em",
              },
              "body1Next": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 400,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.5,
              },
              "body2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "lineHeight": "1.71429em",
              },
              "body2Next": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "letterSpacing": "0.01071em",
                "lineHeight": 1.5,
              },
              "button": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "textTransform": "uppercase",
              },
              "buttonNext": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "letterSpacing": "0.02857em",
                "lineHeight": 1.75,
                "textTransform": "uppercase",
              },
              "caption": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 400,
                "lineHeight": "1.375em",
              },
              "captionNext": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 400,
                "letterSpacing": "0.03333em",
                "lineHeight": 1.66,
              },
              "display1": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.125rem",
                "fontWeight": 400,
                "lineHeight": "1.20588em",
              },
              "display2": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.8125rem",
                "fontWeight": 400,
                "lineHeight": "1.13333em",
                "marginLeft": "-.02em",
              },
              "display3": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3.5rem",
                "fontWeight": 400,
                "letterSpacing": "-.02em",
                "lineHeight": "1.30357em",
                "marginLeft": "-.02em",
              },
              "display4": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "7rem",
                "fontWeight": 300,
                "letterSpacing": "-.04em",
                "lineHeight": "1.14286em",
                "marginLeft": "-.04em",
              },
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": 14,
              "fontWeightLight": 300,
              "fontWeightMedium": 500,
              "fontWeightRegular": 400,
              "h1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "6rem",
                "fontWeight": 300,
                "letterSpacing": "-0.01562em",
                "lineHeight": 1,
              },
              "h2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3.75rem",
                "fontWeight": 300,
                "letterSpacing": "-0.00833em",
                "lineHeight": 1,
              },
              "h3": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3rem",
                "fontWeight": 400,
                "letterSpacing": "0em",
                "lineHeight": 1.04,
              },
              "h4": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.125rem",
                "fontWeight": 400,
                "letterSpacing": "0.00735em",
                "lineHeight": 1.17,
              },
              "h5": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.5rem",
                "fontWeight": 400,
                "letterSpacing": "0em",
                "lineHeight": 1.33,
              },
              "h6": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.25rem",
                "fontWeight": 500,
                "letterSpacing": "0.0075em",
                "lineHeight": 1.6,
              },
              "headline": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.5rem",
                "fontWeight": 400,
                "lineHeight": "1.35417em",
              },
              "overline": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 400,
                "letterSpacing": "0.08333em",
                "lineHeight": 2.66,
                "textTransform": "uppercase",
              },
              "pxToRem": [Function],
              "round": [Function],
              "subheading": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 400,
                "lineHeight": "1.5em",
              },
              "subtitle1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 400,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.75,
              },
              "subtitle2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "letterSpacing": "0.00714em",
                "lineHeight": 1.57,
              },
              "title": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.3125rem",
                "fontWeight": 500,
                "lineHeight": "1.16667em",
              },
              "useNextVariants": false,
            },
            "zIndex": Object {
              "appBar": 1100,
              "drawer": 1200,
              "mobileStepper": 1000,
              "modal": 1300,
              "snackbar": 1400,
              "tooltip": 1500,
            },
          }
        }
        variant="body1"
      >
        <div
          className="MuiTypography-root-1 MuiTypography-body1-10"
        >
          Use this interface to choose which graphing tools students will be able to use, and to define the correct answer
        </div>
      </Typography>
    </WithStyles(Typography)>
    <Tools
      classes={Object {}}
      hasErrors={false}
      onDefaultToolChange={[Function]}
      toggleToolBarTool={[Function]}
      toolbarTools={Array []}
    >
      <div>
        <div>
          <span>
            GRAPHING TOOLS
          </span>
        </div>
        <div />
      </div>
    </Tools>
    <div
      onClick={[Function]}
    >
      ADD ALTERNATE
    </div>
    <WithStyles(AlertDialog)
      open={false}
    >
      <AlertDialog
        classes={
          Object {
            "heading": "AlertDialog-heading-174",
            "subheading": "AlertDialog-subheading-175",
          }
        }
        onCloseText="CANCEL"
        onConfirmText="OK"
        open={false}
      >
        <WithStyles(Dialog)
          open={false}
        >
          <Dialog
            PaperComponent={[Function]}
            TransitionComponent={[Function]}
            classes={
              Object {
                "container": "MuiDialog-container-179",
                "paper": "MuiDialog-paper-180",
                "paperFullScreen": "MuiDialog-paperFullScreen-189",
                "paperFullWidth": "MuiDialog-paperFullWidth-188",
                "paperScrollBody": "MuiDialog-paperScrollBody-182",
                "paperScrollPaper": "MuiDialog-paperScrollPaper-181",
                "paperWidthLg": "MuiDialog-paperWidthLg-186",
                "paperWidthMd": "MuiDialog-paperWidthMd-185",
                "paperWidthSm": "MuiDialog-paperWidthSm-184",
                "paperWidthXl": "MuiDialog-paperWidthXl-187",
                "paperWidthXs": "MuiDialog-paperWidthXs-183",
                "root": "MuiDialog-root-176",
                "scrollBody": "MuiDialog-scrollBody-178",
                "scrollPaper": "MuiDialog-scrollPaper-177",
              }
            }
            disableBackdropClick={false}
            disableEscapeKeyDown={false}
            fullScreen={false}
            fullWidth={false}
            maxWidth="sm"
            open={false}
            scroll="paper"
            transitionDuration={
              Object {
                "enter": 225,
                "exit": 195,
              }
            }
          >
            <WithStyles(Modal)
              BackdropProps={
                Object {
                  "transitionDuration": Object {
                    "enter": 225,
                    "exit": 195,
                  },
                }
              }
              className="MuiDialog-root-176"
              closeAfterTransition={true}
              disableBackdropClick={false}
              disableEscapeKeyDown={false}
              open={false}
              role="dialog"
            >
              <Modal
                BackdropComponent={[Function]}
                BackdropProps={
                  Object {
                    "transitionDuration": Object {
                      "enter": 225,
                      "exit": 195,
                    },
                  }
                }
                className="MuiDialog-root-176"
                classes={
                  Object {
                    "hidden": "MuiModal-hidden-86",
                    "root": "MuiModal-root-85",
                  }
                }
                closeAfterTransition={true}
                disableAutoFocus={false}
                disableBackdropClick={false}
                disableEnforceFocus={false}
                disableEscapeKeyDown={false}
                disablePortal={false}
                disableRestoreFocus={false}
                hideBackdrop={false}
                keepMounted={false}
                manager={
                  ModalManager {
                    "data": Array [],
                    "handleContainerOverflow": true,
                    "hideSiblingNodes": true,
                    "modals": Array [],
                  }
                }
                open={false}
                role="dialog"
              />
            </WithStyles(Modal)>
          </Dialog>
        </WithStyles(Dialog)>
      </AlertDialog>
    </WithStyles(AlertDialog)>
  </div>
</CorrectResponse>
`;

exports[`CorrectResponse: if answers is undefined it should still work as expected renders snapshot 1`] = `
<CorrectResponse
  classes={Object {}}
  model={
    Object {
      "answers": undefined,
      "arrows": Object {
        "down": true,
        "left": true,
        "right": true,
        "up": true,
      },
      "backgroundMarks": Array [],
      "coordinatesOnHover": false,
      "defaultGridConfiguration": 0,
      "domain": Object {
        "axisLabel": "x",
        "labelStep": 1,
        "max": 5,
        "min": -5,
        "step": 1,
      },
      "graph": Object {
        "height": 500,
        "width": 500,
      },
      "includeAxes": true,
      "labels": Object {},
      "labelsEnabled": true,
      "padding": true,
      "prompt": "",
      "promptEnabled": true,
      "range": Object {
        "axisLabel": "y",
        "labelStep": 1,
        "max": 5,
        "min": -5,
        "step": 1,
      },
      "rationale": "",
      "rationaleEnabled": true,
      "standardGrid": false,
      "studentInstructionsEnabled": true,
      "teacherInstructionsEnabled": true,
      "title": "",
      "toolbarTools": Array [],
    }
  }
  onChange={[MockFunction]}
  tools={Array []}
>
  <div>
    <WithStyles(Typography)
      component="div"
      variant="subheading"
    >
      <Typography
        align="inherit"
        classes={
          Object {
            "alignCenter": "MuiTypography-alignCenter-24",
            "alignJustify": "MuiTypography-alignJustify-26",
            "alignLeft": "MuiTypography-alignLeft-23",
            "alignRight": "MuiTypography-alignRight-25",
            "body1": "MuiTypography-body1-10",
            "body2": "MuiTypography-body2-9",
            "button": "MuiTypography-button-12",
            "caption": "MuiTypography-caption-11",
            "colorError": "MuiTypography-colorError-35",
            "colorInherit": "MuiTypography-colorInherit-30",
            "colorPrimary": "MuiTypography-colorPrimary-31",
            "colorSecondary": "MuiTypography-colorSecondary-32",
            "colorTextPrimary": "MuiTypography-colorTextPrimary-33",
            "colorTextSecondary": "MuiTypography-colorTextSecondary-34",
            "display1": "MuiTypography-display1-5",
            "display2": "MuiTypography-display2-4",
            "display3": "MuiTypography-display3-3",
            "display4": "MuiTypography-display4-2",
            "gutterBottom": "MuiTypography-gutterBottom-28",
            "h1": "MuiTypography-h1-13",
            "h2": "MuiTypography-h2-14",
            "h3": "MuiTypography-h3-15",
            "h4": "MuiTypography-h4-16",
            "h5": "MuiTypography-h5-17",
            "h6": "MuiTypography-h6-18",
            "headline": "MuiTypography-headline-6",
            "inline": "MuiTypography-inline-36",
            "noWrap": "MuiTypography-noWrap-27",
            "overline": "MuiTypography-overline-21",
            "paragraph": "MuiTypography-paragraph-29",
            "root": "MuiTypography-root-1",
            "srOnly": "MuiTypography-srOnly-22",
            "subheading": "MuiTypography-subheading-8",
            "subtitle1": "MuiTypography-subtitle1-19",
            "subtitle2": "MuiTypography-subtitle2-20",
            "title": "MuiTypography-title-7",
          }
        }
        color="default"
        component="div"
        gutterBottom={false}
        headlineMapping={
          Object {
            "body1": "p",
            "body2": "p",
            "display1": "h1",
            "display2": "h1",
            "display3": "h1",
            "display4": "h1",
            "h1": "h1",
            "h2": "h2",
            "h3": "h3",
            "h4": "h4",
            "h5": "h5",
            "h6": "h6",
            "headline": "h1",
            "subheading": "h3",
            "subtitle1": "h6",
            "subtitle2": "h6",
            "title": "h2",
          }
        }
        inline={false}
        noWrap={false}
        paragraph={false}
        theme={
          Object {
            "breakpoints": Object {
              "between": [Function],
              "down": [Function],
              "keys": Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ],
              "only": [Function],
              "up": [Function],
              "values": Object {
                "lg": 1280,
                "md": 960,
                "sm": 600,
                "xl": 1920,
                "xs": 0,
              },
              "width": [Function],
            },
            "direction": "ltr",
            "mixins": Object {
              "gutters": [Function],
              "toolbar": Object {
                "@media (min-width:0px) and (orientation: landscape)": Object {
                  "minHeight": 48,
                },
                "@media (min-width:600px)": Object {
                  "minHeight": 64,
                },
                "minHeight": 56,
              },
            },
            "overrides": Object {},
            "palette": Object {
              "action": Object {
                "active": "rgba(0, 0, 0, 0.54)",
                "disabled": "rgba(0, 0, 0, 0.26)",
                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                "hover": "rgba(0, 0, 0, 0.08)",
                "hoverOpacity": 0.08,
                "selected": "rgba(0, 0, 0, 0.14)",
              },
              "augmentColor": [Function],
              "background": Object {
                "default": "#fafafa",
                "paper": "#fff",
              },
              "common": Object {
                "black": "#000",
                "white": "#fff",
              },
              "contrastThreshold": 3,
              "divider": "rgba(0, 0, 0, 0.12)",
              "error": Object {
                "contrastText": "#fff",
                "dark": "#d32f2f",
                "light": "#e57373",
                "main": "#f44336",
              },
              "getContrastText": [Function],
              "grey": Object {
                "100": "#f5f5f5",
                "200": "#eeeeee",
                "300": "#e0e0e0",
                "400": "#bdbdbd",
                "50": "#fafafa",
                "500": "#9e9e9e",
                "600": "#757575",
                "700": "#616161",
                "800": "#424242",
                "900": "#212121",
                "A100": "#d5d5d5",
                "A200": "#aaaaaa",
                "A400": "#303030",
                "A700": "#616161",
              },
              "primary": Object {
                "contrastText": "#fff",
                "dark": "#303f9f",
                "light": "#7986cb",
                "main": "#3f51b5",
              },
              "secondary": Object {
                "contrastText": "#fff",
                "dark": "#c51162",
                "light": "#ff4081",
                "main": "#f50057",
              },
              "text": Object {
                "disabled": "rgba(0, 0, 0, 0.38)",
                "hint": "rgba(0, 0, 0, 0.38)",
                "primary": "rgba(0, 0, 0, 0.87)",
                "secondary": "rgba(0, 0, 0, 0.54)",
              },
              "tonalOffset": 0.2,
              "type": "light",
            },
            "props": Object {},
            "shadows": Array [
              "none",
              "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
              "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
              "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
            ],
            "shape": Object {
              "borderRadius": 4,
            },
            "spacing": Object {
              "unit": 8,
            },
            "transitions": Object {
              "create": [Function],
              "duration": Object {
                "complex": 375,
                "enteringScreen": 225,
                "leavingScreen": 195,
                "short": 250,
                "shorter": 200,
                "shortest": 150,
                "standard": 300,
              },
              "easing": Object {
                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
              },
              "getAutoHeightDuration": [Function],
            },
            "typography": Object {
              "body1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "lineHeight": "1.46429em",
              },
              "body1Next": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 400,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.5,
              },
              "body2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "lineHeight": "1.71429em",
              },
              "body2Next": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "letterSpacing": "0.01071em",
                "lineHeight": 1.5,
              },
              "button": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "textTransform": "uppercase",
              },
              "buttonNext": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "letterSpacing": "0.02857em",
                "lineHeight": 1.75,
                "textTransform": "uppercase",
              },
              "caption": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 400,
                "lineHeight": "1.375em",
              },
              "captionNext": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 400,
                "letterSpacing": "0.03333em",
                "lineHeight": 1.66,
              },
              "display1": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.125rem",
                "fontWeight": 400,
                "lineHeight": "1.20588em",
              },
              "display2": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.8125rem",
                "fontWeight": 400,
                "lineHeight": "1.13333em",
                "marginLeft": "-.02em",
              },
              "display3": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3.5rem",
                "fontWeight": 400,
                "letterSpacing": "-.02em",
                "lineHeight": "1.30357em",
                "marginLeft": "-.02em",
              },
              "display4": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "7rem",
                "fontWeight": 300,
                "letterSpacing": "-.04em",
                "lineHeight": "1.14286em",
                "marginLeft": "-.04em",
              },
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": 14,
              "fontWeightLight": 300,
              "fontWeightMedium": 500,
              "fontWeightRegular": 400,
              "h1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "6rem",
                "fontWeight": 300,
                "letterSpacing": "-0.01562em",
                "lineHeight": 1,
              },
              "h2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3.75rem",
                "fontWeight": 300,
                "letterSpacing": "-0.00833em",
                "lineHeight": 1,
              },
              "h3": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3rem",
                "fontWeight": 400,
                "letterSpacing": "0em",
                "lineHeight": 1.04,
              },
              "h4": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.125rem",
                "fontWeight": 400,
                "letterSpacing": "0.00735em",
                "lineHeight": 1.17,
              },
              "h5": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.5rem",
                "fontWeight": 400,
                "letterSpacing": "0em",
                "lineHeight": 1.33,
              },
              "h6": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.25rem",
                "fontWeight": 500,
                "letterSpacing": "0.0075em",
                "lineHeight": 1.6,
              },
              "headline": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.5rem",
                "fontWeight": 400,
                "lineHeight": "1.35417em",
              },
              "overline": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 400,
                "letterSpacing": "0.08333em",
                "lineHeight": 2.66,
                "textTransform": "uppercase",
              },
              "pxToRem": [Function],
              "round": [Function],
              "subheading": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 400,
                "lineHeight": "1.5em",
              },
              "subtitle1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 400,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.75,
              },
              "subtitle2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "letterSpacing": "0.00714em",
                "lineHeight": 1.57,
              },
              "title": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.3125rem",
                "fontWeight": 500,
                "lineHeight": "1.16667em",
              },
              "useNextVariants": false,
            },
            "zIndex": Object {
              "appBar": 1100,
              "drawer": 1200,
              "mobileStepper": 1000,
              "modal": 1300,
              "snackbar": 1400,
              "tooltip": 1500,
            },
          }
        }
        variant="subheading"
      >
        <div
          className="MuiTypography-root-1 MuiTypography-subheading-8"
        >
          Define Tool Set and Correct Response
        </div>
      </Typography>
    </WithStyles(Typography)>
    <WithStyles(Typography)
      component="div"
      variant="body1"
    >
      <Typography
        align="inherit"
        classes={
          Object {
            "alignCenter": "MuiTypography-alignCenter-24",
            "alignJustify": "MuiTypography-alignJustify-26",
            "alignLeft": "MuiTypography-alignLeft-23",
            "alignRight": "MuiTypography-alignRight-25",
            "body1": "MuiTypography-body1-10",
            "body2": "MuiTypography-body2-9",
            "button": "MuiTypography-button-12",
            "caption": "MuiTypography-caption-11",
            "colorError": "MuiTypography-colorError-35",
            "colorInherit": "MuiTypography-colorInherit-30",
            "colorPrimary": "MuiTypography-colorPrimary-31",
            "colorSecondary": "MuiTypography-colorSecondary-32",
            "colorTextPrimary": "MuiTypography-colorTextPrimary-33",
            "colorTextSecondary": "MuiTypography-colorTextSecondary-34",
            "display1": "MuiTypography-display1-5",
            "display2": "MuiTypography-display2-4",
            "display3": "MuiTypography-display3-3",
            "display4": "MuiTypography-display4-2",
            "gutterBottom": "MuiTypography-gutterBottom-28",
            "h1": "MuiTypography-h1-13",
            "h2": "MuiTypography-h2-14",
            "h3": "MuiTypography-h3-15",
            "h4": "MuiTypography-h4-16",
            "h5": "MuiTypography-h5-17",
            "h6": "MuiTypography-h6-18",
            "headline": "MuiTypography-headline-6",
            "inline": "MuiTypography-inline-36",
            "noWrap": "MuiTypography-noWrap-27",
            "overline": "MuiTypography-overline-21",
            "paragraph": "MuiTypography-paragraph-29",
            "root": "MuiTypography-root-1",
            "srOnly": "MuiTypography-srOnly-22",
            "subheading": "MuiTypography-subheading-8",
            "subtitle1": "MuiTypography-subtitle1-19",
            "subtitle2": "MuiTypography-subtitle2-20",
            "title": "MuiTypography-title-7",
          }
        }
        color="default"
        component="div"
        gutterBottom={false}
        headlineMapping={
          Object {
            "body1": "p",
            "body2": "p",
            "display1": "h1",
            "display2": "h1",
            "display3": "h1",
            "display4": "h1",
            "h1": "h1",
            "h2": "h2",
            "h3": "h3",
            "h4": "h4",
            "h5": "h5",
            "h6": "h6",
            "headline": "h1",
            "subheading": "h3",
            "subtitle1": "h6",
            "subtitle2": "h6",
            "title": "h2",
          }
        }
        inline={false}
        noWrap={false}
        paragraph={false}
        theme={
          Object {
            "breakpoints": Object {
              "between": [Function],
              "down": [Function],
              "keys": Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ],
              "only": [Function],
              "up": [Function],
              "values": Object {
                "lg": 1280,
                "md": 960,
                "sm": 600,
                "xl": 1920,
                "xs": 0,
              },
              "width": [Function],
            },
            "direction": "ltr",
            "mixins": Object {
              "gutters": [Function],
              "toolbar": Object {
                "@media (min-width:0px) and (orientation: landscape)": Object {
                  "minHeight": 48,
                },
                "@media (min-width:600px)": Object {
                  "minHeight": 64,
                },
                "minHeight": 56,
              },
            },
            "overrides": Object {},
            "palette": Object {
              "action": Object {
                "active": "rgba(0, 0, 0, 0.54)",
                "disabled": "rgba(0, 0, 0, 0.26)",
                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                "hover": "rgba(0, 0, 0, 0.08)",
                "hoverOpacity": 0.08,
                "selected": "rgba(0, 0, 0, 0.14)",
              },
              "augmentColor": [Function],
              "background": Object {
                "default": "#fafafa",
                "paper": "#fff",
              },
              "common": Object {
                "black": "#000",
                "white": "#fff",
              },
              "contrastThreshold": 3,
              "divider": "rgba(0, 0, 0, 0.12)",
              "error": Object {
                "contrastText": "#fff",
                "dark": "#d32f2f",
                "light": "#e57373",
                "main": "#f44336",
              },
              "getContrastText": [Function],
              "grey": Object {
                "100": "#f5f5f5",
                "200": "#eeeeee",
                "300": "#e0e0e0",
                "400": "#bdbdbd",
                "50": "#fafafa",
                "500": "#9e9e9e",
                "600": "#757575",
                "700": "#616161",
                "800": "#424242",
                "900": "#212121",
                "A100": "#d5d5d5",
                "A200": "#aaaaaa",
                "A400": "#303030",
                "A700": "#616161",
              },
              "primary": Object {
                "contrastText": "#fff",
                "dark": "#303f9f",
                "light": "#7986cb",
                "main": "#3f51b5",
              },
              "secondary": Object {
                "contrastText": "#fff",
                "dark": "#c51162",
                "light": "#ff4081",
                "main": "#f50057",
              },
              "text": Object {
                "disabled": "rgba(0, 0, 0, 0.38)",
                "hint": "rgba(0, 0, 0, 0.38)",
                "primary": "rgba(0, 0, 0, 0.87)",
                "secondary": "rgba(0, 0, 0, 0.54)",
              },
              "tonalOffset": 0.2,
              "type": "light",
            },
            "props": Object {},
            "shadows": Array [
              "none",
              "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
              "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
              "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
            ],
            "shape": Object {
              "borderRadius": 4,
            },
            "spacing": Object {
              "unit": 8,
            },
            "transitions": Object {
              "create": [Function],
              "duration": Object {
                "complex": 375,
                "enteringScreen": 225,
                "leavingScreen": 195,
                "short": 250,
                "shorter": 200,
                "shortest": 150,
                "standard": 300,
              },
              "easing": Object {
                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
              },
              "getAutoHeightDuration": [Function],
            },
            "typography": Object {
              "body1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "lineHeight": "1.46429em",
              },
              "body1Next": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 400,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.5,
              },
              "body2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "lineHeight": "1.71429em",
              },
              "body2Next": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "letterSpacing": "0.01071em",
                "lineHeight": 1.5,
              },
              "button": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "textTransform": "uppercase",
              },
              "buttonNext": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "letterSpacing": "0.02857em",
                "lineHeight": 1.75,
                "textTransform": "uppercase",
              },
              "caption": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 400,
                "lineHeight": "1.375em",
              },
              "captionNext": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 400,
                "letterSpacing": "0.03333em",
                "lineHeight": 1.66,
              },
              "display1": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.125rem",
                "fontWeight": 400,
                "lineHeight": "1.20588em",
              },
              "display2": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.8125rem",
                "fontWeight": 400,
                "lineHeight": "1.13333em",
                "marginLeft": "-.02em",
              },
              "display3": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3.5rem",
                "fontWeight": 400,
                "letterSpacing": "-.02em",
                "lineHeight": "1.30357em",
                "marginLeft": "-.02em",
              },
              "display4": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "7rem",
                "fontWeight": 300,
                "letterSpacing": "-.04em",
                "lineHeight": "1.14286em",
                "marginLeft": "-.04em",
              },
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": 14,
              "fontWeightLight": 300,
              "fontWeightMedium": 500,
              "fontWeightRegular": 400,
              "h1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "6rem",
                "fontWeight": 300,
                "letterSpacing": "-0.01562em",
                "lineHeight": 1,
              },
              "h2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3.75rem",
                "fontWeight": 300,
                "letterSpacing": "-0.00833em",
                "lineHeight": 1,
              },
              "h3": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3rem",
                "fontWeight": 400,
                "letterSpacing": "0em",
                "lineHeight": 1.04,
              },
              "h4": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.125rem",
                "fontWeight": 400,
                "letterSpacing": "0.00735em",
                "lineHeight": 1.17,
              },
              "h5": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.5rem",
                "fontWeight": 400,
                "letterSpacing": "0em",
                "lineHeight": 1.33,
              },
              "h6": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.25rem",
                "fontWeight": 500,
                "letterSpacing": "0.0075em",
                "lineHeight": 1.6,
              },
              "headline": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.5rem",
                "fontWeight": 400,
                "lineHeight": "1.35417em",
              },
              "overline": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 400,
                "letterSpacing": "0.08333em",
                "lineHeight": 2.66,
                "textTransform": "uppercase",
              },
              "pxToRem": [Function],
              "round": [Function],
              "subheading": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 400,
                "lineHeight": "1.5em",
              },
              "subtitle1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 400,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.75,
              },
              "subtitle2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "letterSpacing": "0.00714em",
                "lineHeight": 1.57,
              },
              "title": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.3125rem",
                "fontWeight": 500,
                "lineHeight": "1.16667em",
              },
              "useNextVariants": false,
            },
            "zIndex": Object {
              "appBar": 1100,
              "drawer": 1200,
              "mobileStepper": 1000,
              "modal": 1300,
              "snackbar": 1400,
              "tooltip": 1500,
            },
          }
        }
        variant="body1"
      >
        <div
          className="MuiTypography-root-1 MuiTypography-body1-10"
        >
          Use this interface to choose which graphing tools students will be able to use, and to define the correct answer
        </div>
      </Typography>
    </WithStyles(Typography)>
    <Tools
      classes={Object {}}
      hasErrors={false}
      onDefaultToolChange={[Function]}
      toggleToolBarTool={[Function]}
      toolbarTools={Array []}
    >
      <div>
        <div>
          <span>
            GRAPHING TOOLS
          </span>
        </div>
        <div />
      </div>
    </Tools>
    <div
      onClick={[Function]}
    >
      ADD ALTERNATE
    </div>
    <WithStyles(AlertDialog)
      open={false}
    >
      <AlertDialog
        classes={
          Object {
            "heading": "AlertDialog-heading-174",
            "subheading": "AlertDialog-subheading-175",
          }
        }
        onCloseText="CANCEL"
        onConfirmText="OK"
        open={false}
      >
        <WithStyles(Dialog)
          open={false}
        >
          <Dialog
            PaperComponent={[Function]}
            TransitionComponent={[Function]}
            classes={
              Object {
                "container": "MuiDialog-container-179",
                "paper": "MuiDialog-paper-180",
                "paperFullScreen": "MuiDialog-paperFullScreen-189",
                "paperFullWidth": "MuiDialog-paperFullWidth-188",
                "paperScrollBody": "MuiDialog-paperScrollBody-182",
                "paperScrollPaper": "MuiDialog-paperScrollPaper-181",
                "paperWidthLg": "MuiDialog-paperWidthLg-186",
                "paperWidthMd": "MuiDialog-paperWidthMd-185",
                "paperWidthSm": "MuiDialog-paperWidthSm-184",
                "paperWidthXl": "MuiDialog-paperWidthXl-187",
                "paperWidthXs": "MuiDialog-paperWidthXs-183",
                "root": "MuiDialog-root-176",
                "scrollBody": "MuiDialog-scrollBody-178",
                "scrollPaper": "MuiDialog-scrollPaper-177",
              }
            }
            disableBackdropClick={false}
            disableEscapeKeyDown={false}
            fullScreen={false}
            fullWidth={false}
            maxWidth="sm"
            open={false}
            scroll="paper"
            transitionDuration={
              Object {
                "enter": 225,
                "exit": 195,
              }
            }
          >
            <WithStyles(Modal)
              BackdropProps={
                Object {
                  "transitionDuration": Object {
                    "enter": 225,
                    "exit": 195,
                  },
                }
              }
              className="MuiDialog-root-176"
              closeAfterTransition={true}
              disableBackdropClick={false}
              disableEscapeKeyDown={false}
              open={false}
              role="dialog"
            >
              <Modal
                BackdropComponent={[Function]}
                BackdropProps={
                  Object {
                    "transitionDuration": Object {
                      "enter": 225,
                      "exit": 195,
                    },
                  }
                }
                className="MuiDialog-root-176"
                classes={
                  Object {
                    "hidden": "MuiModal-hidden-86",
                    "root": "MuiModal-root-85",
                  }
                }
                closeAfterTransition={true}
                disableAutoFocus={false}
                disableBackdropClick={false}
                disableEnforceFocus={false}
                disableEscapeKeyDown={false}
                disablePortal={false}
                disableRestoreFocus={false}
                hideBackdrop={false}
                keepMounted={false}
                manager={
                  ModalManager {
                    "data": Array [],
                    "handleContainerOverflow": true,
                    "hideSiblingNodes": true,
                    "modals": Array [],
                  }
                }
                open={false}
                role="dialog"
              />
            </WithStyles(Modal)>
          </Dialog>
        </WithStyles(Dialog)>
      </AlertDialog>
    </WithStyles(AlertDialog)>
  </div>
</CorrectResponse>
`;

exports[`Tools renders snapshot 1`] = `
<div>
  <div>
    <span>
      GRAPHING TOOLS
    </span>
  </div>
  <div />
</div>
`;
