// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Configure renders snapshot 1`] = `
<ConfigLayout
  settings={
    <Panel
      configuration={
        Object {
          "arrows": Object {
            "label": "Include arrows",
            "settings": false,
          },
          "authoring": Object {
            "enabled": false,
            "label": "Allow authoring",
            "settings": false,
          },
          "labels": Object {
            "enabled": true,
            "label": "Labels",
            "settings": false,
          },
          "padding": Object {
            "label": "Padding",
            "settings": false,
          },
          "prompt": Object {
            "label": "Item Stem",
            "settings": true,
          },
          "rationale": Object {
            "label": "Rationale",
            "settings": true,
          },
          "scoringType": Object {
            "label": "Scoring Type",
            "settings": true,
          },
          "studentInstructions": Object {
            "label": "Student Instructions",
            "settings": false,
          },
          "teacherInstructions": Object {
            "label": "Teacher Instructions",
            "settings": true,
          },
          "title": Object {
            "enabled": true,
            "label": "Graph Title",
            "settings": false,
          },
        }
      }
      groups={
        Object {
          "Item Type": Object {
            "arrows": false,
            "graph": undefined,
            "labels": false,
            "padding": false,
            "title.enabled": false,
          },
          "Properties": Object {
            "authoring.enabled": false,
            "promptEnabled": undefined,
            "rationaleEnabled": undefined,
            "scoringType": undefined,
            "studentInstructionsEnabled": false,
            "teacherInstructionsEnabled": undefined,
          },
        }
      }
      model={
        Object {
          "answers": Object {
            "correctAnswer": Object {
              "marks": Array [],
              "name": "Correct Answer",
            },
          },
          "arrows": true,
          "backgroundMarks": Array [],
          "domain": Object {
            "axisLabel": "x",
            "labelStep": 1,
            "max": 10,
            "min": -10,
            "padding": 0,
            "step": 1,
          },
          "graph": Object {
            "height": 480,
            "width": 480,
          },
          "labels": null,
          "padding": true,
          "prompt": "Here goes item stem!",
          "promptEnabled": true,
          "range": Object {
            "axisLabel": "y",
            "labelStep": 1.5,
            "max": 5,
            "min": -5,
            "padding": 0,
            "step": 0.5,
          },
          "rationale": "Rationale goes here!",
          "rationaleEnabled": true,
          "scoringType": "partial scoring",
          "studentInstructionsEnabled": true,
          "teacherInstructionsEnabled": true,
          "title": "",
          "toolbarTools": Array [
            "point",
            "circle",
            "polygon",
            "segment",
            "ray",
            "vector",
            "line",
            "sine",
            "parabola",
            "label",
          ],
        }
      }
    />
  }
>
  <div>
    <WithStyles(Typography)
      component="div"
      type="body1"
    >
      <span>
        This interaction asks a student to draw a line that meets specific criteria. The student will draw the line by clicking on two points on the graph.
      </span>
    </WithStyles(Typography)>
    <InputContainer
      label="Teacher Instructions"
    >
      <EditableHtml
        markup=""
        nonEmpty={false}
        onChange={[Function]}
      />
    </InputContainer>
    <InputContainer
      label="Item Stem"
    >
      <EditableHtml
        disableUnderline={true}
        markup="Here goes item stem!"
        nonEmpty={false}
        onChange={[Function]}
      />
    </InputContainer>
    <InputContainer
      label="Rationale"
    >
      <EditableHtml
        markup="Rationale goes here!"
        onChange={[Function]}
      />
    </InputContainer>
    <WithStyles(GraphingConfig)
      authoringEnabled={false}
      config={
        Object {
          "height": 480,
          "width": 480,
        }
      }
      model={
        Object {
          "answers": Object {
            "correctAnswer": Object {
              "marks": Array [],
              "name": "Correct Answer",
            },
          },
          "arrows": true,
          "backgroundMarks": Array [],
          "domain": Object {
            "axisLabel": "x",
            "labelStep": 1,
            "max": 10,
            "min": -10,
            "padding": 0,
            "step": 1,
          },
          "graph": Object {
            "height": 480,
            "width": 480,
          },
          "labels": null,
          "padding": true,
          "prompt": "Here goes item stem!",
          "promptEnabled": true,
          "range": Object {
            "axisLabel": "y",
            "labelStep": 1.5,
            "max": 5,
            "min": -5,
            "padding": 0,
            "step": 0.5,
          },
          "rationale": "Rationale goes here!",
          "rationaleEnabled": true,
          "scoringType": "partial scoring",
          "studentInstructionsEnabled": true,
          "teacherInstructionsEnabled": true,
          "title": "",
          "toolbarTools": Array [
            "point",
            "circle",
            "polygon",
            "segment",
            "ray",
            "vector",
            "line",
            "sine",
            "parabola",
            "label",
          ],
        }
      }
      tools={
        Array [
          Object {
            "Component": [Function],
            "type": "point",
          },
          Object {
            "Component": [Function],
            "type": "circle",
          },
          Object {
            "Component": [Function],
            "type": "polygon",
          },
          Object {
            "Component": [Function],
            "type": "segment",
          },
          Object {
            "Component": [Function],
            "type": "vector",
          },
          Object {
            "Component": [Function],
            "type": "ray",
          },
          Object {
            "Component": [Function],
            "type": "line",
          },
          Object {
            "Component": [Function],
            "type": "sine",
          },
          Object {
            "Component": [Function],
            "type": "parabola",
          },
        ]
      }
    />
    <WithStyles(CorrectResponse)
      config={
        Object {
          "height": 480,
          "width": 480,
        }
      }
      model={
        Object {
          "answers": Object {
            "correctAnswer": Object {
              "marks": Array [],
              "name": "Correct Answer",
            },
          },
          "arrows": true,
          "backgroundMarks": Array [],
          "domain": Object {
            "axisLabel": "x",
            "labelStep": 1,
            "max": 10,
            "min": -10,
            "padding": 0,
            "step": 1,
          },
          "graph": Object {
            "height": 480,
            "width": 480,
          },
          "labels": null,
          "padding": true,
          "prompt": "Here goes item stem!",
          "promptEnabled": true,
          "range": Object {
            "axisLabel": "y",
            "labelStep": 1.5,
            "max": 5,
            "min": -5,
            "padding": 0,
            "step": 0.5,
          },
          "rationale": "Rationale goes here!",
          "rationaleEnabled": true,
          "scoringType": "partial scoring",
          "studentInstructionsEnabled": true,
          "teacherInstructionsEnabled": true,
          "title": "",
          "toolbarTools": Array [
            "point",
            "circle",
            "polygon",
            "segment",
            "ray",
            "vector",
            "line",
            "sine",
            "parabola",
            "label",
          ],
        }
      }
      tools={
        Array [
          Object {
            "Component": [Function],
            "type": "point",
          },
          Object {
            "Component": [Function],
            "type": "circle",
          },
          Object {
            "Component": [Function],
            "type": "polygon",
          },
          Object {
            "Component": [Function],
            "type": "segment",
          },
          Object {
            "Component": [Function],
            "type": "vector",
          },
          Object {
            "Component": [Function],
            "type": "ray",
          },
          Object {
            "Component": [Function],
            "type": "line",
          },
          Object {
            "Component": [Function],
            "type": "sine",
          },
          Object {
            "Component": [Function],
            "type": "parabola",
          },
        ]
      }
    />
  </div>
</ConfigLayout>
`;

exports[`CorrectResponse renders snapshot 1`] = `
<div>
  Define Correct Response
  <div>
    GRAPHING TOOLS
    <div>
      <div
        className=""
        key="label"
        onClick={[Function]}
      >
        LABEL
      </div>
    </div>
  </div>
  <div>
    <div
      key="correct-response-graph-Correct Answer"
    >
      <p>
        Correct Answer
      </p>
      <GraphContainer
        backgroundMarks={Array []}
        currentTool={0}
        defaultTool={0}
        domain={
          Object {
            "axisLabel": "x",
            "labelStep": 1,
            "max": 10,
            "min": 20,
            "padding": 0,
            "step": 1,
          }
        }
        hideLabel={false}
        labels={null}
        marks={Array []}
        onChangeMarks={[Function]}
        range={
          Object {
            "axisLabel": "y",
            "labelStep": 1.5,
            "max": 5,
            "min": -5,
            "padding": 0,
            "step": 0.5,
          }
        }
        size={
          Object {
            "height": 480,
            "width": 480,
          }
        }
        title=""
        tools={Array []}
      />
    </div>
    <div
      onClick={[Function]}
    >
      ADD ALTERNATE
    </div>
  </div>
</div>
`;

exports[`GraphingConfig renders snapshot 1`] = `
<div>
  Define Graph Attributes
  <div>
    <div
      key="graph"
    >
      <WithStyles(Typography)
        component="div"
        type="body1"
      >
        <span>
          Use the tools below to set background shapes
        </span>
      </WithStyles(Typography)>
      <GraphContainer
        backgroundMarks={Array []}
        currentTool={0}
        defaultTool={0}
        domain={
          Object {
            "axisLabel": "x",
            "labelStep": 1,
            "max": 10,
            "min": -10,
            "padding": 0,
            "step": 1,
          }
        }
        key="graphing-config"
        labels={null}
        marks={Array []}
        onChangeMarks={[Function]}
        range={
          Object {
            "axisLabel": "y",
            "labelStep": 1.5,
            "max": 5,
            "min": -5,
            "padding": 0,
            "step": 0.5,
          }
        }
        size={
          Object {
            "height": 480,
            "width": 480,
          }
        }
        title=""
        tools={Array []}
      />
    </div>
  </div>
</div>
`;
