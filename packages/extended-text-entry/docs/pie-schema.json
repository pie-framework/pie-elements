{
  "description": "Model for the @pie-elements/extended-text-entry Interaction",
  "additionalProperties": false,
  "type": "object",
  "properties": {
    "dimensions": {
      "title": "Dimensions",
      "type": "object",
      "properties": {
        "width": {
          "description": "Width the editor should take. USE CSS-style definition.",
          "type": "string",
          "title": "width"
        },
        "height": {
          "description": "Height the editor should take. USE CSS-style definition.",
          "type": "string",
          "title": "height"
        }
      }
    },
    "equationEditor": {
      "description": "Indicates if equation editor is enabled",
      "enum": [
        "Grade 1 - 2",
        "Grade 3 - 5",
        "Grade 6 - 7",
        "Grade 8 - HS",
        "advanced-algebra",
        "geometry",
        "miscellaneous",
        "statistics"
      ],
      "type": "string",
      "title": "equationEditor"
    },
    "feedback": {
      "title": "DefaultFeedbackType",
      "type": "object",
      "properties": {
        "type": {
          "description": "Indicates the feedback type",
          "enum": [
            "default",
            "none"
          ],
          "type": "string",
          "title": "type"
        },
        "default": {
          "description": "Indicates the feedback value",
          "type": "string",
          "title": "default"
        }
      },
      "required": [
        "type"
      ]
    },
    "mathInput": {
      "description": "Whether a control to allow insertion of math forumulas should be displayed",
      "default": false,
      "type": "boolean",
      "title": "mathInput"
    },
    "spanishInput": {
      "description": "Whether a control to allow insertion of spanish characters should be displayed",
      "default": false,
      "type": "boolean",
      "title": "spanishInput"
    },
    "specialInput": {
      "description": "Whether a control to allow insertion of special characters should be displayed",
      "default": false,
      "type": "boolean",
      "title": "specialInput"
    },
    "multiple": {
      "description": "Indicates if multiple parts are enabled",
      "type": "boolean",
      "title": "multiple"
    },
    "prompt": {
      "description": "The question prompt",
      "type": "string",
      "title": "prompt"
    },
    "promptEnabled": {
      "description": "Indicates if the prompt is enabled",
      "type": "boolean",
      "title": "promptEnabled"
    },
    "studentInstructions": {
      "description": "Indicates student instructions",
      "type": "string",
      "title": "studentInstructions"
    },
    "teacherInstructions": {
      "description": "Indicates teacher instructions",
      "type": "string",
      "title": "teacherInstructions"
    },
    "feedbackEnabled": {
      "description": "Indicates if Feedback is enabled",
      "type": "boolean",
      "title": "feedbackEnabled"
    },
    "rationaleEnabled": {
      "description": "Indicates if Rationale are enabled",
      "type": "boolean",
      "title": "rationaleEnabled"
    },
    "spellCheckEnabled": {
      "description": "Indicates if spellcheck is enabled for the author. Default value is true",
      "type": "boolean",
      "title": "spellCheckEnabled"
    },
    "playerSpellCheckDisabled": {
      "description": "Indicates if spellcheck is disabled for the player. Default value is true",
      "type": "boolean",
      "title": "playerSpellCheckDisabled"
    },
    "studentInstructionsEnabled": {
      "description": "Indicates if Student Instructions are enabled",
      "type": "boolean",
      "title": "studentInstructionsEnabled"
    },
    "teacherInstructionsEnabled": {
      "description": "Indicates if Teacher Instructions are enabled",
      "type": "boolean",
      "title": "teacherInstructionsEnabled"
    },
    "toolbarEditorPosition": {
      "enum": [
        "bottom",
        "top"
      ],
      "type": "string",
      "title": "toolbarEditorPosition"
    },
    "predefinedAnnotations": {
      "description": "Indicates the predefined annotations for the annotation menu",
      "type": "array",
      "items": {
        "title": "PredefinedAnnotation",
        "type": "object",
        "properties": {
          "label": {
            "description": "Indicates the value displayed in the annotation button",
            "type": "string",
            "title": "label"
          },
          "text": {
            "description": "Indicates the annotation value",
            "type": "string",
            "title": "text"
          },
          "type": {
            "description": "Indicates the type of the annotation",
            "enum": [
              "negative",
              "positive"
            ],
            "type": "string",
            "title": "type"
          }
        },
        "required": [
          "label",
          "text",
          "type"
        ]
      },
      "title": "predefinedAnnotations"
    },
    "playersToolbarPosition": {
      "description": "Indicates the editor's toolbar position for the player, which can be 'bottom' or 'top'",
      "default": ": 'bottom'",
      "enum": [
        "bottom",
        "top"
      ],
      "type": "string",
      "title": "playersToolbarPosition"
    },
    "rubricEnabled": {
      "description": "Indicates if Rubric is enabled",
      "type": "boolean",
      "title": "rubricEnabled"
    },
    "id": {
      "description": "Identifier to identify the Pie Element in html markup, Must be unique within a pie item config.",
      "type": "string",
      "title": "id"
    },
    "element": {
      "description": "The html Element tag name",
      "type": "string",
      "title": "element"
    }
  },
  "required": [
    "dimensions",
    "element",
    "feedbackEnabled",
    "id",
    "playerSpellCheckDisabled",
    "rationaleEnabled",
    "rubricEnabled",
    "spellCheckEnabled",
    "studentInstructionsEnabled",
    "teacherInstructionsEnabled"
  ],
  "definitions": {
    "ConfigureProp": {
      "title": "ConfigureProp",
      "type": "object",
      "properties": {
        "settings": {
          "description": "Indicates if the item has to be displayed in the Settings Panel",
          "type": "boolean",
          "title": "settings"
        },
        "label": {
          "description": "Indicates the label for the item that has to be displayed in the Settings Panel",
          "type": "string",
          "title": "label"
        }
      }
    },
    "ConfigurePropWithEnabled": {
      "title": "ConfigurePropWithEnabled",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Indicates the value of the item if it affects config-ui\n(eg.: if item is a switch and displaying an input on the config-ui depends on the switch value: on/off)",
          "type": "boolean",
          "title": "enabled"
        },
        "settings": {
          "description": "Indicates if the item has to be displayed in the Settings Panel",
          "type": "boolean",
          "title": "settings"
        },
        "label": {
          "description": "Indicates the label for the item that has to be displayed in the Settings Panel",
          "type": "string",
          "title": "label"
        }
      }
    },
    "EditableHtmlPluginConfigureRequired": {
      "title": "EditableHtmlPluginConfigureRequired",
      "type": "object",
      "properties": {
        "inputConfiguration": {
          "title": "EditableHtmlConfigureProp",
          "type": "object",
          "properties": {
            "math": {
              "title": "EditableHtmlButtonConfigure",
              "type": "object",
              "properties": {
                "disabled": {
                  "description": "Indicates if the plugin is disabled or not",
                  "type": "boolean",
                  "title": "disabled"
                }
              }
            },
            "audio": {
              "title": "EditableHtmlButtonConfigure",
              "type": "object",
              "properties": {
                "disabled": {
                  "description": "Indicates if the plugin is disabled or not",
                  "type": "boolean",
                  "title": "disabled"
                }
              }
            },
            "video": {
              "title": "EditableHtmlButtonConfigure",
              "type": "object",
              "properties": {
                "disabled": {
                  "description": "Indicates if the plugin is disabled or not",
                  "type": "boolean",
                  "title": "disabled"
                }
              }
            },
            "image": {
              "title": "EditableHtmlButtonConfigure",
              "type": "object",
              "properties": {
                "disabled": {
                  "description": "Indicates if the plugin is disabled or not",
                  "type": "boolean",
                  "title": "disabled"
                }
              }
            },
            "customPlugins": {
              "description": "An array of objects that determine custom plugins.\nA custom plugin is an object which determines how the button will look like (icon) and the event name that will be triggered when button gets pressed (event).\nExample can be found at https://github.com/pie-framework/pie-lib/blob/develop/packages/demo/pages/editable-html.js#L425.",
              "type": "array",
              "items": {
                "title": "CustomPlugin",
                "type": "object",
                "properties": {
                  "event": {
                    "description": "The name of the custom event. It needs to be valid (only letters, numbers and \"_\" can be used).\nPIE will emit the event prefixed with \"PIE-\".\nEg: event = 'client_custom_event_A' => the emitted event will be \"PIE-client_custom_event_A\"",
                    "type": "string",
                    "title": "event"
                  },
                  "iconAlt": {
                    "description": "The alt for the custom button icon",
                    "type": "string",
                    "title": "iconAlt"
                  },
                  "iconType": {
                    "description": "The icon type.\nCurrently, only \"SVG\" is supported.",
                    "type": "string",
                    "title": "iconType"
                  },
                  "icon": {
                    "description": "The icon string. Currently, only \"SVG\" is supported, so it needs to be a valid svg.",
                    "type": "string",
                    "title": "icon"
                  }
                },
                "required": [
                  "event",
                  "icon",
                  "iconAlt",
                  "iconType"
                ]
              },
              "title": "customPlugins"
            }
          }
        },
        "required": {
          "description": "Indicates if the item is required and the value cannot be empty",
          "type": "boolean",
          "title": "required"
        },
        "settings": {
          "description": "Indicates if the item has to be displayed in the Settings Panel",
          "type": "boolean",
          "title": "settings"
        },
        "label": {
          "description": "Indicates the label for the item that has to be displayed in the Settings Panel",
          "type": "string",
          "title": "label"
        }
      }
    },
    "EditableHtmlConfigureProp": {
      "title": "EditableHtmlConfigureProp",
      "type": "object",
      "properties": {
        "math": {
          "title": "EditableHtmlButtonConfigure",
          "type": "object",
          "properties": {
            "disabled": {
              "description": "Indicates if the plugin is disabled or not",
              "type": "boolean",
              "title": "disabled"
            }
          }
        },
        "audio": {
          "title": "EditableHtmlButtonConfigure",
          "type": "object",
          "properties": {
            "disabled": {
              "description": "Indicates if the plugin is disabled or not",
              "type": "boolean",
              "title": "disabled"
            }
          }
        },
        "video": {
          "title": "EditableHtmlButtonConfigure",
          "type": "object",
          "properties": {
            "disabled": {
              "description": "Indicates if the plugin is disabled or not",
              "type": "boolean",
              "title": "disabled"
            }
          }
        },
        "image": {
          "title": "EditableHtmlButtonConfigure",
          "type": "object",
          "properties": {
            "disabled": {
              "description": "Indicates if the plugin is disabled or not",
              "type": "boolean",
              "title": "disabled"
            }
          }
        },
        "customPlugins": {
          "description": "An array of objects that determine custom plugins.\nA custom plugin is an object which determines how the button will look like (icon) and the event name that will be triggered when button gets pressed (event).\nExample can be found at https://github.com/pie-framework/pie-lib/blob/develop/packages/demo/pages/editable-html.js#L425.",
          "type": "array",
          "items": {
            "title": "CustomPlugin",
            "type": "object",
            "properties": {
              "event": {
                "description": "The name of the custom event. It needs to be valid (only letters, numbers and \"_\" can be used).\nPIE will emit the event prefixed with \"PIE-\".\nEg: event = 'client_custom_event_A' => the emitted event will be \"PIE-client_custom_event_A\"",
                "type": "string",
                "title": "event"
              },
              "iconAlt": {
                "description": "The alt for the custom button icon",
                "type": "string",
                "title": "iconAlt"
              },
              "iconType": {
                "description": "The icon type.\nCurrently, only \"SVG\" is supported.",
                "type": "string",
                "title": "iconType"
              },
              "icon": {
                "description": "The icon string. Currently, only \"SVG\" is supported, so it needs to be a valid svg.",
                "type": "string",
                "title": "icon"
              }
            },
            "required": [
              "event",
              "icon",
              "iconAlt",
              "iconType"
            ]
          },
          "title": "customPlugins"
        }
      }
    },
    "EditableHtmlButtonConfigure": {
      "title": "EditableHtmlButtonConfigure",
      "type": "object",
      "properties": {
        "disabled": {
          "description": "Indicates if the plugin is disabled or not",
          "type": "boolean",
          "title": "disabled"
        }
      }
    },
    "CustomPlugin": {
      "title": "CustomPlugin",
      "type": "object",
      "properties": {
        "event": {
          "description": "The name of the custom event. It needs to be valid (only letters, numbers and \"_\" can be used).\nPIE will emit the event prefixed with \"PIE-\".\nEg: event = 'client_custom_event_A' => the emitted event will be \"PIE-client_custom_event_A\"",
          "type": "string",
          "title": "event"
        },
        "iconAlt": {
          "description": "The alt for the custom button icon",
          "type": "string",
          "title": "iconAlt"
        },
        "iconType": {
          "description": "The icon type.\nCurrently, only \"SVG\" is supported.",
          "type": "string",
          "title": "iconType"
        },
        "icon": {
          "description": "The icon string. Currently, only \"SVG\" is supported, so it needs to be a valid svg.",
          "type": "string",
          "title": "icon"
        }
      },
      "required": [
        "event",
        "icon",
        "iconAlt",
        "iconType"
      ]
    },
    "ConfigureMaxImageDimensionsProp": {
      "title": "ConfigureMaxImageDimensionsProp",
      "type": "object",
      "properties": {
        "teacherInstructions": {
          "description": "Indicates the max dimension for images in teacher instructions",
          "type": "number",
          "title": "teacherInstructions"
        },
        "prompt": {
          "description": "Indicates the max dimension for images in prompt - this is also the default dimension for all other input fields if it's not specified",
          "type": "number",
          "title": "prompt"
        },
        "rationale": {
          "description": "Indicates the max dimension for images in rationale",
          "type": "number",
          "title": "rationale"
        }
      }
    },
    "ConfigureWithForceProp": {
      "title": "ConfigureWithForceProp",
      "type": "object",
      "properties": {
        "forceEnabled": {
          "description": "Indicates the value for the toggle;\nif true:\n- this property will not be visible in Settings Panel (settings will become automatically false)\n- the model property afferent to it will become automatically false",
          "type": "boolean",
          "title": "forceEnabled"
        },
        "settings": {
          "description": "Indicates if the item has to be displayed in the Settings Panel",
          "type": "boolean",
          "title": "settings"
        },
        "label": {
          "description": "Indicates the label for the item that has to be displayed in the Settings Panel",
          "type": "string",
          "title": "label"
        }
      }
    },
    "ConfigureMathMLProp": {
      "title": "ConfigureMathMLProp",
      "type": "object",
      "properties": {
        "mmlOutput": {
          "description": "Indicates if model should have mathML output instead of latex",
          "type": "number",
          "title": "mmlOutput"
        },
        "mmlEditing": {
          "description": "Indicates if mathML that's already in model should be editable",
          "type": "number",
          "title": "mmlEditing"
        }
      }
    },
    "Dimensions": {
      "title": "Dimensions",
      "type": "object",
      "properties": {
        "width": {
          "description": "Width the editor should take. USE CSS-style definition.",
          "type": "string",
          "title": "width"
        },
        "height": {
          "description": "Height the editor should take. USE CSS-style definition.",
          "type": "string",
          "title": "height"
        }
      }
    },
    "DefaultFeedbackType": {
      "title": "DefaultFeedbackType",
      "type": "object",
      "properties": {
        "type": {
          "description": "Indicates the feedback type",
          "enum": [
            "default",
            "none"
          ],
          "type": "string",
          "title": "type"
        },
        "default": {
          "description": "Indicates the feedback value",
          "type": "string",
          "title": "default"
        }
      },
      "required": [
        "type"
      ]
    },
    "PredefinedAnnotation": {
      "title": "PredefinedAnnotation",
      "type": "object",
      "properties": {
        "label": {
          "description": "Indicates the value displayed in the annotation button",
          "type": "string",
          "title": "label"
        },
        "text": {
          "description": "Indicates the annotation value",
          "type": "string",
          "title": "text"
        },
        "type": {
          "description": "Indicates the type of the annotation",
          "enum": [
            "negative",
            "positive"
          ],
          "type": "string",
          "title": "type"
        }
      },
      "required": [
        "label",
        "text",
        "type"
      ]
    }
  },
  "$schema": "http://json-schema.org/draft-07/schema#"
}