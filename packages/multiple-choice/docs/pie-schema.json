{
  "description": "Model for the Choice Interaction",
  "additionalProperties": false,
  "type": "object",
  "properties": {
    "choiceMode": {
      "description": "Indicates the choices are single or multiple selection",
      "enum": [
        "checkbox",
        "radio"
      ],
      "type": "string",
      "title": "choiceMode"
    },
    "choicePrefix": {
      "description": "What key should be displayed before choices. If undefined no  key will be displayed.",
      "default": ": 'letters'",
      "enum": [
        "letters",
        "numbers"
      ],
      "type": "string",
      "title": "choicePrefix"
    },
    "choices": {
      "description": "The choice options for the question",
      "type": "array",
      "items": {
        "title": "Choice",
        "type": "object",
        "properties": {
          "correct": {
            "description": "Indicates if the choice is correct",
            "type": "boolean",
            "title": "correct"
          },
          "value": {
            "description": "the value that will be stored if this choice is selected",
            "type": "string",
            "title": "value"
          },
          "label": {
            "description": "the text label that will be presented to the user for this choice",
            "type": "string",
            "title": "label"
          },
          "feedback": {
            "description": "The type of feedback to use:\n   `default` = a standard feedback message\n   `custom` = a customized feedback message",
            "title": "Feedback",
            "type": "object",
            "properties": {
              "type": {
                "default": "default",
                "enum": [
                  "custom",
                  "default",
                  "none"
                ],
                "type": "string",
                "title": "type"
              },
              "value": {
                "description": "Value for feedback",
                "type": "string",
                "title": "value"
              },
              "custom": {
                "description": "Custom value for feedback",
                "type": "string",
                "title": "custom"
              }
            },
            "required": [
              "type"
            ]
          },
          "rationale": {
            "description": "Rationale for the Choice",
            "type": "string",
            "title": "rationale"
          }
        },
        "required": [
          "label",
          "value"
        ]
      },
      "title": "choices"
    },
    "prompt": {
      "description": "The question prompt or item stem",
      "type": "string",
      "title": "prompt"
    },
    "promptEnabled": {
      "description": "Determines if prompt should show",
      "type": "boolean",
      "title": "promptEnabled"
    },
    "choicesLayout": {
      "description": "Indicates the layout of choices for player",
      "default": ": 'vertical'",
      "enum": [
        "grid",
        "horizontal",
        "vertical"
      ],
      "type": "string",
      "title": "choicesLayout"
    },
    "gridColumns": {
      "description": "Indicates the number of columns for the grid layout",
      "default": ": 2",
      "type": "number",
      "title": "gridColumns"
    },
    "toolbarEditorPosition": {
      "description": "Indicates the editor's toolbar position which can be 'bottom' or 'top'",
      "default": ": 'bottom'",
      "enum": [
        "bottom",
        "top"
      ],
      "type": "string",
      "title": "toolbarEditorPosition"
    },
    "selectedAnswerBackgroundColor": {
      "description": "Indicates the background color for selected choices",
      "default": ": 'initial'",
      "type": "string",
      "title": "selectedAnswerBackgroundColor"
    },
    "lockChoiceOrder": {
      "description": "Indicates the order of choices presented to user\nif true, answer choices will be presented in the order they are defined in the model\nIf false, answer choices may be presented in a random order (depending upon the value of the lockChoiceOrder environment variable)",
      "type": "boolean",
      "title": "lockChoiceOrder"
    },
    "minSelections": {
      "description": "Indicates that minimum selections that should be made (only for choice mode 'checkbox')",
      "type": "number",
      "title": "minSelections"
    },
    "maxSelections": {
      "description": "Indicates that maximum selections that should be made (only for choice mode 'checkbox')",
      "type": "number",
      "title": "maxSelections"
    },
    "partialScoring": {
      "description": "Indicates that the item should use partial scoring",
      "type": "boolean",
      "title": "partialScoring"
    },
    "scoringType": {
      "description": "Indicates scoring type",
      "enum": [
        "auto",
        "rubric"
      ],
      "type": "string",
      "title": "scoringType"
    },
    "studentInstructions": {
      "description": "Indicates student instructions",
      "type": "string",
      "title": "studentInstructions"
    },
    "teacherInstructions": {
      "description": "Indicates teacher instructions",
      "type": "string",
      "title": "teacherInstructions"
    },
    "feedbackEnabled": {
      "description": "Indicates if feedback is enabled",
      "type": "boolean",
      "title": "feedbackEnabled"
    },
    "rationaleEnabled": {
      "description": "Indicates if Rationale are enabled",
      "type": "boolean",
      "title": "rationaleEnabled"
    },
    "spellCheckEnabled": {
      "description": "Indicates if spellcheck is enabled for the author. Default value is true",
      "type": "boolean",
      "title": "spellCheckEnabled"
    },
    "studentInstructionsEnabled": {
      "description": "Indicates if Student Instructions are enabled",
      "type": "boolean",
      "title": "studentInstructionsEnabled"
    },
    "teacherInstructionsEnabled": {
      "description": "Indicates if Teacher Instructions are enabled",
      "type": "boolean",
      "title": "teacherInstructionsEnabled"
    },
    "accessibilityLabelsEnabled": {
      "description": "Indicates if Accessibility Labels are enabled",
      "type": "boolean",
      "title": "accessibilityLabelsEnabled"
    },
    "rubricEnabled": {
      "description": "Indicates if Rubric is enabled",
      "type": "boolean",
      "title": "rubricEnabled"
    },
    "language": {
      "description": "Indicates the language of the component\nSupported options: en, es, en_US, en-US, es_ES, es-ES, es_MX, es-MX",
      "type": "string",
      "title": "language"
    },
    "isSelectionButtonBelow": {
      "description": "Indicates if the selection button and choice prefix should be positioned below the corresponding answer choice",
      "type": "boolean",
      "title": "isSelectionButtonBelow"
    },
    "fontSizeFactor": {
      "description": "Indicates font size adjustment factor",
      "type": "number",
      "title": "fontSizeFactor"
    },
    "autoplayAudioEnabled": {
      "description": "Indicates if the audio for the prompt should autoplay",
      "type": "boolean",
      "title": "autoplayAudioEnabled"
    },
    "completeAudioEnabled": {
      "description": "Indicates if the audio should reach the end before the item can be marked as 'complete'",
      "type": "boolean",
      "title": "completeAudioEnabled"
    },
    "customAudioButton": {
      "description": "Indicates if the audio should be replaced with a custom audio button\n  playImage: image url for the play state\n  pauseImage: image url for the pause state",
      "type": "object",
      "properties": {
        "playImage": {
          "type": "string",
          "title": "playImage"
        },
        "pauseImage": {
          "type": "string",
          "title": "pauseImage"
        }
      },
      "required": [
        "pauseImage",
        "playImage"
      ],
      "title": "customAudioButton"
    },
    "id": {
      "description": "Identifier to identify the Pie Element in html markup, Must be unique within a pie item config.",
      "type": "string",
      "title": "id"
    },
    "element": {
      "description": "The html Element tag name",
      "type": "string",
      "title": "element"
    }
  },
  "required": [
    "accessibilityLabelsEnabled",
    "choices",
    "element",
    "feedbackEnabled",
    "id",
    "rationaleEnabled",
    "rubricEnabled",
    "spellCheckEnabled",
    "studentInstructionsEnabled",
    "teacherInstructionsEnabled"
  ],
  "definitions": {
    "ConfigureProp": {
      "title": "ConfigureProp",
      "type": "object",
      "properties": {
        "settings": {
          "description": "Indicates if the item has to be displayed in the Settings Panel",
          "type": "boolean",
          "title": "settings"
        },
        "label": {
          "description": "Indicates the label for the item that has to be displayed in the Settings Panel",
          "type": "string",
          "title": "label"
        }
      }
    },
    "EditableHtmlConfigureProp": {
      "title": "EditableHtmlConfigureProp",
      "type": "object",
      "properties": {
        "math": {
          "title": "EditableHtmlButtonConfigure",
          "type": "object",
          "properties": {
            "disabled": {
              "description": "Indicates if the plugin is disabled or not",
              "type": "boolean",
              "title": "disabled"
            }
          }
        },
        "audio": {
          "title": "EditableHtmlButtonConfigure",
          "type": "object",
          "properties": {
            "disabled": {
              "description": "Indicates if the plugin is disabled or not",
              "type": "boolean",
              "title": "disabled"
            }
          }
        },
        "video": {
          "title": "EditableHtmlButtonConfigure",
          "type": "object",
          "properties": {
            "disabled": {
              "description": "Indicates if the plugin is disabled or not",
              "type": "boolean",
              "title": "disabled"
            }
          }
        },
        "image": {
          "title": "EditableHtmlButtonConfigure",
          "type": "object",
          "properties": {
            "disabled": {
              "description": "Indicates if the plugin is disabled or not",
              "type": "boolean",
              "title": "disabled"
            }
          }
        },
        "customPlugins": {
          "description": "An array of objects that determine custom plugins.\nA custom plugin is an object which determines how the button will look like (icon) and the event name that will be triggered when button gets pressed (event).\nExample can be found at https://github.com/pie-framework/pie-lib/blob/develop/packages/demo/pages/editable-html.js#L425.",
          "type": "array",
          "items": {
            "title": "CustomPlugin",
            "type": "object",
            "properties": {
              "event": {
                "description": "The name of the custom event. It needs to be valid (only letters, numbers and \"_\" can be used).\nPIE will emit the event prefixed with \"PIE-\".\nEg: event = 'client_custom_event_A' => the emitted event will be \"PIE-client_custom_event_A\"",
                "type": "string",
                "title": "event"
              },
              "iconAlt": {
                "description": "The alt for the custom button icon",
                "type": "string",
                "title": "iconAlt"
              },
              "iconType": {
                "description": "The icon type.\nCurrently, only \"SVG\" is supported.",
                "type": "string",
                "title": "iconType"
              },
              "icon": {
                "description": "The icon string. Currently, only \"SVG\" is supported, so it needs to be a valid svg.",
                "type": "string",
                "title": "icon"
              }
            },
            "required": [
              "event",
              "icon",
              "iconAlt",
              "iconType"
            ]
          },
          "title": "customPlugins"
        },
        "blockquote": {
          "title": "EditableHtmlButtonConfigure",
          "type": "object",
          "properties": {
            "disabled": {
              "description": "Indicates if the plugin is disabled or not",
              "type": "boolean",
              "title": "disabled"
            }
          }
        },
        "h3": {
          "title": "EditableHtmlButtonConfigure",
          "type": "object",
          "properties": {
            "disabled": {
              "description": "Indicates if the plugin is disabled or not",
              "type": "boolean",
              "title": "disabled"
            }
          }
        },
        "characters": {
          "title": "EditableHtmlButtonConfigure",
          "type": "object",
          "properties": {
            "disabled": {
              "description": "Indicates if the plugin is disabled or not",
              "type": "boolean",
              "title": "disabled"
            }
          }
        },
        "bold": {
          "title": "EditableHtmlButtonConfigure",
          "type": "object",
          "properties": {
            "disabled": {
              "description": "Indicates if the plugin is disabled or not",
              "type": "boolean",
              "title": "disabled"
            }
          }
        },
        "html": {
          "title": "EditableHtmlButtonConfigure",
          "type": "object",
          "properties": {
            "disabled": {
              "description": "Indicates if the plugin is disabled or not",
              "type": "boolean",
              "title": "disabled"
            }
          }
        },
        "italic": {
          "title": "EditableHtmlButtonConfigure",
          "type": "object",
          "properties": {
            "disabled": {
              "description": "Indicates if the plugin is disabled or not",
              "type": "boolean",
              "title": "disabled"
            }
          }
        },
        "ol_list": {
          "title": "EditableHtmlButtonConfigure",
          "type": "object",
          "properties": {
            "disabled": {
              "description": "Indicates if the plugin is disabled or not",
              "type": "boolean",
              "title": "disabled"
            }
          }
        },
        "redo": {
          "title": "EditableHtmlButtonConfigure",
          "type": "object",
          "properties": {
            "disabled": {
              "description": "Indicates if the plugin is disabled or not",
              "type": "boolean",
              "title": "disabled"
            }
          }
        },
        "strikethrough": {
          "title": "EditableHtmlButtonConfigure",
          "type": "object",
          "properties": {
            "disabled": {
              "description": "Indicates if the plugin is disabled or not",
              "type": "boolean",
              "title": "disabled"
            }
          }
        },
        "sub": {
          "title": "EditableHtmlButtonConfigure",
          "type": "object",
          "properties": {
            "disabled": {
              "description": "Indicates if the plugin is disabled or not",
              "type": "boolean",
              "title": "disabled"
            }
          }
        },
        "sup": {
          "title": "EditableHtmlButtonConfigure",
          "type": "object",
          "properties": {
            "disabled": {
              "description": "Indicates if the plugin is disabled or not",
              "type": "boolean",
              "title": "disabled"
            }
          }
        },
        "table": {
          "title": "EditableHtmlButtonConfigure",
          "type": "object",
          "properties": {
            "disabled": {
              "description": "Indicates if the plugin is disabled or not",
              "type": "boolean",
              "title": "disabled"
            }
          }
        },
        "ul_list": {
          "title": "EditableHtmlButtonConfigure",
          "type": "object",
          "properties": {
            "disabled": {
              "description": "Indicates if the plugin is disabled or not",
              "type": "boolean",
              "title": "disabled"
            }
          }
        },
        "underline": {
          "title": "EditableHtmlButtonConfigure",
          "type": "object",
          "properties": {
            "disabled": {
              "description": "Indicates if the plugin is disabled or not",
              "type": "boolean",
              "title": "disabled"
            }
          }
        },
        "undo": {
          "title": "EditableHtmlButtonConfigure",
          "type": "object",
          "properties": {
            "disabled": {
              "description": "Indicates if the plugin is disabled or not",
              "type": "boolean",
              "title": "disabled"
            }
          }
        }
      }
    },
    "EditableHtmlButtonConfigure": {
      "title": "EditableHtmlButtonConfigure",
      "type": "object",
      "properties": {
        "disabled": {
          "description": "Indicates if the plugin is disabled or not",
          "type": "boolean",
          "title": "disabled"
        }
      }
    },
    "CustomPlugin": {
      "title": "CustomPlugin",
      "type": "object",
      "properties": {
        "event": {
          "description": "The name of the custom event. It needs to be valid (only letters, numbers and \"_\" can be used).\nPIE will emit the event prefixed with \"PIE-\".\nEg: event = 'client_custom_event_A' => the emitted event will be \"PIE-client_custom_event_A\"",
          "type": "string",
          "title": "event"
        },
        "iconAlt": {
          "description": "The alt for the custom button icon",
          "type": "string",
          "title": "iconAlt"
        },
        "iconType": {
          "description": "The icon type.\nCurrently, only \"SVG\" is supported.",
          "type": "string",
          "title": "iconType"
        },
        "icon": {
          "description": "The icon string. Currently, only \"SVG\" is supported, so it needs to be a valid svg.",
          "type": "string",
          "title": "icon"
        }
      },
      "required": [
        "event",
        "icon",
        "iconAlt",
        "iconType"
      ]
    },
    "EditableHtmlPluginConfigure": {
      "title": "EditableHtmlPluginConfigure",
      "type": "object",
      "properties": {
        "inputConfiguration": {
          "title": "EditableHtmlConfigureProp",
          "type": "object",
          "properties": {
            "math": {
              "title": "EditableHtmlButtonConfigure",
              "type": "object",
              "properties": {
                "disabled": {
                  "description": "Indicates if the plugin is disabled or not",
                  "type": "boolean",
                  "title": "disabled"
                }
              }
            },
            "audio": {
              "title": "EditableHtmlButtonConfigure",
              "type": "object",
              "properties": {
                "disabled": {
                  "description": "Indicates if the plugin is disabled or not",
                  "type": "boolean",
                  "title": "disabled"
                }
              }
            },
            "video": {
              "title": "EditableHtmlButtonConfigure",
              "type": "object",
              "properties": {
                "disabled": {
                  "description": "Indicates if the plugin is disabled or not",
                  "type": "boolean",
                  "title": "disabled"
                }
              }
            },
            "image": {
              "title": "EditableHtmlButtonConfigure",
              "type": "object",
              "properties": {
                "disabled": {
                  "description": "Indicates if the plugin is disabled or not",
                  "type": "boolean",
                  "title": "disabled"
                }
              }
            },
            "customPlugins": {
              "description": "An array of objects that determine custom plugins.\nA custom plugin is an object which determines how the button will look like (icon) and the event name that will be triggered when button gets pressed (event).\nExample can be found at https://github.com/pie-framework/pie-lib/blob/develop/packages/demo/pages/editable-html.js#L425.",
              "type": "array",
              "items": {
                "title": "CustomPlugin",
                "type": "object",
                "properties": {
                  "event": {
                    "description": "The name of the custom event. It needs to be valid (only letters, numbers and \"_\" can be used).\nPIE will emit the event prefixed with \"PIE-\".\nEg: event = 'client_custom_event_A' => the emitted event will be \"PIE-client_custom_event_A\"",
                    "type": "string",
                    "title": "event"
                  },
                  "iconAlt": {
                    "description": "The alt for the custom button icon",
                    "type": "string",
                    "title": "iconAlt"
                  },
                  "iconType": {
                    "description": "The icon type.\nCurrently, only \"SVG\" is supported.",
                    "type": "string",
                    "title": "iconType"
                  },
                  "icon": {
                    "description": "The icon string. Currently, only \"SVG\" is supported, so it needs to be a valid svg.",
                    "type": "string",
                    "title": "icon"
                  }
                },
                "required": [
                  "event",
                  "icon",
                  "iconAlt",
                  "iconType"
                ]
              },
              "title": "customPlugins"
            },
            "blockquote": {
              "title": "EditableHtmlButtonConfigure",
              "type": "object",
              "properties": {
                "disabled": {
                  "description": "Indicates if the plugin is disabled or not",
                  "type": "boolean",
                  "title": "disabled"
                }
              }
            },
            "h3": {
              "title": "EditableHtmlButtonConfigure",
              "type": "object",
              "properties": {
                "disabled": {
                  "description": "Indicates if the plugin is disabled or not",
                  "type": "boolean",
                  "title": "disabled"
                }
              }
            },
            "characters": {
              "title": "EditableHtmlButtonConfigure",
              "type": "object",
              "properties": {
                "disabled": {
                  "description": "Indicates if the plugin is disabled or not",
                  "type": "boolean",
                  "title": "disabled"
                }
              }
            },
            "bold": {
              "title": "EditableHtmlButtonConfigure",
              "type": "object",
              "properties": {
                "disabled": {
                  "description": "Indicates if the plugin is disabled or not",
                  "type": "boolean",
                  "title": "disabled"
                }
              }
            },
            "html": {
              "title": "EditableHtmlButtonConfigure",
              "type": "object",
              "properties": {
                "disabled": {
                  "description": "Indicates if the plugin is disabled or not",
                  "type": "boolean",
                  "title": "disabled"
                }
              }
            },
            "italic": {
              "title": "EditableHtmlButtonConfigure",
              "type": "object",
              "properties": {
                "disabled": {
                  "description": "Indicates if the plugin is disabled or not",
                  "type": "boolean",
                  "title": "disabled"
                }
              }
            },
            "ol_list": {
              "title": "EditableHtmlButtonConfigure",
              "type": "object",
              "properties": {
                "disabled": {
                  "description": "Indicates if the plugin is disabled or not",
                  "type": "boolean",
                  "title": "disabled"
                }
              }
            },
            "redo": {
              "title": "EditableHtmlButtonConfigure",
              "type": "object",
              "properties": {
                "disabled": {
                  "description": "Indicates if the plugin is disabled or not",
                  "type": "boolean",
                  "title": "disabled"
                }
              }
            },
            "strikethrough": {
              "title": "EditableHtmlButtonConfigure",
              "type": "object",
              "properties": {
                "disabled": {
                  "description": "Indicates if the plugin is disabled or not",
                  "type": "boolean",
                  "title": "disabled"
                }
              }
            },
            "sub": {
              "title": "EditableHtmlButtonConfigure",
              "type": "object",
              "properties": {
                "disabled": {
                  "description": "Indicates if the plugin is disabled or not",
                  "type": "boolean",
                  "title": "disabled"
                }
              }
            },
            "sup": {
              "title": "EditableHtmlButtonConfigure",
              "type": "object",
              "properties": {
                "disabled": {
                  "description": "Indicates if the plugin is disabled or not",
                  "type": "boolean",
                  "title": "disabled"
                }
              }
            },
            "table": {
              "title": "EditableHtmlButtonConfigure",
              "type": "object",
              "properties": {
                "disabled": {
                  "description": "Indicates if the plugin is disabled or not",
                  "type": "boolean",
                  "title": "disabled"
                }
              }
            },
            "ul_list": {
              "title": "EditableHtmlButtonConfigure",
              "type": "object",
              "properties": {
                "disabled": {
                  "description": "Indicates if the plugin is disabled or not",
                  "type": "boolean",
                  "title": "disabled"
                }
              }
            },
            "underline": {
              "title": "EditableHtmlButtonConfigure",
              "type": "object",
              "properties": {
                "disabled": {
                  "description": "Indicates if the plugin is disabled or not",
                  "type": "boolean",
                  "title": "disabled"
                }
              }
            },
            "undo": {
              "title": "EditableHtmlButtonConfigure",
              "type": "object",
              "properties": {
                "disabled": {
                  "description": "Indicates if the plugin is disabled or not",
                  "type": "boolean",
                  "title": "disabled"
                }
              }
            }
          }
        },
        "settings": {
          "description": "Indicates if the item has to be displayed in the Settings Panel",
          "type": "boolean",
          "title": "settings"
        },
        "label": {
          "description": "Indicates the label for the item that has to be displayed in the Settings Panel",
          "type": "string",
          "title": "label"
        }
      }
    },
    "EditableHtmlPluginConfigureRequired": {
      "title": "EditableHtmlPluginConfigureRequired",
      "type": "object",
      "properties": {
        "inputConfiguration": {
          "title": "EditableHtmlConfigureProp",
          "type": "object",
          "properties": {
            "math": {
              "title": "EditableHtmlButtonConfigure",
              "type": "object",
              "properties": {
                "disabled": {
                  "description": "Indicates if the plugin is disabled or not",
                  "type": "boolean",
                  "title": "disabled"
                }
              }
            },
            "audio": {
              "title": "EditableHtmlButtonConfigure",
              "type": "object",
              "properties": {
                "disabled": {
                  "description": "Indicates if the plugin is disabled or not",
                  "type": "boolean",
                  "title": "disabled"
                }
              }
            },
            "video": {
              "title": "EditableHtmlButtonConfigure",
              "type": "object",
              "properties": {
                "disabled": {
                  "description": "Indicates if the plugin is disabled or not",
                  "type": "boolean",
                  "title": "disabled"
                }
              }
            },
            "image": {
              "title": "EditableHtmlButtonConfigure",
              "type": "object",
              "properties": {
                "disabled": {
                  "description": "Indicates if the plugin is disabled or not",
                  "type": "boolean",
                  "title": "disabled"
                }
              }
            },
            "customPlugins": {
              "description": "An array of objects that determine custom plugins.\nA custom plugin is an object which determines how the button will look like (icon) and the event name that will be triggered when button gets pressed (event).\nExample can be found at https://github.com/pie-framework/pie-lib/blob/develop/packages/demo/pages/editable-html.js#L425.",
              "type": "array",
              "items": {
                "title": "CustomPlugin",
                "type": "object",
                "properties": {
                  "event": {
                    "description": "The name of the custom event. It needs to be valid (only letters, numbers and \"_\" can be used).\nPIE will emit the event prefixed with \"PIE-\".\nEg: event = 'client_custom_event_A' => the emitted event will be \"PIE-client_custom_event_A\"",
                    "type": "string",
                    "title": "event"
                  },
                  "iconAlt": {
                    "description": "The alt for the custom button icon",
                    "type": "string",
                    "title": "iconAlt"
                  },
                  "iconType": {
                    "description": "The icon type.\nCurrently, only \"SVG\" is supported.",
                    "type": "string",
                    "title": "iconType"
                  },
                  "icon": {
                    "description": "The icon string. Currently, only \"SVG\" is supported, so it needs to be a valid svg.",
                    "type": "string",
                    "title": "icon"
                  }
                },
                "required": [
                  "event",
                  "icon",
                  "iconAlt",
                  "iconType"
                ]
              },
              "title": "customPlugins"
            },
            "blockquote": {
              "title": "EditableHtmlButtonConfigure",
              "type": "object",
              "properties": {
                "disabled": {
                  "description": "Indicates if the plugin is disabled or not",
                  "type": "boolean",
                  "title": "disabled"
                }
              }
            },
            "h3": {
              "title": "EditableHtmlButtonConfigure",
              "type": "object",
              "properties": {
                "disabled": {
                  "description": "Indicates if the plugin is disabled or not",
                  "type": "boolean",
                  "title": "disabled"
                }
              }
            },
            "characters": {
              "title": "EditableHtmlButtonConfigure",
              "type": "object",
              "properties": {
                "disabled": {
                  "description": "Indicates if the plugin is disabled or not",
                  "type": "boolean",
                  "title": "disabled"
                }
              }
            },
            "bold": {
              "title": "EditableHtmlButtonConfigure",
              "type": "object",
              "properties": {
                "disabled": {
                  "description": "Indicates if the plugin is disabled or not",
                  "type": "boolean",
                  "title": "disabled"
                }
              }
            },
            "html": {
              "title": "EditableHtmlButtonConfigure",
              "type": "object",
              "properties": {
                "disabled": {
                  "description": "Indicates if the plugin is disabled or not",
                  "type": "boolean",
                  "title": "disabled"
                }
              }
            },
            "italic": {
              "title": "EditableHtmlButtonConfigure",
              "type": "object",
              "properties": {
                "disabled": {
                  "description": "Indicates if the plugin is disabled or not",
                  "type": "boolean",
                  "title": "disabled"
                }
              }
            },
            "ol_list": {
              "title": "EditableHtmlButtonConfigure",
              "type": "object",
              "properties": {
                "disabled": {
                  "description": "Indicates if the plugin is disabled or not",
                  "type": "boolean",
                  "title": "disabled"
                }
              }
            },
            "redo": {
              "title": "EditableHtmlButtonConfigure",
              "type": "object",
              "properties": {
                "disabled": {
                  "description": "Indicates if the plugin is disabled or not",
                  "type": "boolean",
                  "title": "disabled"
                }
              }
            },
            "strikethrough": {
              "title": "EditableHtmlButtonConfigure",
              "type": "object",
              "properties": {
                "disabled": {
                  "description": "Indicates if the plugin is disabled or not",
                  "type": "boolean",
                  "title": "disabled"
                }
              }
            },
            "sub": {
              "title": "EditableHtmlButtonConfigure",
              "type": "object",
              "properties": {
                "disabled": {
                  "description": "Indicates if the plugin is disabled or not",
                  "type": "boolean",
                  "title": "disabled"
                }
              }
            },
            "sup": {
              "title": "EditableHtmlButtonConfigure",
              "type": "object",
              "properties": {
                "disabled": {
                  "description": "Indicates if the plugin is disabled or not",
                  "type": "boolean",
                  "title": "disabled"
                }
              }
            },
            "table": {
              "title": "EditableHtmlButtonConfigure",
              "type": "object",
              "properties": {
                "disabled": {
                  "description": "Indicates if the plugin is disabled or not",
                  "type": "boolean",
                  "title": "disabled"
                }
              }
            },
            "ul_list": {
              "title": "EditableHtmlButtonConfigure",
              "type": "object",
              "properties": {
                "disabled": {
                  "description": "Indicates if the plugin is disabled or not",
                  "type": "boolean",
                  "title": "disabled"
                }
              }
            },
            "underline": {
              "title": "EditableHtmlButtonConfigure",
              "type": "object",
              "properties": {
                "disabled": {
                  "description": "Indicates if the plugin is disabled or not",
                  "type": "boolean",
                  "title": "disabled"
                }
              }
            },
            "undo": {
              "title": "EditableHtmlButtonConfigure",
              "type": "object",
              "properties": {
                "disabled": {
                  "description": "Indicates if the plugin is disabled or not",
                  "type": "boolean",
                  "title": "disabled"
                }
              }
            }
          }
        },
        "required": {
          "description": "Indicates if the item is required and the value cannot be empty",
          "type": "boolean",
          "title": "required"
        },
        "settings": {
          "description": "Indicates if the item has to be displayed in the Settings Panel",
          "type": "boolean",
          "title": "settings"
        },
        "label": {
          "description": "Indicates the label for the item that has to be displayed in the Settings Panel",
          "type": "string",
          "title": "label"
        }
      }
    },
    "ConfigurePropWithEnabled": {
      "title": "ConfigurePropWithEnabled",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Indicates the value of the item if it affects config-ui\n(eg.: if item is a switch and displaying an input on the config-ui depends on the switch value: on/off)",
          "type": "boolean",
          "title": "enabled"
        },
        "settings": {
          "description": "Indicates if the item has to be displayed in the Settings Panel",
          "type": "boolean",
          "title": "settings"
        },
        "label": {
          "description": "Indicates the label for the item that has to be displayed in the Settings Panel",
          "type": "string",
          "title": "label"
        }
      }
    },
    "ConfigureMaxImageDimensionsProp": {
      "title": "ConfigureMaxImageDimensionsProp",
      "type": "object",
      "properties": {
        "teacherInstructions": {
          "description": "Indicates the max dimension for images in teacher instructions",
          "type": "number",
          "title": "teacherInstructions"
        },
        "prompt": {
          "description": "Indicates the max dimension for images in prompt - this is also the default dimension for all other input fields if it's not specified",
          "type": "number",
          "title": "prompt"
        },
        "rationale": {
          "description": "Indicates the max dimension for images in rationale",
          "type": "number",
          "title": "rationale"
        },
        "choices": {
          "description": "Indicates the max dimension for images in choices",
          "type": "number",
          "title": "choices"
        }
      }
    },
    "ConfigureMathMLProp": {
      "title": "ConfigureMathMLProp",
      "type": "object",
      "properties": {
        "mmlOutput": {
          "description": "Indicates if model should have mathML output instead of latex",
          "type": "number",
          "title": "mmlOutput"
        },
        "mmlEditing": {
          "description": "Indicates if mathML that's already in model should be editable",
          "type": "number",
          "title": "mmlEditing"
        }
      }
    },
    "ConfigureLanguageOptionsProp": {
      "title": "ConfigureLanguageOptionsProp",
      "type": "object",
      "properties": {
        "value": {
          "description": "Value of the language option",
          "type": "string",
          "title": "value"
        },
        "label": {
          "description": "Label of the language option",
          "type": "string",
          "title": "label"
        }
      },
      "required": [
        "label",
        "value"
      ]
    },
    "Choice": {
      "title": "Choice",
      "type": "object",
      "properties": {
        "correct": {
          "description": "Indicates if the choice is correct",
          "type": "boolean",
          "title": "correct"
        },
        "value": {
          "description": "the value that will be stored if this choice is selected",
          "type": "string",
          "title": "value"
        },
        "label": {
          "description": "the text label that will be presented to the user for this choice",
          "type": "string",
          "title": "label"
        },
        "feedback": {
          "description": "The type of feedback to use:\n   `default` = a standard feedback message\n   `custom` = a customized feedback message",
          "title": "Feedback",
          "type": "object",
          "properties": {
            "type": {
              "default": "default",
              "enum": [
                "custom",
                "default",
                "none"
              ],
              "type": "string",
              "title": "type"
            },
            "value": {
              "description": "Value for feedback",
              "type": "string",
              "title": "value"
            },
            "custom": {
              "description": "Custom value for feedback",
              "type": "string",
              "title": "custom"
            }
          },
          "required": [
            "type"
          ]
        },
        "rationale": {
          "description": "Rationale for the Choice",
          "type": "string",
          "title": "rationale"
        }
      },
      "required": [
        "label",
        "value"
      ]
    },
    "Feedback": {
      "description": "The type of feedback to use:\n   `default` = a standard feedback message\n   `custom` = a customized feedback message",
      "title": "Feedback",
      "type": "object",
      "properties": {
        "type": {
          "default": "default",
          "enum": [
            "custom",
            "default",
            "none"
          ],
          "type": "string",
          "title": "type"
        },
        "value": {
          "description": "Value for feedback",
          "type": "string",
          "title": "value"
        },
        "custom": {
          "description": "Custom value for feedback",
          "type": "string",
          "title": "custom"
        }
      },
      "required": [
        "type"
      ]
    }
  },
  "$schema": "http://json-schema.org/draft-07/schema#"
}