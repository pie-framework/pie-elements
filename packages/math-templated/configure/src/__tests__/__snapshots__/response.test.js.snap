// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Response component Match Snapshot 1`] = `
<WithStyles(Response)
  cAllowTrailingZeros={
    Object {
      "enabled": true,
      "label": "Allow Trailing Zeros",
    }
  }
  cIgnoreOrder={
    Object {
      "enabled": true,
      "label": "Ignore Order",
    }
  }
  classes={
    Object {
      "alternateBar": "alternateBar",
      "alternateButton": "alternateButton",
      "cardContent": "cardContent",
      "errorText": "errorText",
      "inputContainer": "inputContainer",
      "mathToolbar": "mathToolbar",
      "removeAlternateButton": "removeAlternateButton",
      "responseBox": "responseBox",
      "responseContainer": "responseContainer",
      "responseEditor": "responseEditor",
      "selectContainer": "selectContainer",
      "title": "title",
      "titleBar": "titleBar",
    }
  }
  defaultResponse={false}
  error={Object {}}
  mode="8"
  onResponseChange={[MockFunction]}
  response={
    Object {
      "allowTrailingZeros": false,
      "alternates": Object {},
      "answer": "",
      "ignoreOrder": false,
      "validation": "literal",
    }
  }
  responseKey="1"
>
  <Response
    cAllowTrailingZeros={
      Object {
        "enabled": true,
        "label": "Allow Trailing Zeros",
      }
    }
    cIgnoreOrder={
      Object {
        "enabled": true,
        "label": "Ignore Order",
      }
    }
    classes={
      Object {
        "alternateBar": "Response-alternateBar-13 alternateBar",
        "alternateButton": "Response-alternateButton-9 alternateButton",
        "cardContent": "Response-cardContent-2 cardContent",
        "errorText": "Response-errorText-11 errorText",
        "inputContainer": "Response-inputContainer-5 inputContainer",
        "mathToolbar": "Response-mathToolbar-8 mathToolbar",
        "removeAlternateButton": "Response-removeAlternateButton-10 removeAlternateButton",
        "responseBox": "Response-responseBox-12 responseBox",
        "responseContainer": "Response-responseContainer-1 responseContainer",
        "responseEditor": "Response-responseEditor-7 responseEditor",
        "selectContainer": "Response-selectContainer-4 selectContainer",
        "title": "Response-title-3 title",
        "titleBar": "Response-titleBar-6 titleBar",
      }
    }
    defaultResponse={false}
    error={Object {}}
    mode="8"
    onResponseChange={[MockFunction]}
    response={
      Object {
        "allowTrailingZeros": false,
        "alternates": Object {},
        "answer": "",
        "ignoreOrder": false,
        "validation": "literal",
      }
    }
    responseKey="1"
  >
    <WithStyles(Card)
      className="Response-responseContainer-1 responseContainer"
      style={
        Object {
          "minHeight": "230px",
        }
      }
    >
      <Card
        className="Response-responseContainer-1 responseContainer"
        classes={
          Object {
            "root": "MuiCard-root-14",
          }
        }
        raised={false}
        style={
          Object {
            "minHeight": "230px",
          }
        }
      >
        <WithStyles(Paper)
          className="MuiCard-root-14 Response-responseContainer-1 responseContainer"
          elevation={1}
          style={
            Object {
              "minHeight": "230px",
            }
          }
        >
          <Paper
            className="MuiCard-root-14 Response-responseContainer-1 responseContainer"
            classes={
              Object {
                "elevation0": "MuiPaper-elevation0-17",
                "elevation1": "MuiPaper-elevation1-18",
                "elevation10": "MuiPaper-elevation10-27",
                "elevation11": "MuiPaper-elevation11-28",
                "elevation12": "MuiPaper-elevation12-29",
                "elevation13": "MuiPaper-elevation13-30",
                "elevation14": "MuiPaper-elevation14-31",
                "elevation15": "MuiPaper-elevation15-32",
                "elevation16": "MuiPaper-elevation16-33",
                "elevation17": "MuiPaper-elevation17-34",
                "elevation18": "MuiPaper-elevation18-35",
                "elevation19": "MuiPaper-elevation19-36",
                "elevation2": "MuiPaper-elevation2-19",
                "elevation20": "MuiPaper-elevation20-37",
                "elevation21": "MuiPaper-elevation21-38",
                "elevation22": "MuiPaper-elevation22-39",
                "elevation23": "MuiPaper-elevation23-40",
                "elevation24": "MuiPaper-elevation24-41",
                "elevation3": "MuiPaper-elevation3-20",
                "elevation4": "MuiPaper-elevation4-21",
                "elevation5": "MuiPaper-elevation5-22",
                "elevation6": "MuiPaper-elevation6-23",
                "elevation7": "MuiPaper-elevation7-24",
                "elevation8": "MuiPaper-elevation8-25",
                "elevation9": "MuiPaper-elevation9-26",
                "root": "MuiPaper-root-15",
                "rounded": "MuiPaper-rounded-16",
              }
            }
            component="div"
            elevation={1}
            square={false}
            style={
              Object {
                "minHeight": "230px",
              }
            }
          >
            <div
              className="MuiPaper-root-15 MuiPaper-elevation1-18 MuiPaper-rounded-16 MuiCard-root-14 Response-responseContainer-1 responseContainer"
              style={
                Object {
                  "minHeight": "230px",
                }
              }
            >
              <WithStyles(CardContent)
                className="Response-cardContent-2 cardContent"
              >
                <CardContent
                  className="Response-cardContent-2 cardContent"
                  classes={
                    Object {
                      "root": "MuiCardContent-root-42",
                    }
                  }
                  component="div"
                >
                  <div
                    className="MuiCardContent-root-42 Response-cardContent-2 cardContent"
                  >
                    <div
                      className="Response-titleBar-6 titleBar"
                    >
                      <WithStyles(Typography)
                        className="Response-title-3 title"
                        component="div"
                      >
                        <Typography
                          align="inherit"
                          className="Response-title-3 title"
                          classes={
                            Object {
                              "alignCenter": "MuiTypography-alignCenter-66",
                              "alignJustify": "MuiTypography-alignJustify-68",
                              "alignLeft": "MuiTypography-alignLeft-65",
                              "alignRight": "MuiTypography-alignRight-67",
                              "body1": "MuiTypography-body1-52",
                              "body2": "MuiTypography-body2-51",
                              "button": "MuiTypography-button-54",
                              "caption": "MuiTypography-caption-53",
                              "colorError": "MuiTypography-colorError-77",
                              "colorInherit": "MuiTypography-colorInherit-72",
                              "colorPrimary": "MuiTypography-colorPrimary-73",
                              "colorSecondary": "MuiTypography-colorSecondary-74",
                              "colorTextPrimary": "MuiTypography-colorTextPrimary-75",
                              "colorTextSecondary": "MuiTypography-colorTextSecondary-76",
                              "display1": "MuiTypography-display1-47",
                              "display2": "MuiTypography-display2-46",
                              "display3": "MuiTypography-display3-45",
                              "display4": "MuiTypography-display4-44",
                              "gutterBottom": "MuiTypography-gutterBottom-70",
                              "h1": "MuiTypography-h1-55",
                              "h2": "MuiTypography-h2-56",
                              "h3": "MuiTypography-h3-57",
                              "h4": "MuiTypography-h4-58",
                              "h5": "MuiTypography-h5-59",
                              "h6": "MuiTypography-h6-60",
                              "headline": "MuiTypography-headline-48",
                              "inline": "MuiTypography-inline-78",
                              "noWrap": "MuiTypography-noWrap-69",
                              "overline": "MuiTypography-overline-63",
                              "paragraph": "MuiTypography-paragraph-71",
                              "root": "MuiTypography-root-43",
                              "srOnly": "MuiTypography-srOnly-64",
                              "subheading": "MuiTypography-subheading-50",
                              "subtitle1": "MuiTypography-subtitle1-61",
                              "subtitle2": "MuiTypography-subtitle2-62",
                              "title": "MuiTypography-title-49",
                            }
                          }
                          color="default"
                          component="div"
                          gutterBottom={false}
                          headlineMapping={
                            Object {
                              "body1": "p",
                              "body2": "p",
                              "display1": "h1",
                              "display2": "h1",
                              "display3": "h1",
                              "display4": "h1",
                              "h1": "h1",
                              "h2": "h2",
                              "h3": "h3",
                              "h4": "h4",
                              "h5": "h5",
                              "h6": "h6",
                              "headline": "h1",
                              "subheading": "h3",
                              "subtitle1": "h6",
                              "subtitle2": "h6",
                              "title": "h2",
                            }
                          }
                          inline={false}
                          noWrap={false}
                          paragraph={false}
                          theme={
                            Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "only": [Function],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                                "width": [Function],
                              },
                              "direction": "ltr",
                              "mixins": Object {
                                "gutters": [Function],
                                "toolbar": Object {
                                  "@media (min-width:0px) and (orientation: landscape)": Object {
                                    "minHeight": 48,
                                  },
                                  "@media (min-width:600px)": Object {
                                    "minHeight": 64,
                                  },
                                  "minHeight": 56,
                                },
                              },
                              "overrides": Object {},
                              "palette": Object {
                                "action": Object {
                                  "active": "rgba(0, 0, 0, 0.54)",
                                  "disabled": "rgba(0, 0, 0, 0.26)",
                                  "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                  "hover": "rgba(0, 0, 0, 0.08)",
                                  "hoverOpacity": 0.08,
                                  "selected": "rgba(0, 0, 0, 0.14)",
                                },
                                "augmentColor": [Function],
                                "background": Object {
                                  "default": "#fafafa",
                                  "paper": "#fff",
                                },
                                "common": Object {
                                  "black": "#000",
                                  "white": "#fff",
                                },
                                "contrastThreshold": 3,
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "error": Object {
                                  "contrastText": "#fff",
                                  "dark": "#d32f2f",
                                  "light": "#e57373",
                                  "main": "#f44336",
                                },
                                "getContrastText": [Function],
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "contrastText": "#fff",
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "contrastText": "#fff",
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "hint": "rgba(0, 0, 0, 0.38)",
                                  "primary": "rgba(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                                "tonalOffset": 0.2,
                                "type": "light",
                              },
                              "props": Object {},
                              "shadows": Array [
                                "none",
                                "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                                "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                                "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "shape": Object {
                                "borderRadius": 4,
                              },
                              "spacing": Object {
                                "unit": 8,
                              },
                              "transitions": Object {
                                "create": [Function],
                                "duration": Object {
                                  "complex": 375,
                                  "enteringScreen": 225,
                                  "leavingScreen": 195,
                                  "short": 250,
                                  "shorter": 200,
                                  "shortest": 150,
                                  "standard": 300,
                                },
                                "easing": Object {
                                  "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                  "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                  "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                  "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                },
                                "getAutoHeightDuration": [Function],
                              },
                              "typography": Object {
                                "body1": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.46429em",
                                },
                                "body1Next": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.00938em",
                                  "lineHeight": 1.5,
                                },
                                "body2": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 500,
                                  "lineHeight": "1.71429em",
                                },
                                "body2Next": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.01071em",
                                  "lineHeight": 1.5,
                                },
                                "button": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 500,
                                  "textTransform": "uppercase",
                                },
                                "buttonNext": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 500,
                                  "letterSpacing": "0.02857em",
                                  "lineHeight": 1.75,
                                  "textTransform": "uppercase",
                                },
                                "caption": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.75rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.375em",
                                },
                                "captionNext": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.75rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.03333em",
                                  "lineHeight": 1.66,
                                },
                                "display1": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "2.125rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.20588em",
                                },
                                "display2": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "2.8125rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.13333em",
                                  "marginLeft": "-.02em",
                                },
                                "display3": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "3.5rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "-.02em",
                                  "lineHeight": "1.30357em",
                                  "marginLeft": "-.02em",
                                },
                                "display4": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "7rem",
                                  "fontWeight": 300,
                                  "letterSpacing": "-.04em",
                                  "lineHeight": "1.14286em",
                                  "marginLeft": "-.04em",
                                },
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": 14,
                                "fontWeightLight": 300,
                                "fontWeightMedium": 500,
                                "fontWeightRegular": 400,
                                "h1": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "6rem",
                                  "fontWeight": 300,
                                  "letterSpacing": "-0.01562em",
                                  "lineHeight": 1,
                                },
                                "h2": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "3.75rem",
                                  "fontWeight": 300,
                                  "letterSpacing": "-0.00833em",
                                  "lineHeight": 1,
                                },
                                "h3": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "3rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0em",
                                  "lineHeight": 1.04,
                                },
                                "h4": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "2.125rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.00735em",
                                  "lineHeight": 1.17,
                                },
                                "h5": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1.5rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0em",
                                  "lineHeight": 1.33,
                                },
                                "h6": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1.25rem",
                                  "fontWeight": 500,
                                  "letterSpacing": "0.0075em",
                                  "lineHeight": 1.6,
                                },
                                "headline": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1.5rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.35417em",
                                },
                                "overline": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.75rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.08333em",
                                  "lineHeight": 2.66,
                                  "textTransform": "uppercase",
                                },
                                "pxToRem": [Function],
                                "round": [Function],
                                "subheading": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.5em",
                                },
                                "subtitle1": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.00938em",
                                  "lineHeight": 1.75,
                                },
                                "subtitle2": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 500,
                                  "letterSpacing": "0.00714em",
                                  "lineHeight": 1.57,
                                },
                                "title": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1.3125rem",
                                  "fontWeight": 500,
                                  "lineHeight": "1.16667em",
                                },
                                "useNextVariants": false,
                              },
                              "zIndex": Object {
                                "appBar": 1100,
                                "drawer": 1200,
                                "mobileStepper": 1000,
                                "modal": 1300,
                                "snackbar": 1400,
                                "tooltip": 1500,
                              },
                            }
                          }
                        >
                          <div
                            className="MuiTypography-root-43 MuiTypography-body1-52 Response-title-3 title"
                          >
                            Response for 
                            <div
                              className="Response-responseBox-12 responseBox"
                            >
                              R 2
                            </div>
                          </div>
                        </Typography>
                      </WithStyles(Typography)>
                      <InputContainer
                        className="Response-selectContainer-4 selectContainer"
                        label="Validation"
                      >
                        <div
                          className="Response-selectContainer-4 selectContainer"
                          label="Validation"
                        >
                          <WithStyles(WithFormControlContext(Select))
                            onChange={[Function]}
                            value="literal"
                          >
                            <WithFormControlContext(Select)
                              classes={
                                Object {
                                  "disabled": "MuiSelect-disabled-84",
                                  "filled": "MuiSelect-filled-81",
                                  "icon": "MuiSelect-icon-85",
                                  "outlined": "MuiSelect-outlined-82",
                                  "root": "MuiSelect-root-79",
                                  "select": "MuiSelect-select-80",
                                  "selectMenu": "MuiSelect-selectMenu-83",
                                }
                              }
                              onChange={[Function]}
                              value="literal"
                            >
                              <Select
                                IconComponent={[Function]}
                                autoWidth={false}
                                classes={
                                  Object {
                                    "disabled": "MuiSelect-disabled-84",
                                    "filled": "MuiSelect-filled-81",
                                    "icon": "MuiSelect-icon-85",
                                    "outlined": "MuiSelect-outlined-82",
                                    "root": "MuiSelect-root-79",
                                    "select": "MuiSelect-select-80",
                                    "selectMenu": "MuiSelect-selectMenu-83",
                                  }
                                }
                                displayEmpty={false}
                                input={<WithStyles(Input) />}
                                multiple={false}
                                native={false}
                                onChange={[Function]}
                                value="literal"
                              >
                                <WithStyles(Input)
                                  inputComponent={[Function]}
                                  inputProps={
                                    Object {
                                      "IconComponent": [Function],
                                      "MenuProps": undefined,
                                      "SelectDisplayProps": undefined,
                                      "autoWidth": false,
                                      "children": Array [
                                        <WithStyles(MenuItem)
                                          value="literal"
                                        >
                                          Literal Validation
                                        </WithStyles(MenuItem)>,
                                        <WithStyles(MenuItem)
                                          value="symbolic"
                                        >
                                          Symbolic Validation
                                        </WithStyles(MenuItem)>,
                                      ],
                                      "classes": Object {
                                        "disabled": "MuiSelect-disabled-84",
                                        "filled": "MuiSelect-filled-81",
                                        "icon": "MuiSelect-icon-85",
                                        "outlined": "MuiSelect-outlined-82",
                                        "root": "MuiSelect-root-79",
                                        "select": "MuiSelect-select-80",
                                        "selectMenu": "MuiSelect-selectMenu-83",
                                      },
                                      "displayEmpty": false,
                                      "multiple": false,
                                      "onClose": undefined,
                                      "onOpen": undefined,
                                      "open": undefined,
                                      "renderValue": undefined,
                                      "type": undefined,
                                      "variant": undefined,
                                    }
                                  }
                                  onChange={[Function]}
                                  value="literal"
                                >
                                  <Input
                                    classes={
                                      Object {
                                        "disabled": "MuiInput-disabled-89",
                                        "error": "MuiInput-error-91",
                                        "focused": "MuiInput-focused-88",
                                        "formControl": "MuiInput-formControl-87",
                                        "fullWidth": "MuiInput-fullWidth-93",
                                        "input": "MuiInput-input-94",
                                        "inputMarginDense": "MuiInput-inputMarginDense-95",
                                        "inputMultiline": "MuiInput-inputMultiline-96",
                                        "inputType": "MuiInput-inputType-97",
                                        "inputTypeSearch": "MuiInput-inputTypeSearch-98",
                                        "multiline": "MuiInput-multiline-92",
                                        "root": "MuiInput-root-86",
                                        "underline": "MuiInput-underline-90",
                                      }
                                    }
                                    inputComponent={[Function]}
                                    inputProps={
                                      Object {
                                        "IconComponent": [Function],
                                        "MenuProps": undefined,
                                        "SelectDisplayProps": undefined,
                                        "autoWidth": false,
                                        "children": Array [
                                          <WithStyles(MenuItem)
                                            value="literal"
                                          >
                                            Literal Validation
                                          </WithStyles(MenuItem)>,
                                          <WithStyles(MenuItem)
                                            value="symbolic"
                                          >
                                            Symbolic Validation
                                          </WithStyles(MenuItem)>,
                                        ],
                                        "classes": Object {
                                          "disabled": "MuiSelect-disabled-84",
                                          "filled": "MuiSelect-filled-81",
                                          "icon": "MuiSelect-icon-85",
                                          "outlined": "MuiSelect-outlined-82",
                                          "root": "MuiSelect-root-79",
                                          "select": "MuiSelect-select-80",
                                          "selectMenu": "MuiSelect-selectMenu-83",
                                        },
                                        "displayEmpty": false,
                                        "multiple": false,
                                        "onClose": undefined,
                                        "onOpen": undefined,
                                        "open": undefined,
                                        "renderValue": undefined,
                                        "type": undefined,
                                        "variant": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                    value="literal"
                                  >
                                    <WithStyles(WithFormControlContext(InputBase))
                                      classes={
                                        Object {
                                          "disabled": "MuiInput-disabled-89",
                                          "error": "MuiInput-error-91",
                                          "focused": "MuiInput-focused-88",
                                          "formControl": "MuiInput-formControl-87",
                                          "fullWidth": "MuiInput-fullWidth-93",
                                          "input": "MuiInput-input-94",
                                          "inputMarginDense": "MuiInput-inputMarginDense-95",
                                          "inputMultiline": "MuiInput-inputMultiline-96",
                                          "inputType": "MuiInput-inputType-97",
                                          "inputTypeSearch": "MuiInput-inputTypeSearch-98",
                                          "multiline": "MuiInput-multiline-92",
                                          "root": "MuiInput-root-86 MuiInput-underline-90",
                                          "underline": null,
                                        }
                                      }
                                      fullWidth={false}
                                      inputComponent={[Function]}
                                      inputProps={
                                        Object {
                                          "IconComponent": [Function],
                                          "MenuProps": undefined,
                                          "SelectDisplayProps": undefined,
                                          "autoWidth": false,
                                          "children": Array [
                                            <WithStyles(MenuItem)
                                              value="literal"
                                            >
                                              Literal Validation
                                            </WithStyles(MenuItem)>,
                                            <WithStyles(MenuItem)
                                              value="symbolic"
                                            >
                                              Symbolic Validation
                                            </WithStyles(MenuItem)>,
                                          ],
                                          "classes": Object {
                                            "disabled": "MuiSelect-disabled-84",
                                            "filled": "MuiSelect-filled-81",
                                            "icon": "MuiSelect-icon-85",
                                            "outlined": "MuiSelect-outlined-82",
                                            "root": "MuiSelect-root-79",
                                            "select": "MuiSelect-select-80",
                                            "selectMenu": "MuiSelect-selectMenu-83",
                                          },
                                          "displayEmpty": false,
                                          "multiple": false,
                                          "onClose": undefined,
                                          "onOpen": undefined,
                                          "open": undefined,
                                          "renderValue": undefined,
                                          "type": undefined,
                                          "variant": undefined,
                                        }
                                      }
                                      multiline={false}
                                      onChange={[Function]}
                                      type="text"
                                      value="literal"
                                    >
                                      <WithFormControlContext(InputBase)
                                        classes={
                                          Object {
                                            "adornedEnd": "MuiInputBase-adornedEnd-104",
                                            "adornedStart": "MuiInputBase-adornedStart-103",
                                            "disabled": "MuiInputBase-disabled-102 MuiInput-disabled-89",
                                            "error": "MuiInputBase-error-105 MuiInput-error-91",
                                            "focused": "MuiInputBase-focused-101 MuiInput-focused-88",
                                            "formControl": "MuiInputBase-formControl-100 MuiInput-formControl-87",
                                            "fullWidth": "MuiInputBase-fullWidth-108 MuiInput-fullWidth-93",
                                            "input": "MuiInputBase-input-109 MuiInput-input-94",
                                            "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-115",
                                            "inputAdornedStart": "MuiInputBase-inputAdornedStart-114",
                                            "inputMarginDense": "MuiInputBase-inputMarginDense-110 MuiInput-inputMarginDense-95",
                                            "inputMultiline": "MuiInputBase-inputMultiline-111 MuiInput-inputMultiline-96",
                                            "inputType": "MuiInputBase-inputType-112 MuiInput-inputType-97",
                                            "inputTypeSearch": "MuiInputBase-inputTypeSearch-113 MuiInput-inputTypeSearch-98",
                                            "marginDense": "MuiInputBase-marginDense-106",
                                            "multiline": "MuiInputBase-multiline-107 MuiInput-multiline-92",
                                            "root": "MuiInputBase-root-99 MuiInput-root-86 MuiInput-underline-90",
                                          }
                                        }
                                        fullWidth={false}
                                        inputComponent={[Function]}
                                        inputProps={
                                          Object {
                                            "IconComponent": [Function],
                                            "MenuProps": undefined,
                                            "SelectDisplayProps": undefined,
                                            "autoWidth": false,
                                            "children": Array [
                                              <WithStyles(MenuItem)
                                                value="literal"
                                              >
                                                Literal Validation
                                              </WithStyles(MenuItem)>,
                                              <WithStyles(MenuItem)
                                                value="symbolic"
                                              >
                                                Symbolic Validation
                                              </WithStyles(MenuItem)>,
                                            ],
                                            "classes": Object {
                                              "disabled": "MuiSelect-disabled-84",
                                              "filled": "MuiSelect-filled-81",
                                              "icon": "MuiSelect-icon-85",
                                              "outlined": "MuiSelect-outlined-82",
                                              "root": "MuiSelect-root-79",
                                              "select": "MuiSelect-select-80",
                                              "selectMenu": "MuiSelect-selectMenu-83",
                                            },
                                            "displayEmpty": false,
                                            "multiple": false,
                                            "onClose": undefined,
                                            "onOpen": undefined,
                                            "open": undefined,
                                            "renderValue": undefined,
                                            "type": undefined,
                                            "variant": undefined,
                                          }
                                        }
                                        multiline={false}
                                        onChange={[Function]}
                                        type="text"
                                        value="literal"
                                      >
                                        <InputBase
                                          classes={
                                            Object {
                                              "adornedEnd": "MuiInputBase-adornedEnd-104",
                                              "adornedStart": "MuiInputBase-adornedStart-103",
                                              "disabled": "MuiInputBase-disabled-102 MuiInput-disabled-89",
                                              "error": "MuiInputBase-error-105 MuiInput-error-91",
                                              "focused": "MuiInputBase-focused-101 MuiInput-focused-88",
                                              "formControl": "MuiInputBase-formControl-100 MuiInput-formControl-87",
                                              "fullWidth": "MuiInputBase-fullWidth-108 MuiInput-fullWidth-93",
                                              "input": "MuiInputBase-input-109 MuiInput-input-94",
                                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-115",
                                              "inputAdornedStart": "MuiInputBase-inputAdornedStart-114",
                                              "inputMarginDense": "MuiInputBase-inputMarginDense-110 MuiInput-inputMarginDense-95",
                                              "inputMultiline": "MuiInputBase-inputMultiline-111 MuiInput-inputMultiline-96",
                                              "inputType": "MuiInputBase-inputType-112 MuiInput-inputType-97",
                                              "inputTypeSearch": "MuiInputBase-inputTypeSearch-113 MuiInput-inputTypeSearch-98",
                                              "marginDense": "MuiInputBase-marginDense-106",
                                              "multiline": "MuiInputBase-multiline-107 MuiInput-multiline-92",
                                              "root": "MuiInputBase-root-99 MuiInput-root-86 MuiInput-underline-90",
                                            }
                                          }
                                          fullWidth={false}
                                          inputComponent={[Function]}
                                          inputProps={
                                            Object {
                                              "IconComponent": [Function],
                                              "MenuProps": undefined,
                                              "SelectDisplayProps": undefined,
                                              "autoWidth": false,
                                              "children": Array [
                                                <WithStyles(MenuItem)
                                                  value="literal"
                                                >
                                                  Literal Validation
                                                </WithStyles(MenuItem)>,
                                                <WithStyles(MenuItem)
                                                  value="symbolic"
                                                >
                                                  Symbolic Validation
                                                </WithStyles(MenuItem)>,
                                              ],
                                              "classes": Object {
                                                "disabled": "MuiSelect-disabled-84",
                                                "filled": "MuiSelect-filled-81",
                                                "icon": "MuiSelect-icon-85",
                                                "outlined": "MuiSelect-outlined-82",
                                                "root": "MuiSelect-root-79",
                                                "select": "MuiSelect-select-80",
                                                "selectMenu": "MuiSelect-selectMenu-83",
                                              },
                                              "displayEmpty": false,
                                              "multiple": false,
                                              "onClose": undefined,
                                              "onOpen": undefined,
                                              "open": undefined,
                                              "renderValue": undefined,
                                              "type": undefined,
                                              "variant": undefined,
                                            }
                                          }
                                          multiline={false}
                                          onChange={[Function]}
                                          type="text"
                                          value="literal"
                                        >
                                          <div
                                            className="MuiInputBase-root-99 MuiInput-root-86 MuiInput-underline-90"
                                            onClick={[Function]}
                                          >
                                            <SelectInput
                                              IconComponent={[Function]}
                                              autoWidth={false}
                                              className="MuiInputBase-input-109 MuiInput-input-94"
                                              classes={
                                                Object {
                                                  "disabled": "MuiSelect-disabled-84",
                                                  "filled": "MuiSelect-filled-81",
                                                  "icon": "MuiSelect-icon-85",
                                                  "outlined": "MuiSelect-outlined-82",
                                                  "root": "MuiSelect-root-79",
                                                  "select": "MuiSelect-select-80",
                                                  "selectMenu": "MuiSelect-selectMenu-83",
                                                }
                                              }
                                              displayEmpty={false}
                                              inputRef={[Function]}
                                              multiple={false}
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              value="literal"
                                            >
                                              <div
                                                className="MuiSelect-root-79"
                                              >
                                                <div
                                                  aria-haspopup="true"
                                                  aria-pressed="false"
                                                  className="MuiSelect-select-80 MuiSelect-selectMenu-83 MuiInputBase-input-109 MuiInput-input-94"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  role="button"
                                                  tabIndex={0}
                                                >
                                                  Literal Validation
                                                </div>
                                                <input
                                                  type="hidden"
                                                  value="literal"
                                                />
                                                <pure(ArrowDropDown)
                                                  className="MuiSelect-icon-85"
                                                >
                                                  <ArrowDropDown
                                                    className="MuiSelect-icon-85"
                                                  >
                                                    <WithStyles(SvgIcon)
                                                      className="MuiSelect-icon-85"
                                                    >
                                                      <SvgIcon
                                                        className="MuiSelect-icon-85"
                                                        classes={
                                                          Object {
                                                            "colorAction": "MuiSvgIcon-colorAction-119",
                                                            "colorDisabled": "MuiSvgIcon-colorDisabled-121",
                                                            "colorError": "MuiSvgIcon-colorError-120",
                                                            "colorPrimary": "MuiSvgIcon-colorPrimary-117",
                                                            "colorSecondary": "MuiSvgIcon-colorSecondary-118",
                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-122",
                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-124",
                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-123",
                                                            "root": "MuiSvgIcon-root-116",
                                                          }
                                                        }
                                                        color="inherit"
                                                        component="svg"
                                                        fontSize="default"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="MuiSvgIcon-root-116 MuiSelect-icon-85"
                                                          focusable="false"
                                                          role="presentation"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M7 10l5 5 5-5z"
                                                          />
                                                        </svg>
                                                      </SvgIcon>
                                                    </WithStyles(SvgIcon)>
                                                  </ArrowDropDown>
                                                </pure(ArrowDropDown)>
                                                <WithStyles(Menu)
                                                  MenuListProps={
                                                    Object {
                                                      "disableListWrap": true,
                                                      "role": "listbox",
                                                    }
                                                  }
                                                  PaperProps={
                                                    Object {
                                                      "style": Object {
                                                        "minWidth": null,
                                                      },
                                                    }
                                                  }
                                                  id="menu-"
                                                  onClose={[Function]}
                                                  open={false}
                                                >
                                                  <Menu
                                                    MenuListProps={
                                                      Object {
                                                        "disableListWrap": true,
                                                        "role": "listbox",
                                                      }
                                                    }
                                                    PaperProps={
                                                      Object {
                                                        "style": Object {
                                                          "minWidth": null,
                                                        },
                                                      }
                                                    }
                                                    classes={
                                                      Object {
                                                        "paper": "MuiMenu-paper-125",
                                                      }
                                                    }
                                                    disableAutoFocusItem={false}
                                                    id="menu-"
                                                    onClose={[Function]}
                                                    open={false}
                                                    theme={
                                                      Object {
                                                        "breakpoints": Object {
                                                          "between": [Function],
                                                          "down": [Function],
                                                          "keys": Array [
                                                            "xs",
                                                            "sm",
                                                            "md",
                                                            "lg",
                                                            "xl",
                                                          ],
                                                          "only": [Function],
                                                          "up": [Function],
                                                          "values": Object {
                                                            "lg": 1280,
                                                            "md": 960,
                                                            "sm": 600,
                                                            "xl": 1920,
                                                            "xs": 0,
                                                          },
                                                          "width": [Function],
                                                        },
                                                        "direction": "ltr",
                                                        "mixins": Object {
                                                          "gutters": [Function],
                                                          "toolbar": Object {
                                                            "@media (min-width:0px) and (orientation: landscape)": Object {
                                                              "minHeight": 48,
                                                            },
                                                            "@media (min-width:600px)": Object {
                                                              "minHeight": 64,
                                                            },
                                                            "minHeight": 56,
                                                          },
                                                        },
                                                        "overrides": Object {},
                                                        "palette": Object {
                                                          "action": Object {
                                                            "active": "rgba(0, 0, 0, 0.54)",
                                                            "disabled": "rgba(0, 0, 0, 0.26)",
                                                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                            "hover": "rgba(0, 0, 0, 0.08)",
                                                            "hoverOpacity": 0.08,
                                                            "selected": "rgba(0, 0, 0, 0.14)",
                                                          },
                                                          "augmentColor": [Function],
                                                          "background": Object {
                                                            "default": "#fafafa",
                                                            "paper": "#fff",
                                                          },
                                                          "common": Object {
                                                            "black": "#000",
                                                            "white": "#fff",
                                                          },
                                                          "contrastThreshold": 3,
                                                          "divider": "rgba(0, 0, 0, 0.12)",
                                                          "error": Object {
                                                            "contrastText": "#fff",
                                                            "dark": "#d32f2f",
                                                            "light": "#e57373",
                                                            "main": "#f44336",
                                                          },
                                                          "getContrastText": [Function],
                                                          "grey": Object {
                                                            "100": "#f5f5f5",
                                                            "200": "#eeeeee",
                                                            "300": "#e0e0e0",
                                                            "400": "#bdbdbd",
                                                            "50": "#fafafa",
                                                            "500": "#9e9e9e",
                                                            "600": "#757575",
                                                            "700": "#616161",
                                                            "800": "#424242",
                                                            "900": "#212121",
                                                            "A100": "#d5d5d5",
                                                            "A200": "#aaaaaa",
                                                            "A400": "#303030",
                                                            "A700": "#616161",
                                                          },
                                                          "primary": Object {
                                                            "contrastText": "#fff",
                                                            "dark": "#303f9f",
                                                            "light": "#7986cb",
                                                            "main": "#3f51b5",
                                                          },
                                                          "secondary": Object {
                                                            "contrastText": "#fff",
                                                            "dark": "#c51162",
                                                            "light": "#ff4081",
                                                            "main": "#f50057",
                                                          },
                                                          "text": Object {
                                                            "disabled": "rgba(0, 0, 0, 0.38)",
                                                            "hint": "rgba(0, 0, 0, 0.38)",
                                                            "primary": "rgba(0, 0, 0, 0.87)",
                                                            "secondary": "rgba(0, 0, 0, 0.54)",
                                                          },
                                                          "tonalOffset": 0.2,
                                                          "type": "light",
                                                        },
                                                        "props": Object {},
                                                        "shadows": Array [
                                                          "none",
                                                          "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                                                          "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                                                          "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                                                          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                        ],
                                                        "shape": Object {
                                                          "borderRadius": 4,
                                                        },
                                                        "spacing": Object {
                                                          "unit": 8,
                                                        },
                                                        "transitions": Object {
                                                          "create": [Function],
                                                          "duration": Object {
                                                            "complex": 375,
                                                            "enteringScreen": 225,
                                                            "leavingScreen": 195,
                                                            "short": 250,
                                                            "shorter": 200,
                                                            "shortest": 150,
                                                            "standard": 300,
                                                          },
                                                          "easing": Object {
                                                            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                          },
                                                          "getAutoHeightDuration": [Function],
                                                        },
                                                        "typography": Object {
                                                          "body1": Object {
                                                            "color": "rgba(0, 0, 0, 0.87)",
                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                            "fontSize": "0.875rem",
                                                            "fontWeight": 400,
                                                            "lineHeight": "1.46429em",
                                                          },
                                                          "body1Next": Object {
                                                            "color": "rgba(0, 0, 0, 0.87)",
                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                            "fontSize": "1rem",
                                                            "fontWeight": 400,
                                                            "letterSpacing": "0.00938em",
                                                            "lineHeight": 1.5,
                                                          },
                                                          "body2": Object {
                                                            "color": "rgba(0, 0, 0, 0.87)",
                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                            "fontSize": "0.875rem",
                                                            "fontWeight": 500,
                                                            "lineHeight": "1.71429em",
                                                          },
                                                          "body2Next": Object {
                                                            "color": "rgba(0, 0, 0, 0.87)",
                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                            "fontSize": "0.875rem",
                                                            "fontWeight": 400,
                                                            "letterSpacing": "0.01071em",
                                                            "lineHeight": 1.5,
                                                          },
                                                          "button": Object {
                                                            "color": "rgba(0, 0, 0, 0.87)",
                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                            "fontSize": "0.875rem",
                                                            "fontWeight": 500,
                                                            "textTransform": "uppercase",
                                                          },
                                                          "buttonNext": Object {
                                                            "color": "rgba(0, 0, 0, 0.87)",
                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                            "fontSize": "0.875rem",
                                                            "fontWeight": 500,
                                                            "letterSpacing": "0.02857em",
                                                            "lineHeight": 1.75,
                                                            "textTransform": "uppercase",
                                                          },
                                                          "caption": Object {
                                                            "color": "rgba(0, 0, 0, 0.54)",
                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                            "fontSize": "0.75rem",
                                                            "fontWeight": 400,
                                                            "lineHeight": "1.375em",
                                                          },
                                                          "captionNext": Object {
                                                            "color": "rgba(0, 0, 0, 0.87)",
                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                            "fontSize": "0.75rem",
                                                            "fontWeight": 400,
                                                            "letterSpacing": "0.03333em",
                                                            "lineHeight": 1.66,
                                                          },
                                                          "display1": Object {
                                                            "color": "rgba(0, 0, 0, 0.54)",
                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                            "fontSize": "2.125rem",
                                                            "fontWeight": 400,
                                                            "lineHeight": "1.20588em",
                                                          },
                                                          "display2": Object {
                                                            "color": "rgba(0, 0, 0, 0.54)",
                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                            "fontSize": "2.8125rem",
                                                            "fontWeight": 400,
                                                            "lineHeight": "1.13333em",
                                                            "marginLeft": "-.02em",
                                                          },
                                                          "display3": Object {
                                                            "color": "rgba(0, 0, 0, 0.54)",
                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                            "fontSize": "3.5rem",
                                                            "fontWeight": 400,
                                                            "letterSpacing": "-.02em",
                                                            "lineHeight": "1.30357em",
                                                            "marginLeft": "-.02em",
                                                          },
                                                          "display4": Object {
                                                            "color": "rgba(0, 0, 0, 0.54)",
                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                            "fontSize": "7rem",
                                                            "fontWeight": 300,
                                                            "letterSpacing": "-.04em",
                                                            "lineHeight": "1.14286em",
                                                            "marginLeft": "-.04em",
                                                          },
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": 14,
                                                          "fontWeightLight": 300,
                                                          "fontWeightMedium": 500,
                                                          "fontWeightRegular": 400,
                                                          "h1": Object {
                                                            "color": "rgba(0, 0, 0, 0.87)",
                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                            "fontSize": "6rem",
                                                            "fontWeight": 300,
                                                            "letterSpacing": "-0.01562em",
                                                            "lineHeight": 1,
                                                          },
                                                          "h2": Object {
                                                            "color": "rgba(0, 0, 0, 0.87)",
                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                            "fontSize": "3.75rem",
                                                            "fontWeight": 300,
                                                            "letterSpacing": "-0.00833em",
                                                            "lineHeight": 1,
                                                          },
                                                          "h3": Object {
                                                            "color": "rgba(0, 0, 0, 0.87)",
                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                            "fontSize": "3rem",
                                                            "fontWeight": 400,
                                                            "letterSpacing": "0em",
                                                            "lineHeight": 1.04,
                                                          },
                                                          "h4": Object {
                                                            "color": "rgba(0, 0, 0, 0.87)",
                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                            "fontSize": "2.125rem",
                                                            "fontWeight": 400,
                                                            "letterSpacing": "0.00735em",
                                                            "lineHeight": 1.17,
                                                          },
                                                          "h5": Object {
                                                            "color": "rgba(0, 0, 0, 0.87)",
                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                            "fontSize": "1.5rem",
                                                            "fontWeight": 400,
                                                            "letterSpacing": "0em",
                                                            "lineHeight": 1.33,
                                                          },
                                                          "h6": Object {
                                                            "color": "rgba(0, 0, 0, 0.87)",
                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                            "fontSize": "1.25rem",
                                                            "fontWeight": 500,
                                                            "letterSpacing": "0.0075em",
                                                            "lineHeight": 1.6,
                                                          },
                                                          "headline": Object {
                                                            "color": "rgba(0, 0, 0, 0.87)",
                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                            "fontSize": "1.5rem",
                                                            "fontWeight": 400,
                                                            "lineHeight": "1.35417em",
                                                          },
                                                          "overline": Object {
                                                            "color": "rgba(0, 0, 0, 0.87)",
                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                            "fontSize": "0.75rem",
                                                            "fontWeight": 400,
                                                            "letterSpacing": "0.08333em",
                                                            "lineHeight": 2.66,
                                                            "textTransform": "uppercase",
                                                          },
                                                          "pxToRem": [Function],
                                                          "round": [Function],
                                                          "subheading": Object {
                                                            "color": "rgba(0, 0, 0, 0.87)",
                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                            "fontSize": "1rem",
                                                            "fontWeight": 400,
                                                            "lineHeight": "1.5em",
                                                          },
                                                          "subtitle1": Object {
                                                            "color": "rgba(0, 0, 0, 0.87)",
                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                            "fontSize": "1rem",
                                                            "fontWeight": 400,
                                                            "letterSpacing": "0.00938em",
                                                            "lineHeight": 1.75,
                                                          },
                                                          "subtitle2": Object {
                                                            "color": "rgba(0, 0, 0, 0.87)",
                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                            "fontSize": "0.875rem",
                                                            "fontWeight": 500,
                                                            "letterSpacing": "0.00714em",
                                                            "lineHeight": 1.57,
                                                          },
                                                          "title": Object {
                                                            "color": "rgba(0, 0, 0, 0.87)",
                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                            "fontSize": "1.3125rem",
                                                            "fontWeight": 500,
                                                            "lineHeight": "1.16667em",
                                                          },
                                                          "useNextVariants": false,
                                                        },
                                                        "zIndex": Object {
                                                          "appBar": 1100,
                                                          "drawer": 1200,
                                                          "mobileStepper": 1000,
                                                          "modal": 1300,
                                                          "snackbar": 1400,
                                                          "tooltip": 1500,
                                                        },
                                                      }
                                                    }
                                                    transitionDuration="auto"
                                                  >
                                                    <WithStyles(Popover)
                                                      PaperProps={
                                                        Object {
                                                          "classes": Object {
                                                            "root": "MuiMenu-paper-125",
                                                          },
                                                          "style": Object {
                                                            "minWidth": null,
                                                          },
                                                        }
                                                      }
                                                      anchorOrigin={
                                                        Object {
                                                          "horizontal": "left",
                                                          "vertical": "top",
                                                        }
                                                      }
                                                      getContentAnchorEl={[Function]}
                                                      id="menu-"
                                                      onClose={[Function]}
                                                      onEntering={[Function]}
                                                      open={false}
                                                      transformOrigin={
                                                        Object {
                                                          "horizontal": "left",
                                                          "vertical": "top",
                                                        }
                                                      }
                                                      transitionDuration="auto"
                                                    >
                                                      <Popover
                                                        PaperProps={
                                                          Object {
                                                            "classes": Object {
                                                              "root": "MuiMenu-paper-125",
                                                            },
                                                            "style": Object {
                                                              "minWidth": null,
                                                            },
                                                          }
                                                        }
                                                        TransitionComponent={[Function]}
                                                        anchorOrigin={
                                                          Object {
                                                            "horizontal": "left",
                                                            "vertical": "top",
                                                          }
                                                        }
                                                        anchorReference="anchorEl"
                                                        classes={
                                                          Object {
                                                            "paper": "MuiPopover-paper-126",
                                                          }
                                                        }
                                                        elevation={8}
                                                        getContentAnchorEl={[Function]}
                                                        id="menu-"
                                                        marginThreshold={16}
                                                        onClose={[Function]}
                                                        onEntering={[Function]}
                                                        open={false}
                                                        transformOrigin={
                                                          Object {
                                                            "horizontal": "left",
                                                            "vertical": "top",
                                                          }
                                                        }
                                                        transitionDuration="auto"
                                                      >
                                                        <WithStyles(Modal)
                                                          BackdropProps={
                                                            Object {
                                                              "invisible": true,
                                                            }
                                                          }
                                                          id="menu-"
                                                          onClose={[Function]}
                                                          open={false}
                                                        >
                                                          <Modal
                                                            BackdropComponent={[Function]}
                                                            BackdropProps={
                                                              Object {
                                                                "invisible": true,
                                                              }
                                                            }
                                                            classes={
                                                              Object {
                                                                "hidden": "MuiModal-hidden-128",
                                                                "root": "MuiModal-root-127",
                                                              }
                                                            }
                                                            closeAfterTransition={false}
                                                            disableAutoFocus={false}
                                                            disableBackdropClick={false}
                                                            disableEnforceFocus={false}
                                                            disableEscapeKeyDown={false}
                                                            disablePortal={false}
                                                            disableRestoreFocus={false}
                                                            hideBackdrop={false}
                                                            id="menu-"
                                                            keepMounted={false}
                                                            manager={
                                                              ModalManager {
                                                                "data": Array [],
                                                                "handleContainerOverflow": true,
                                                                "hideSiblingNodes": true,
                                                                "modals": Array [],
                                                              }
                                                            }
                                                            onClose={[Function]}
                                                            open={false}
                                                          />
                                                        </WithStyles(Modal)>
                                                      </Popover>
                                                    </WithStyles(Popover)>
                                                  </Menu>
                                                </WithStyles(Menu)>
                                              </div>
                                            </SelectInput>
                                          </div>
                                        </InputBase>
                                      </WithFormControlContext(InputBase)>
                                    </WithStyles(WithFormControlContext(InputBase))>
                                  </Input>
                                </WithStyles(Input)>
                              </Select>
                            </WithFormControlContext(Select)>
                          </WithStyles(WithFormControlContext(Select))>
                        </div>
                      </InputContainer>
                    </div>
                    <div>
                      <WithStyles(WithFormControlContext(FormControlLabel))
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            onChange={[Function]}
                          />
                        }
                        label="Allow Trailing Zeros"
                      >
                        <WithFormControlContext(FormControlLabel)
                          classes={
                            Object {
                              "disabled": "MuiFormControlLabel-disabled-133",
                              "label": "MuiFormControlLabel-label-134",
                              "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom-132",
                              "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart-130",
                              "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop-131",
                              "root": "MuiFormControlLabel-root-129",
                            }
                          }
                          control={
                            <WithStyles(Checkbox)
                              checked={false}
                              onChange={[Function]}
                            />
                          }
                          label="Allow Trailing Zeros"
                        >
                          <FormControlLabel
                            classes={
                              Object {
                                "disabled": "MuiFormControlLabel-disabled-133",
                                "label": "MuiFormControlLabel-label-134",
                                "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom-132",
                                "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart-130",
                                "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop-131",
                                "root": "MuiFormControlLabel-root-129",
                              }
                            }
                            control={
                              <WithStyles(Checkbox)
                                checked={false}
                                onChange={[Function]}
                              />
                            }
                            label="Allow Trailing Zeros"
                            labelPlacement="end"
                          >
                            <label
                              className="MuiFormControlLabel-root-129"
                            >
                              <WithStyles(Checkbox)
                                checked={false}
                                onChange={[Function]}
                              >
                                <Checkbox
                                  checked={false}
                                  checkedIcon={<pure(CheckBox) />}
                                  classes={
                                    Object {
                                      "checked": "MuiCheckbox-checked-136",
                                      "colorPrimary": "MuiCheckbox-colorPrimary-139",
                                      "colorSecondary": "MuiCheckbox-colorSecondary-140",
                                      "disabled": "MuiCheckbox-disabled-137",
                                      "indeterminate": "MuiCheckbox-indeterminate-138",
                                      "root": "MuiCheckbox-root-135",
                                    }
                                  }
                                  color="secondary"
                                  icon={<pure(CheckBoxOutlineBlank) />}
                                  indeterminate={false}
                                  indeterminateIcon={<pure(IndeterminateCheckBox) />}
                                  onChange={[Function]}
                                >
                                  <WithStyles(WithFormControlContext(SwitchBase))
                                    checked={false}
                                    checkedIcon={<pure(CheckBox) />}
                                    className=""
                                    classes={
                                      Object {
                                        "checked": "MuiCheckbox-checked-136",
                                        "disabled": "MuiCheckbox-disabled-137",
                                        "root": "MuiCheckbox-root-135 MuiCheckbox-colorSecondary-140",
                                      }
                                    }
                                    icon={<pure(CheckBoxOutlineBlank) />}
                                    inputProps={
                                      Object {
                                        "data-indeterminate": false,
                                      }
                                    }
                                    onChange={[Function]}
                                    type="checkbox"
                                  >
                                    <WithFormControlContext(SwitchBase)
                                      checked={false}
                                      checkedIcon={<pure(CheckBox) />}
                                      className=""
                                      classes={
                                        Object {
                                          "checked": "MuiPrivateSwitchBase-checked-142 MuiCheckbox-checked-136",
                                          "disabled": "MuiPrivateSwitchBase-disabled-143 MuiCheckbox-disabled-137",
                                          "input": "MuiPrivateSwitchBase-input-144",
                                          "root": "MuiPrivateSwitchBase-root-141 MuiCheckbox-root-135 MuiCheckbox-colorSecondary-140",
                                        }
                                      }
                                      icon={<pure(CheckBoxOutlineBlank) />}
                                      inputProps={
                                        Object {
                                          "data-indeterminate": false,
                                        }
                                      }
                                      onChange={[Function]}
                                      type="checkbox"
                                    >
                                      <SwitchBase
                                        checked={false}
                                        checkedIcon={<pure(CheckBox) />}
                                        className=""
                                        classes={
                                          Object {
                                            "checked": "MuiPrivateSwitchBase-checked-142 MuiCheckbox-checked-136",
                                            "disabled": "MuiPrivateSwitchBase-disabled-143 MuiCheckbox-disabled-137",
                                            "input": "MuiPrivateSwitchBase-input-144",
                                            "root": "MuiPrivateSwitchBase-root-141 MuiCheckbox-root-135 MuiCheckbox-colorSecondary-140",
                                          }
                                        }
                                        icon={<pure(CheckBoxOutlineBlank) />}
                                        inputProps={
                                          Object {
                                            "data-indeterminate": false,
                                          }
                                        }
                                        onChange={[Function]}
                                        type="checkbox"
                                      >
                                        <WithStyles(IconButton)
                                          className="MuiPrivateSwitchBase-root-141 MuiCheckbox-root-135 MuiCheckbox-colorSecondary-140"
                                          component="span"
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          tabIndex={null}
                                        >
                                          <IconButton
                                            className="MuiPrivateSwitchBase-root-141 MuiCheckbox-root-135 MuiCheckbox-colorSecondary-140"
                                            classes={
                                              Object {
                                                "colorInherit": "MuiIconButton-colorInherit-146",
                                                "colorPrimary": "MuiIconButton-colorPrimary-147",
                                                "colorSecondary": "MuiIconButton-colorSecondary-148",
                                                "disabled": "MuiIconButton-disabled-149",
                                                "label": "MuiIconButton-label-150",
                                                "root": "MuiIconButton-root-145",
                                              }
                                            }
                                            color="default"
                                            component="span"
                                            disabled={false}
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            tabIndex={null}
                                          >
                                            <WithStyles(ButtonBase)
                                              centerRipple={true}
                                              className="MuiIconButton-root-145 MuiPrivateSwitchBase-root-141 MuiCheckbox-root-135 MuiCheckbox-colorSecondary-140"
                                              component="span"
                                              disabled={false}
                                              focusRipple={true}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              tabIndex={null}
                                            >
                                              <ButtonBase
                                                centerRipple={true}
                                                className="MuiIconButton-root-145 MuiPrivateSwitchBase-root-141 MuiCheckbox-root-135 MuiCheckbox-colorSecondary-140"
                                                classes={
                                                  Object {
                                                    "disabled": "MuiButtonBase-disabled-152",
                                                    "focusVisible": "MuiButtonBase-focusVisible-153",
                                                    "root": "MuiButtonBase-root-151",
                                                  }
                                                }
                                                component="span"
                                                disableRipple={false}
                                                disableTouchRipple={false}
                                                disabled={false}
                                                focusRipple={true}
                                                onBlur={[Function]}
                                                onFocus={[Function]}
                                                tabIndex={null}
                                                type="button"
                                              >
                                                <span
                                                  className="MuiButtonBase-root-151 MuiIconButton-root-145 MuiPrivateSwitchBase-root-141 MuiCheckbox-root-135 MuiCheckbox-colorSecondary-140"
                                                  onBlur={[Function]}
                                                  onContextMenu={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  tabIndex={null}
                                                >
                                                  <span
                                                    className="MuiIconButton-label-150"
                                                  >
                                                    <pure(CheckBoxOutlineBlank)>
                                                      <CheckBoxOutlineBlank>
                                                        <WithStyles(SvgIcon)>
                                                          <SvgIcon
                                                            classes={
                                                              Object {
                                                                "colorAction": "MuiSvgIcon-colorAction-119",
                                                                "colorDisabled": "MuiSvgIcon-colorDisabled-121",
                                                                "colorError": "MuiSvgIcon-colorError-120",
                                                                "colorPrimary": "MuiSvgIcon-colorPrimary-117",
                                                                "colorSecondary": "MuiSvgIcon-colorSecondary-118",
                                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-122",
                                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-124",
                                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-123",
                                                                "root": "MuiSvgIcon-root-116",
                                                              }
                                                            }
                                                            color="inherit"
                                                            component="svg"
                                                            fontSize="default"
                                                            viewBox="0 0 24 24"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              className="MuiSvgIcon-root-116"
                                                              focusable="false"
                                                              role="presentation"
                                                              viewBox="0 0 24 24"
                                                            >
                                                              <path
                                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                              />
                                                            </svg>
                                                          </SvgIcon>
                                                        </WithStyles(SvgIcon)>
                                                      </CheckBoxOutlineBlank>
                                                    </pure(CheckBoxOutlineBlank)>
                                                    <input
                                                      checked={false}
                                                      className="MuiPrivateSwitchBase-input-144"
                                                      data-indeterminate={false}
                                                      onChange={[Function]}
                                                      type="checkbox"
                                                    />
                                                  </span>
                                                  <NoSsr
                                                    defer={false}
                                                    fallback={null}
                                                  >
                                                    <WithStyles(TouchRipple)
                                                      center={true}
                                                      innerRef={[Function]}
                                                    >
                                                      <TouchRipple
                                                        center={true}
                                                        classes={
                                                          Object {
                                                            "child": "MuiTouchRipple-child-215",
                                                            "childLeaving": "MuiTouchRipple-childLeaving-216",
                                                            "childPulsate": "MuiTouchRipple-childPulsate-217",
                                                            "ripple": "MuiTouchRipple-ripple-212",
                                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate-214",
                                                            "rippleVisible": "MuiTouchRipple-rippleVisible-213",
                                                            "root": "MuiTouchRipple-root-211",
                                                          }
                                                        }
                                                      >
                                                        <TransitionGroup
                                                          childFactory={[Function]}
                                                          className="MuiTouchRipple-root-211"
                                                          component="span"
                                                          enter={true}
                                                          exit={true}
                                                        >
                                                          <span
                                                            className="MuiTouchRipple-root-211"
                                                          />
                                                        </TransitionGroup>
                                                      </TouchRipple>
                                                    </WithStyles(TouchRipple)>
                                                  </NoSsr>
                                                </span>
                                              </ButtonBase>
                                            </WithStyles(ButtonBase)>
                                          </IconButton>
                                        </WithStyles(IconButton)>
                                      </SwitchBase>
                                    </WithFormControlContext(SwitchBase)>
                                  </WithStyles(WithFormControlContext(SwitchBase))>
                                </Checkbox>
                              </WithStyles(Checkbox)>
                              <WithStyles(Typography)
                                className="MuiFormControlLabel-label-134"
                                component="span"
                              >
                                <Typography
                                  align="inherit"
                                  className="MuiFormControlLabel-label-134"
                                  classes={
                                    Object {
                                      "alignCenter": "MuiTypography-alignCenter-66",
                                      "alignJustify": "MuiTypography-alignJustify-68",
                                      "alignLeft": "MuiTypography-alignLeft-65",
                                      "alignRight": "MuiTypography-alignRight-67",
                                      "body1": "MuiTypography-body1-52",
                                      "body2": "MuiTypography-body2-51",
                                      "button": "MuiTypography-button-54",
                                      "caption": "MuiTypography-caption-53",
                                      "colorError": "MuiTypography-colorError-77",
                                      "colorInherit": "MuiTypography-colorInherit-72",
                                      "colorPrimary": "MuiTypography-colorPrimary-73",
                                      "colorSecondary": "MuiTypography-colorSecondary-74",
                                      "colorTextPrimary": "MuiTypography-colorTextPrimary-75",
                                      "colorTextSecondary": "MuiTypography-colorTextSecondary-76",
                                      "display1": "MuiTypography-display1-47",
                                      "display2": "MuiTypography-display2-46",
                                      "display3": "MuiTypography-display3-45",
                                      "display4": "MuiTypography-display4-44",
                                      "gutterBottom": "MuiTypography-gutterBottom-70",
                                      "h1": "MuiTypography-h1-55",
                                      "h2": "MuiTypography-h2-56",
                                      "h3": "MuiTypography-h3-57",
                                      "h4": "MuiTypography-h4-58",
                                      "h5": "MuiTypography-h5-59",
                                      "h6": "MuiTypography-h6-60",
                                      "headline": "MuiTypography-headline-48",
                                      "inline": "MuiTypography-inline-78",
                                      "noWrap": "MuiTypography-noWrap-69",
                                      "overline": "MuiTypography-overline-63",
                                      "paragraph": "MuiTypography-paragraph-71",
                                      "root": "MuiTypography-root-43",
                                      "srOnly": "MuiTypography-srOnly-64",
                                      "subheading": "MuiTypography-subheading-50",
                                      "subtitle1": "MuiTypography-subtitle1-61",
                                      "subtitle2": "MuiTypography-subtitle2-62",
                                      "title": "MuiTypography-title-49",
                                    }
                                  }
                                  color="default"
                                  component="span"
                                  gutterBottom={false}
                                  headlineMapping={
                                    Object {
                                      "body1": "p",
                                      "body2": "p",
                                      "display1": "h1",
                                      "display2": "h1",
                                      "display3": "h1",
                                      "display4": "h1",
                                      "h1": "h1",
                                      "h2": "h2",
                                      "h3": "h3",
                                      "h4": "h4",
                                      "h5": "h5",
                                      "h6": "h6",
                                      "headline": "h1",
                                      "subheading": "h3",
                                      "subtitle1": "h6",
                                      "subtitle2": "h6",
                                      "title": "h2",
                                    }
                                  }
                                  inline={false}
                                  noWrap={false}
                                  paragraph={false}
                                  theme={
                                    Object {
                                      "breakpoints": Object {
                                        "between": [Function],
                                        "down": [Function],
                                        "keys": Array [
                                          "xs",
                                          "sm",
                                          "md",
                                          "lg",
                                          "xl",
                                        ],
                                        "only": [Function],
                                        "up": [Function],
                                        "values": Object {
                                          "lg": 1280,
                                          "md": 960,
                                          "sm": 600,
                                          "xl": 1920,
                                          "xs": 0,
                                        },
                                        "width": [Function],
                                      },
                                      "direction": "ltr",
                                      "mixins": Object {
                                        "gutters": [Function],
                                        "toolbar": Object {
                                          "@media (min-width:0px) and (orientation: landscape)": Object {
                                            "minHeight": 48,
                                          },
                                          "@media (min-width:600px)": Object {
                                            "minHeight": 64,
                                          },
                                          "minHeight": 56,
                                        },
                                      },
                                      "overrides": Object {},
                                      "palette": Object {
                                        "action": Object {
                                          "active": "rgba(0, 0, 0, 0.54)",
                                          "disabled": "rgba(0, 0, 0, 0.26)",
                                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                          "hover": "rgba(0, 0, 0, 0.08)",
                                          "hoverOpacity": 0.08,
                                          "selected": "rgba(0, 0, 0, 0.14)",
                                        },
                                        "augmentColor": [Function],
                                        "background": Object {
                                          "default": "#fafafa",
                                          "paper": "#fff",
                                        },
                                        "common": Object {
                                          "black": "#000",
                                          "white": "#fff",
                                        },
                                        "contrastThreshold": 3,
                                        "divider": "rgba(0, 0, 0, 0.12)",
                                        "error": Object {
                                          "contrastText": "#fff",
                                          "dark": "#d32f2f",
                                          "light": "#e57373",
                                          "main": "#f44336",
                                        },
                                        "getContrastText": [Function],
                                        "grey": Object {
                                          "100": "#f5f5f5",
                                          "200": "#eeeeee",
                                          "300": "#e0e0e0",
                                          "400": "#bdbdbd",
                                          "50": "#fafafa",
                                          "500": "#9e9e9e",
                                          "600": "#757575",
                                          "700": "#616161",
                                          "800": "#424242",
                                          "900": "#212121",
                                          "A100": "#d5d5d5",
                                          "A200": "#aaaaaa",
                                          "A400": "#303030",
                                          "A700": "#616161",
                                        },
                                        "primary": Object {
                                          "contrastText": "#fff",
                                          "dark": "#303f9f",
                                          "light": "#7986cb",
                                          "main": "#3f51b5",
                                        },
                                        "secondary": Object {
                                          "contrastText": "#fff",
                                          "dark": "#c51162",
                                          "light": "#ff4081",
                                          "main": "#f50057",
                                        },
                                        "text": Object {
                                          "disabled": "rgba(0, 0, 0, 0.38)",
                                          "hint": "rgba(0, 0, 0, 0.38)",
                                          "primary": "rgba(0, 0, 0, 0.87)",
                                          "secondary": "rgba(0, 0, 0, 0.54)",
                                        },
                                        "tonalOffset": 0.2,
                                        "type": "light",
                                      },
                                      "props": Object {},
                                      "shadows": Array [
                                        "none",
                                        "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                                        "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                                        "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                                        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                      ],
                                      "shape": Object {
                                        "borderRadius": 4,
                                      },
                                      "spacing": Object {
                                        "unit": 8,
                                      },
                                      "transitions": Object {
                                        "create": [Function],
                                        "duration": Object {
                                          "complex": 375,
                                          "enteringScreen": 225,
                                          "leavingScreen": 195,
                                          "short": 250,
                                          "shorter": 200,
                                          "shortest": 150,
                                          "standard": 300,
                                        },
                                        "easing": Object {
                                          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                        },
                                        "getAutoHeightDuration": [Function],
                                      },
                                      "typography": Object {
                                        "body1": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.875rem",
                                          "fontWeight": 400,
                                          "lineHeight": "1.46429em",
                                        },
                                        "body1Next": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.00938em",
                                          "lineHeight": 1.5,
                                        },
                                        "body2": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.875rem",
                                          "fontWeight": 500,
                                          "lineHeight": "1.71429em",
                                        },
                                        "body2Next": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.875rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.01071em",
                                          "lineHeight": 1.5,
                                        },
                                        "button": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.875rem",
                                          "fontWeight": 500,
                                          "textTransform": "uppercase",
                                        },
                                        "buttonNext": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.875rem",
                                          "fontWeight": 500,
                                          "letterSpacing": "0.02857em",
                                          "lineHeight": 1.75,
                                          "textTransform": "uppercase",
                                        },
                                        "caption": Object {
                                          "color": "rgba(0, 0, 0, 0.54)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.75rem",
                                          "fontWeight": 400,
                                          "lineHeight": "1.375em",
                                        },
                                        "captionNext": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.75rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.03333em",
                                          "lineHeight": 1.66,
                                        },
                                        "display1": Object {
                                          "color": "rgba(0, 0, 0, 0.54)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "2.125rem",
                                          "fontWeight": 400,
                                          "lineHeight": "1.20588em",
                                        },
                                        "display2": Object {
                                          "color": "rgba(0, 0, 0, 0.54)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "2.8125rem",
                                          "fontWeight": 400,
                                          "lineHeight": "1.13333em",
                                          "marginLeft": "-.02em",
                                        },
                                        "display3": Object {
                                          "color": "rgba(0, 0, 0, 0.54)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "3.5rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "-.02em",
                                          "lineHeight": "1.30357em",
                                          "marginLeft": "-.02em",
                                        },
                                        "display4": Object {
                                          "color": "rgba(0, 0, 0, 0.54)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "7rem",
                                          "fontWeight": 300,
                                          "letterSpacing": "-.04em",
                                          "lineHeight": "1.14286em",
                                          "marginLeft": "-.04em",
                                        },
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": 14,
                                        "fontWeightLight": 300,
                                        "fontWeightMedium": 500,
                                        "fontWeightRegular": 400,
                                        "h1": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "6rem",
                                          "fontWeight": 300,
                                          "letterSpacing": "-0.01562em",
                                          "lineHeight": 1,
                                        },
                                        "h2": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "3.75rem",
                                          "fontWeight": 300,
                                          "letterSpacing": "-0.00833em",
                                          "lineHeight": 1,
                                        },
                                        "h3": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "3rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0em",
                                          "lineHeight": 1.04,
                                        },
                                        "h4": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "2.125rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.00735em",
                                          "lineHeight": 1.17,
                                        },
                                        "h5": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1.5rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0em",
                                          "lineHeight": 1.33,
                                        },
                                        "h6": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1.25rem",
                                          "fontWeight": 500,
                                          "letterSpacing": "0.0075em",
                                          "lineHeight": 1.6,
                                        },
                                        "headline": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1.5rem",
                                          "fontWeight": 400,
                                          "lineHeight": "1.35417em",
                                        },
                                        "overline": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.75rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.08333em",
                                          "lineHeight": 2.66,
                                          "textTransform": "uppercase",
                                        },
                                        "pxToRem": [Function],
                                        "round": [Function],
                                        "subheading": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1rem",
                                          "fontWeight": 400,
                                          "lineHeight": "1.5em",
                                        },
                                        "subtitle1": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.00938em",
                                          "lineHeight": 1.75,
                                        },
                                        "subtitle2": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.875rem",
                                          "fontWeight": 500,
                                          "letterSpacing": "0.00714em",
                                          "lineHeight": 1.57,
                                        },
                                        "title": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1.3125rem",
                                          "fontWeight": 500,
                                          "lineHeight": "1.16667em",
                                        },
                                        "useNextVariants": false,
                                      },
                                      "zIndex": Object {
                                        "appBar": 1100,
                                        "drawer": 1200,
                                        "mobileStepper": 1000,
                                        "modal": 1300,
                                        "snackbar": 1400,
                                        "tooltip": 1500,
                                      },
                                    }
                                  }
                                >
                                  <span
                                    className="MuiTypography-root-43 MuiTypography-body1-52 MuiFormControlLabel-label-134"
                                  >
                                    Allow Trailing Zeros
                                  </span>
                                </Typography>
                              </WithStyles(Typography)>
                            </label>
                          </FormControlLabel>
                        </WithFormControlContext(FormControlLabel)>
                      </WithStyles(WithFormControlContext(FormControlLabel))>
                      <WithStyles(WithFormControlContext(FormControlLabel))
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            onChange={[Function]}
                          />
                        }
                        label="Ignore Order"
                      >
                        <WithFormControlContext(FormControlLabel)
                          classes={
                            Object {
                              "disabled": "MuiFormControlLabel-disabled-133",
                              "label": "MuiFormControlLabel-label-134",
                              "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom-132",
                              "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart-130",
                              "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop-131",
                              "root": "MuiFormControlLabel-root-129",
                            }
                          }
                          control={
                            <WithStyles(Checkbox)
                              checked={false}
                              onChange={[Function]}
                            />
                          }
                          label="Ignore Order"
                        >
                          <FormControlLabel
                            classes={
                              Object {
                                "disabled": "MuiFormControlLabel-disabled-133",
                                "label": "MuiFormControlLabel-label-134",
                                "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom-132",
                                "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart-130",
                                "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop-131",
                                "root": "MuiFormControlLabel-root-129",
                              }
                            }
                            control={
                              <WithStyles(Checkbox)
                                checked={false}
                                onChange={[Function]}
                              />
                            }
                            label="Ignore Order"
                            labelPlacement="end"
                          >
                            <label
                              className="MuiFormControlLabel-root-129"
                            >
                              <WithStyles(Checkbox)
                                checked={false}
                                onChange={[Function]}
                              >
                                <Checkbox
                                  checked={false}
                                  checkedIcon={<pure(CheckBox) />}
                                  classes={
                                    Object {
                                      "checked": "MuiCheckbox-checked-136",
                                      "colorPrimary": "MuiCheckbox-colorPrimary-139",
                                      "colorSecondary": "MuiCheckbox-colorSecondary-140",
                                      "disabled": "MuiCheckbox-disabled-137",
                                      "indeterminate": "MuiCheckbox-indeterminate-138",
                                      "root": "MuiCheckbox-root-135",
                                    }
                                  }
                                  color="secondary"
                                  icon={<pure(CheckBoxOutlineBlank) />}
                                  indeterminate={false}
                                  indeterminateIcon={<pure(IndeterminateCheckBox) />}
                                  onChange={[Function]}
                                >
                                  <WithStyles(WithFormControlContext(SwitchBase))
                                    checked={false}
                                    checkedIcon={<pure(CheckBox) />}
                                    className=""
                                    classes={
                                      Object {
                                        "checked": "MuiCheckbox-checked-136",
                                        "disabled": "MuiCheckbox-disabled-137",
                                        "root": "MuiCheckbox-root-135 MuiCheckbox-colorSecondary-140",
                                      }
                                    }
                                    icon={<pure(CheckBoxOutlineBlank) />}
                                    inputProps={
                                      Object {
                                        "data-indeterminate": false,
                                      }
                                    }
                                    onChange={[Function]}
                                    type="checkbox"
                                  >
                                    <WithFormControlContext(SwitchBase)
                                      checked={false}
                                      checkedIcon={<pure(CheckBox) />}
                                      className=""
                                      classes={
                                        Object {
                                          "checked": "MuiPrivateSwitchBase-checked-142 MuiCheckbox-checked-136",
                                          "disabled": "MuiPrivateSwitchBase-disabled-143 MuiCheckbox-disabled-137",
                                          "input": "MuiPrivateSwitchBase-input-144",
                                          "root": "MuiPrivateSwitchBase-root-141 MuiCheckbox-root-135 MuiCheckbox-colorSecondary-140",
                                        }
                                      }
                                      icon={<pure(CheckBoxOutlineBlank) />}
                                      inputProps={
                                        Object {
                                          "data-indeterminate": false,
                                        }
                                      }
                                      onChange={[Function]}
                                      type="checkbox"
                                    >
                                      <SwitchBase
                                        checked={false}
                                        checkedIcon={<pure(CheckBox) />}
                                        className=""
                                        classes={
                                          Object {
                                            "checked": "MuiPrivateSwitchBase-checked-142 MuiCheckbox-checked-136",
                                            "disabled": "MuiPrivateSwitchBase-disabled-143 MuiCheckbox-disabled-137",
                                            "input": "MuiPrivateSwitchBase-input-144",
                                            "root": "MuiPrivateSwitchBase-root-141 MuiCheckbox-root-135 MuiCheckbox-colorSecondary-140",
                                          }
                                        }
                                        icon={<pure(CheckBoxOutlineBlank) />}
                                        inputProps={
                                          Object {
                                            "data-indeterminate": false,
                                          }
                                        }
                                        onChange={[Function]}
                                        type="checkbox"
                                      >
                                        <WithStyles(IconButton)
                                          className="MuiPrivateSwitchBase-root-141 MuiCheckbox-root-135 MuiCheckbox-colorSecondary-140"
                                          component="span"
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          tabIndex={null}
                                        >
                                          <IconButton
                                            className="MuiPrivateSwitchBase-root-141 MuiCheckbox-root-135 MuiCheckbox-colorSecondary-140"
                                            classes={
                                              Object {
                                                "colorInherit": "MuiIconButton-colorInherit-146",
                                                "colorPrimary": "MuiIconButton-colorPrimary-147",
                                                "colorSecondary": "MuiIconButton-colorSecondary-148",
                                                "disabled": "MuiIconButton-disabled-149",
                                                "label": "MuiIconButton-label-150",
                                                "root": "MuiIconButton-root-145",
                                              }
                                            }
                                            color="default"
                                            component="span"
                                            disabled={false}
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            tabIndex={null}
                                          >
                                            <WithStyles(ButtonBase)
                                              centerRipple={true}
                                              className="MuiIconButton-root-145 MuiPrivateSwitchBase-root-141 MuiCheckbox-root-135 MuiCheckbox-colorSecondary-140"
                                              component="span"
                                              disabled={false}
                                              focusRipple={true}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              tabIndex={null}
                                            >
                                              <ButtonBase
                                                centerRipple={true}
                                                className="MuiIconButton-root-145 MuiPrivateSwitchBase-root-141 MuiCheckbox-root-135 MuiCheckbox-colorSecondary-140"
                                                classes={
                                                  Object {
                                                    "disabled": "MuiButtonBase-disabled-152",
                                                    "focusVisible": "MuiButtonBase-focusVisible-153",
                                                    "root": "MuiButtonBase-root-151",
                                                  }
                                                }
                                                component="span"
                                                disableRipple={false}
                                                disableTouchRipple={false}
                                                disabled={false}
                                                focusRipple={true}
                                                onBlur={[Function]}
                                                onFocus={[Function]}
                                                tabIndex={null}
                                                type="button"
                                              >
                                                <span
                                                  className="MuiButtonBase-root-151 MuiIconButton-root-145 MuiPrivateSwitchBase-root-141 MuiCheckbox-root-135 MuiCheckbox-colorSecondary-140"
                                                  onBlur={[Function]}
                                                  onContextMenu={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  tabIndex={null}
                                                >
                                                  <span
                                                    className="MuiIconButton-label-150"
                                                  >
                                                    <pure(CheckBoxOutlineBlank)>
                                                      <CheckBoxOutlineBlank>
                                                        <WithStyles(SvgIcon)>
                                                          <SvgIcon
                                                            classes={
                                                              Object {
                                                                "colorAction": "MuiSvgIcon-colorAction-119",
                                                                "colorDisabled": "MuiSvgIcon-colorDisabled-121",
                                                                "colorError": "MuiSvgIcon-colorError-120",
                                                                "colorPrimary": "MuiSvgIcon-colorPrimary-117",
                                                                "colorSecondary": "MuiSvgIcon-colorSecondary-118",
                                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-122",
                                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-124",
                                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-123",
                                                                "root": "MuiSvgIcon-root-116",
                                                              }
                                                            }
                                                            color="inherit"
                                                            component="svg"
                                                            fontSize="default"
                                                            viewBox="0 0 24 24"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              className="MuiSvgIcon-root-116"
                                                              focusable="false"
                                                              role="presentation"
                                                              viewBox="0 0 24 24"
                                                            >
                                                              <path
                                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                              />
                                                            </svg>
                                                          </SvgIcon>
                                                        </WithStyles(SvgIcon)>
                                                      </CheckBoxOutlineBlank>
                                                    </pure(CheckBoxOutlineBlank)>
                                                    <input
                                                      checked={false}
                                                      className="MuiPrivateSwitchBase-input-144"
                                                      data-indeterminate={false}
                                                      onChange={[Function]}
                                                      type="checkbox"
                                                    />
                                                  </span>
                                                  <NoSsr
                                                    defer={false}
                                                    fallback={null}
                                                  >
                                                    <WithStyles(TouchRipple)
                                                      center={true}
                                                      innerRef={[Function]}
                                                    >
                                                      <TouchRipple
                                                        center={true}
                                                        classes={
                                                          Object {
                                                            "child": "MuiTouchRipple-child-215",
                                                            "childLeaving": "MuiTouchRipple-childLeaving-216",
                                                            "childPulsate": "MuiTouchRipple-childPulsate-217",
                                                            "ripple": "MuiTouchRipple-ripple-212",
                                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate-214",
                                                            "rippleVisible": "MuiTouchRipple-rippleVisible-213",
                                                            "root": "MuiTouchRipple-root-211",
                                                          }
                                                        }
                                                      >
                                                        <TransitionGroup
                                                          childFactory={[Function]}
                                                          className="MuiTouchRipple-root-211"
                                                          component="span"
                                                          enter={true}
                                                          exit={true}
                                                        >
                                                          <span
                                                            className="MuiTouchRipple-root-211"
                                                          />
                                                        </TransitionGroup>
                                                      </TouchRipple>
                                                    </WithStyles(TouchRipple)>
                                                  </NoSsr>
                                                </span>
                                              </ButtonBase>
                                            </WithStyles(ButtonBase)>
                                          </IconButton>
                                        </WithStyles(IconButton)>
                                      </SwitchBase>
                                    </WithFormControlContext(SwitchBase)>
                                  </WithStyles(WithFormControlContext(SwitchBase))>
                                </Checkbox>
                              </WithStyles(Checkbox)>
                              <WithStyles(Typography)
                                className="MuiFormControlLabel-label-134"
                                component="span"
                              >
                                <Typography
                                  align="inherit"
                                  className="MuiFormControlLabel-label-134"
                                  classes={
                                    Object {
                                      "alignCenter": "MuiTypography-alignCenter-66",
                                      "alignJustify": "MuiTypography-alignJustify-68",
                                      "alignLeft": "MuiTypography-alignLeft-65",
                                      "alignRight": "MuiTypography-alignRight-67",
                                      "body1": "MuiTypography-body1-52",
                                      "body2": "MuiTypography-body2-51",
                                      "button": "MuiTypography-button-54",
                                      "caption": "MuiTypography-caption-53",
                                      "colorError": "MuiTypography-colorError-77",
                                      "colorInherit": "MuiTypography-colorInherit-72",
                                      "colorPrimary": "MuiTypography-colorPrimary-73",
                                      "colorSecondary": "MuiTypography-colorSecondary-74",
                                      "colorTextPrimary": "MuiTypography-colorTextPrimary-75",
                                      "colorTextSecondary": "MuiTypography-colorTextSecondary-76",
                                      "display1": "MuiTypography-display1-47",
                                      "display2": "MuiTypography-display2-46",
                                      "display3": "MuiTypography-display3-45",
                                      "display4": "MuiTypography-display4-44",
                                      "gutterBottom": "MuiTypography-gutterBottom-70",
                                      "h1": "MuiTypography-h1-55",
                                      "h2": "MuiTypography-h2-56",
                                      "h3": "MuiTypography-h3-57",
                                      "h4": "MuiTypography-h4-58",
                                      "h5": "MuiTypography-h5-59",
                                      "h6": "MuiTypography-h6-60",
                                      "headline": "MuiTypography-headline-48",
                                      "inline": "MuiTypography-inline-78",
                                      "noWrap": "MuiTypography-noWrap-69",
                                      "overline": "MuiTypography-overline-63",
                                      "paragraph": "MuiTypography-paragraph-71",
                                      "root": "MuiTypography-root-43",
                                      "srOnly": "MuiTypography-srOnly-64",
                                      "subheading": "MuiTypography-subheading-50",
                                      "subtitle1": "MuiTypography-subtitle1-61",
                                      "subtitle2": "MuiTypography-subtitle2-62",
                                      "title": "MuiTypography-title-49",
                                    }
                                  }
                                  color="default"
                                  component="span"
                                  gutterBottom={false}
                                  headlineMapping={
                                    Object {
                                      "body1": "p",
                                      "body2": "p",
                                      "display1": "h1",
                                      "display2": "h1",
                                      "display3": "h1",
                                      "display4": "h1",
                                      "h1": "h1",
                                      "h2": "h2",
                                      "h3": "h3",
                                      "h4": "h4",
                                      "h5": "h5",
                                      "h6": "h6",
                                      "headline": "h1",
                                      "subheading": "h3",
                                      "subtitle1": "h6",
                                      "subtitle2": "h6",
                                      "title": "h2",
                                    }
                                  }
                                  inline={false}
                                  noWrap={false}
                                  paragraph={false}
                                  theme={
                                    Object {
                                      "breakpoints": Object {
                                        "between": [Function],
                                        "down": [Function],
                                        "keys": Array [
                                          "xs",
                                          "sm",
                                          "md",
                                          "lg",
                                          "xl",
                                        ],
                                        "only": [Function],
                                        "up": [Function],
                                        "values": Object {
                                          "lg": 1280,
                                          "md": 960,
                                          "sm": 600,
                                          "xl": 1920,
                                          "xs": 0,
                                        },
                                        "width": [Function],
                                      },
                                      "direction": "ltr",
                                      "mixins": Object {
                                        "gutters": [Function],
                                        "toolbar": Object {
                                          "@media (min-width:0px) and (orientation: landscape)": Object {
                                            "minHeight": 48,
                                          },
                                          "@media (min-width:600px)": Object {
                                            "minHeight": 64,
                                          },
                                          "minHeight": 56,
                                        },
                                      },
                                      "overrides": Object {},
                                      "palette": Object {
                                        "action": Object {
                                          "active": "rgba(0, 0, 0, 0.54)",
                                          "disabled": "rgba(0, 0, 0, 0.26)",
                                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                          "hover": "rgba(0, 0, 0, 0.08)",
                                          "hoverOpacity": 0.08,
                                          "selected": "rgba(0, 0, 0, 0.14)",
                                        },
                                        "augmentColor": [Function],
                                        "background": Object {
                                          "default": "#fafafa",
                                          "paper": "#fff",
                                        },
                                        "common": Object {
                                          "black": "#000",
                                          "white": "#fff",
                                        },
                                        "contrastThreshold": 3,
                                        "divider": "rgba(0, 0, 0, 0.12)",
                                        "error": Object {
                                          "contrastText": "#fff",
                                          "dark": "#d32f2f",
                                          "light": "#e57373",
                                          "main": "#f44336",
                                        },
                                        "getContrastText": [Function],
                                        "grey": Object {
                                          "100": "#f5f5f5",
                                          "200": "#eeeeee",
                                          "300": "#e0e0e0",
                                          "400": "#bdbdbd",
                                          "50": "#fafafa",
                                          "500": "#9e9e9e",
                                          "600": "#757575",
                                          "700": "#616161",
                                          "800": "#424242",
                                          "900": "#212121",
                                          "A100": "#d5d5d5",
                                          "A200": "#aaaaaa",
                                          "A400": "#303030",
                                          "A700": "#616161",
                                        },
                                        "primary": Object {
                                          "contrastText": "#fff",
                                          "dark": "#303f9f",
                                          "light": "#7986cb",
                                          "main": "#3f51b5",
                                        },
                                        "secondary": Object {
                                          "contrastText": "#fff",
                                          "dark": "#c51162",
                                          "light": "#ff4081",
                                          "main": "#f50057",
                                        },
                                        "text": Object {
                                          "disabled": "rgba(0, 0, 0, 0.38)",
                                          "hint": "rgba(0, 0, 0, 0.38)",
                                          "primary": "rgba(0, 0, 0, 0.87)",
                                          "secondary": "rgba(0, 0, 0, 0.54)",
                                        },
                                        "tonalOffset": 0.2,
                                        "type": "light",
                                      },
                                      "props": Object {},
                                      "shadows": Array [
                                        "none",
                                        "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                                        "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                                        "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                                        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                      ],
                                      "shape": Object {
                                        "borderRadius": 4,
                                      },
                                      "spacing": Object {
                                        "unit": 8,
                                      },
                                      "transitions": Object {
                                        "create": [Function],
                                        "duration": Object {
                                          "complex": 375,
                                          "enteringScreen": 225,
                                          "leavingScreen": 195,
                                          "short": 250,
                                          "shorter": 200,
                                          "shortest": 150,
                                          "standard": 300,
                                        },
                                        "easing": Object {
                                          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                        },
                                        "getAutoHeightDuration": [Function],
                                      },
                                      "typography": Object {
                                        "body1": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.875rem",
                                          "fontWeight": 400,
                                          "lineHeight": "1.46429em",
                                        },
                                        "body1Next": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.00938em",
                                          "lineHeight": 1.5,
                                        },
                                        "body2": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.875rem",
                                          "fontWeight": 500,
                                          "lineHeight": "1.71429em",
                                        },
                                        "body2Next": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.875rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.01071em",
                                          "lineHeight": 1.5,
                                        },
                                        "button": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.875rem",
                                          "fontWeight": 500,
                                          "textTransform": "uppercase",
                                        },
                                        "buttonNext": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.875rem",
                                          "fontWeight": 500,
                                          "letterSpacing": "0.02857em",
                                          "lineHeight": 1.75,
                                          "textTransform": "uppercase",
                                        },
                                        "caption": Object {
                                          "color": "rgba(0, 0, 0, 0.54)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.75rem",
                                          "fontWeight": 400,
                                          "lineHeight": "1.375em",
                                        },
                                        "captionNext": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.75rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.03333em",
                                          "lineHeight": 1.66,
                                        },
                                        "display1": Object {
                                          "color": "rgba(0, 0, 0, 0.54)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "2.125rem",
                                          "fontWeight": 400,
                                          "lineHeight": "1.20588em",
                                        },
                                        "display2": Object {
                                          "color": "rgba(0, 0, 0, 0.54)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "2.8125rem",
                                          "fontWeight": 400,
                                          "lineHeight": "1.13333em",
                                          "marginLeft": "-.02em",
                                        },
                                        "display3": Object {
                                          "color": "rgba(0, 0, 0, 0.54)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "3.5rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "-.02em",
                                          "lineHeight": "1.30357em",
                                          "marginLeft": "-.02em",
                                        },
                                        "display4": Object {
                                          "color": "rgba(0, 0, 0, 0.54)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "7rem",
                                          "fontWeight": 300,
                                          "letterSpacing": "-.04em",
                                          "lineHeight": "1.14286em",
                                          "marginLeft": "-.04em",
                                        },
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": 14,
                                        "fontWeightLight": 300,
                                        "fontWeightMedium": 500,
                                        "fontWeightRegular": 400,
                                        "h1": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "6rem",
                                          "fontWeight": 300,
                                          "letterSpacing": "-0.01562em",
                                          "lineHeight": 1,
                                        },
                                        "h2": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "3.75rem",
                                          "fontWeight": 300,
                                          "letterSpacing": "-0.00833em",
                                          "lineHeight": 1,
                                        },
                                        "h3": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "3rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0em",
                                          "lineHeight": 1.04,
                                        },
                                        "h4": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "2.125rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.00735em",
                                          "lineHeight": 1.17,
                                        },
                                        "h5": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1.5rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0em",
                                          "lineHeight": 1.33,
                                        },
                                        "h6": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1.25rem",
                                          "fontWeight": 500,
                                          "letterSpacing": "0.0075em",
                                          "lineHeight": 1.6,
                                        },
                                        "headline": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1.5rem",
                                          "fontWeight": 400,
                                          "lineHeight": "1.35417em",
                                        },
                                        "overline": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.75rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.08333em",
                                          "lineHeight": 2.66,
                                          "textTransform": "uppercase",
                                        },
                                        "pxToRem": [Function],
                                        "round": [Function],
                                        "subheading": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1rem",
                                          "fontWeight": 400,
                                          "lineHeight": "1.5em",
                                        },
                                        "subtitle1": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.00938em",
                                          "lineHeight": 1.75,
                                        },
                                        "subtitle2": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.875rem",
                                          "fontWeight": 500,
                                          "letterSpacing": "0.00714em",
                                          "lineHeight": 1.57,
                                        },
                                        "title": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1.3125rem",
                                          "fontWeight": 500,
                                          "lineHeight": "1.16667em",
                                        },
                                        "useNextVariants": false,
                                      },
                                      "zIndex": Object {
                                        "appBar": 1100,
                                        "drawer": 1200,
                                        "mobileStepper": 1000,
                                        "modal": 1300,
                                        "snackbar": 1400,
                                        "tooltip": 1500,
                                      },
                                    }
                                  }
                                >
                                  <span
                                    className="MuiTypography-root-43 MuiTypography-body1-52 MuiFormControlLabel-label-134"
                                  >
                                    Ignore Order
                                  </span>
                                </Typography>
                              </WithStyles(Typography)>
                            </label>
                          </FormControlLabel>
                        </WithFormControlContext(FormControlLabel)>
                      </WithStyles(WithFormControlContext(FormControlLabel))>
                    </div>
                    <div
                      className="Response-inputContainer-5 inputContainer"
                    >
                      <WithStyles(WithFormControlContext(InputLabel))>
                        <WithFormControlContext(InputLabel)
                          classes={
                            Object {
                              "animated": "MuiInputLabel-animated-162",
                              "disabled": "MuiInputLabel-disabled-156",
                              "error": "MuiInputLabel-error-157",
                              "filled": "MuiInputLabel-filled-163",
                              "focused": "MuiInputLabel-focused-155",
                              "formControl": "MuiInputLabel-formControl-159",
                              "marginDense": "MuiInputLabel-marginDense-160",
                              "outlined": "MuiInputLabel-outlined-164",
                              "required": "MuiInputLabel-required-158",
                              "root": "MuiInputLabel-root-154",
                              "shrink": "MuiInputLabel-shrink-161",
                            }
                          }
                        >
                          <InputLabel
                            classes={
                              Object {
                                "animated": "MuiInputLabel-animated-162",
                                "disabled": "MuiInputLabel-disabled-156",
                                "error": "MuiInputLabel-error-157",
                                "filled": "MuiInputLabel-filled-163",
                                "focused": "MuiInputLabel-focused-155",
                                "formControl": "MuiInputLabel-formControl-159",
                                "marginDense": "MuiInputLabel-marginDense-160",
                                "outlined": "MuiInputLabel-outlined-164",
                                "required": "MuiInputLabel-required-158",
                                "root": "MuiInputLabel-root-154",
                                "shrink": "MuiInputLabel-shrink-161",
                              }
                            }
                            disableAnimation={false}
                          >
                            <WithStyles(WithFormControlContext(FormLabel))
                              className="MuiInputLabel-root-154 MuiInputLabel-animated-162"
                              classes={
                                Object {
                                  "disabled": "MuiInputLabel-disabled-156",
                                  "error": "MuiInputLabel-error-157",
                                  "focused": "MuiInputLabel-focused-155",
                                  "required": "MuiInputLabel-required-158",
                                }
                              }
                            >
                              <WithFormControlContext(FormLabel)
                                className="MuiInputLabel-root-154 MuiInputLabel-animated-162"
                                classes={
                                  Object {
                                    "asterisk": "MuiFormLabel-asterisk-171",
                                    "disabled": "MuiFormLabel-disabled-167 MuiInputLabel-disabled-156",
                                    "error": "MuiFormLabel-error-168 MuiInputLabel-error-157",
                                    "filled": "MuiFormLabel-filled-169",
                                    "focused": "MuiFormLabel-focused-166 MuiInputLabel-focused-155",
                                    "required": "MuiFormLabel-required-170 MuiInputLabel-required-158",
                                    "root": "MuiFormLabel-root-165",
                                  }
                                }
                              >
                                <FormLabel
                                  className="MuiInputLabel-root-154 MuiInputLabel-animated-162"
                                  classes={
                                    Object {
                                      "asterisk": "MuiFormLabel-asterisk-171",
                                      "disabled": "MuiFormLabel-disabled-167 MuiInputLabel-disabled-156",
                                      "error": "MuiFormLabel-error-168 MuiInputLabel-error-157",
                                      "filled": "MuiFormLabel-filled-169",
                                      "focused": "MuiFormLabel-focused-166 MuiInputLabel-focused-155",
                                      "required": "MuiFormLabel-required-170 MuiInputLabel-required-158",
                                      "root": "MuiFormLabel-root-165",
                                    }
                                  }
                                  component="label"
                                >
                                  <label
                                    className="MuiFormLabel-root-165 MuiInputLabel-root-154 MuiInputLabel-animated-162"
                                  >
                                    Correct Answer
                                  </label>
                                </FormLabel>
                              </WithFormControlContext(FormLabel)>
                            </WithStyles(WithFormControlContext(FormLabel))>
                          </InputLabel>
                        </WithFormControlContext(InputLabel)>
                      </WithStyles(WithFormControlContext(InputLabel))>
                      <MathToolbar
                        additionalKeys={Array []}
                        allowAnswerBlock={false}
                        autoFocus={false}
                        classNames={
                          Object {
                            "editor": "Response-responseEditor-7 responseEditor",
                            "mathToolbar": "Response-mathToolbar-8 mathToolbar",
                          }
                        }
                        controlledKeypad={true}
                        controlledKeypadMode={false}
                        hideDoneButton={false}
                        keypadMode="8"
                        latex=""
                        noDecimal={false}
                        onAnswerBlockAdd={[Function]}
                        onChange={[Function]}
                        onDone={[Function]}
                        onFocus={[Function]}
                        showKeypad={false}
                      >
                        <WithStyles(RawPureToolbar)
                          additionalKeys={Array []}
                          allowAnswerBlock={false}
                          autoFocus={false}
                          classNames={
                            Object {
                              "editor": "Response-responseEditor-7 responseEditor",
                              "mathToolbar": "Response-mathToolbar-8 mathToolbar",
                            }
                          }
                          controlledKeypad={true}
                          controlledKeypadMode={false}
                          hideDoneButton={false}
                          keypadMode="8"
                          latex=""
                          noDecimal={false}
                          onAnswerBlockAdd={[Function]}
                          onChange={[Function]}
                          onDone={[Function]}
                          onFocus={[Function]}
                          showKeypad={false}
                        >
                          <RawPureToolbar
                            additionalKeys={Array []}
                            allowAnswerBlock={false}
                            autoFocus={false}
                            classNames={
                              Object {
                                "editor": "Response-responseEditor-7 responseEditor",
                                "mathToolbar": "Response-mathToolbar-8 mathToolbar",
                              }
                            }
                            classes={
                              Object {
                                "pureToolbar": "RawPureToolbar-pureToolbar-172",
                              }
                            }
                            controlledKeypad={true}
                            controlledKeypadMode={false}
                            hideDoneButton={false}
                            hideDoneButtonBackground={false}
                            keypadMode="8"
                            latex=""
                            noDecimal={false}
                            onAnswerBlockAdd={[Function]}
                            onChange={[Function]}
                            onDone={[Function]}
                            onFocus={[Function]}
                            showKeypad={false}
                          >
                            <div
                              className="RawPureToolbar-pureToolbar-172"
                            >
                              <div />
                              <WithStyles(EditorAndPad)
                                additionalKeys={Array []}
                                allowAnswerBlock={false}
                                autoFocus={false}
                                classNames={
                                  Object {
                                    "editor": "Response-responseEditor-7 responseEditor",
                                    "mathToolbar": "Response-mathToolbar-8 mathToolbar",
                                  }
                                }
                                controlledKeypad={true}
                                controlledKeypadMode={false}
                                keypadMode="8"
                                latex=""
                                noDecimal={false}
                                onAnswerBlockAdd={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                showKeypad={false}
                              >
                                <EditorAndPad
                                  additionalKeys={Array []}
                                  allowAnswerBlock={false}
                                  autoFocus={false}
                                  classNames={
                                    Object {
                                      "editor": "Response-responseEditor-7 responseEditor",
                                      "mathToolbar": "Response-mathToolbar-8 mathToolbar",
                                    }
                                  }
                                  classes={
                                    Object {
                                      "addAnswerBlockButton": "EditorAndPad-addAnswerBlockButton-178",
                                      "error": "EditorAndPad-error-182",
                                      "hide": "EditorAndPad-hide-174",
                                      "hr": "EditorAndPad-hr-179",
                                      "inputAndTypeContainer": "EditorAndPad-inputAndTypeContainer-173",
                                      "inputContainer": "EditorAndPad-inputContainer-181",
                                      "keyboard": "EditorAndPad-keyboard-183",
                                      "language": "EditorAndPad-language-184",
                                      "longMathEditor": "EditorAndPad-longMathEditor-177",
                                      "mathEditor": "EditorAndPad-mathEditor-176",
                                      "mathToolbar": "EditorAndPad-mathToolbar-180",
                                      "selectContainer": "EditorAndPad-selectContainer-175",
                                    }
                                  }
                                  controlledKeypad={true}
                                  controlledKeypadMode={false}
                                  keypadMode="8"
                                  latex=""
                                  noDecimal={false}
                                  onAnswerBlockAdd={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  showKeypad={false}
                                >
                                  <div
                                    className="EditorAndPad-mathToolbar-180 Response-mathToolbar-8 mathToolbar"
                                  >
                                    <div
                                      className="EditorAndPad-inputAndTypeContainer-173"
                                    >
                                      <div
                                        className="EditorAndPad-inputContainer-181"
                                      >
                                        <WithStyles(Input)
                                          className="EditorAndPad-mathEditor-176 Response-responseEditor-7 responseEditor EditorAndPad-longMathEditor-177"
                                          innerRef={[Function]}
                                          latex=""
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                        >
                                          <Input
                                            className="EditorAndPad-mathEditor-176 Response-responseEditor-7 responseEditor EditorAndPad-longMathEditor-177"
                                            classes={Object {}}
                                            latex=""
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                          >
                                            <span
                                              className="EditorAndPad-mathEditor-176 Response-responseEditor-7 responseEditor EditorAndPad-longMathEditor-177"
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                            />
                                          </Input>
                                        </WithStyles(Input)>
                                      </div>
                                    </div>
                                    <hr
                                      className="EditorAndPad-hr-179"
                                    />
                                  </div>
                                </EditorAndPad>
                              </WithStyles(EditorAndPad)>
                            </div>
                          </RawPureToolbar>
                        </WithStyles(RawPureToolbar)>
                      </MathToolbar>
                    </div>
                    <WithStyles(Button)
                      className="Response-alternateButton-9 alternateButton"
                      onClick={[Function]}
                      type="primary"
                    >
                      <Button
                        className="Response-alternateButton-9 alternateButton"
                        classes={
                          Object {
                            "colorInherit": "MuiButton-colorInherit-206",
                            "contained": "MuiButton-contained-196",
                            "containedPrimary": "MuiButton-containedPrimary-197",
                            "containedSecondary": "MuiButton-containedSecondary-198",
                            "disabled": "MuiButton-disabled-205",
                            "extendedFab": "MuiButton-extendedFab-203",
                            "fab": "MuiButton-fab-202",
                            "flat": "MuiButton-flat-190",
                            "flatPrimary": "MuiButton-flatPrimary-191",
                            "flatSecondary": "MuiButton-flatSecondary-192",
                            "focusVisible": "MuiButton-focusVisible-204",
                            "fullWidth": "MuiButton-fullWidth-210",
                            "label": "MuiButton-label-186",
                            "mini": "MuiButton-mini-207",
                            "outlined": "MuiButton-outlined-193",
                            "outlinedPrimary": "MuiButton-outlinedPrimary-194",
                            "outlinedSecondary": "MuiButton-outlinedSecondary-195",
                            "raised": "MuiButton-raised-199",
                            "raisedPrimary": "MuiButton-raisedPrimary-200",
                            "raisedSecondary": "MuiButton-raisedSecondary-201",
                            "root": "MuiButton-root-185",
                            "sizeLarge": "MuiButton-sizeLarge-209",
                            "sizeSmall": "MuiButton-sizeSmall-208",
                            "text": "MuiButton-text-187",
                            "textPrimary": "MuiButton-textPrimary-188",
                            "textSecondary": "MuiButton-textSecondary-189",
                          }
                        }
                        color="default"
                        component="button"
                        disableFocusRipple={false}
                        disabled={false}
                        fullWidth={false}
                        mini={false}
                        onClick={[Function]}
                        size="medium"
                        type="primary"
                        variant="text"
                      >
                        <WithStyles(ButtonBase)
                          className="MuiButton-root-185 MuiButton-text-187 MuiButton-flat-190 Response-alternateButton-9 alternateButton"
                          component="button"
                          disabled={false}
                          focusRipple={true}
                          focusVisibleClassName="MuiButton-focusVisible-204"
                          onClick={[Function]}
                          type="primary"
                        >
                          <ButtonBase
                            centerRipple={false}
                            className="MuiButton-root-185 MuiButton-text-187 MuiButton-flat-190 Response-alternateButton-9 alternateButton"
                            classes={
                              Object {
                                "disabled": "MuiButtonBase-disabled-152",
                                "focusVisible": "MuiButtonBase-focusVisible-153",
                                "root": "MuiButtonBase-root-151",
                              }
                            }
                            component="button"
                            disableRipple={false}
                            disableTouchRipple={false}
                            disabled={false}
                            focusRipple={true}
                            focusVisibleClassName="MuiButton-focusVisible-204"
                            onClick={[Function]}
                            tabIndex="0"
                            type="primary"
                          >
                            <button
                              className="MuiButtonBase-root-151 MuiButton-root-185 MuiButton-text-187 MuiButton-flat-190 Response-alternateButton-9 alternateButton"
                              disabled={false}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onContextMenu={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              tabIndex="0"
                              type="primary"
                            >
                              <span
                                className="MuiButton-label-186"
                              >
                                ADD ALTERNATE
                              </span>
                              <NoSsr
                                defer={false}
                                fallback={null}
                              >
                                <WithStyles(TouchRipple)
                                  center={false}
                                  innerRef={[Function]}
                                >
                                  <TouchRipple
                                    center={false}
                                    classes={
                                      Object {
                                        "child": "MuiTouchRipple-child-215",
                                        "childLeaving": "MuiTouchRipple-childLeaving-216",
                                        "childPulsate": "MuiTouchRipple-childPulsate-217",
                                        "ripple": "MuiTouchRipple-ripple-212",
                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate-214",
                                        "rippleVisible": "MuiTouchRipple-rippleVisible-213",
                                        "root": "MuiTouchRipple-root-211",
                                      }
                                    }
                                  >
                                    <TransitionGroup
                                      childFactory={[Function]}
                                      className="MuiTouchRipple-root-211"
                                      component="span"
                                      enter={true}
                                      exit={true}
                                    >
                                      <span
                                        className="MuiTouchRipple-root-211"
                                      />
                                    </TransitionGroup>
                                  </TouchRipple>
                                </WithStyles(TouchRipple)>
                              </NoSsr>
                            </button>
                          </ButtonBase>
                        </WithStyles(ButtonBase)>
                      </Button>
                    </WithStyles(Button)>
                  </div>
                </CardContent>
              </WithStyles(CardContent)>
            </div>
          </Paper>
        </WithStyles(Paper)>
      </Card>
    </WithStyles(Card)>
  </Response>
</WithStyles(Response)>
`;
