// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`InlineDropdown render should render in evaluate mode 1`] = `
<WithStyles(UiLayout)
  style={
    Object {
      "display": "undefined",
    }
  }
>
  <WithStyles(Collapsible)
    labels={
      Object {
        "hidden": "Show Teacher Instructions",
        "visible": "Hide Teacher Instructions",
      }
    }
  >
    <WithStyles(PreviewPrompt)
      prompt="Teacher Instructions"
    />
  </WithStyles(Collapsible)>
  <WithStyles(PreviewPrompt)
    prompt="Prompt"
  />
  <WithStyles(CorrectAnswerToggle)
    onToggle={[Function]}
    show={true}
    toggled={false}
  />
  <WithMask
    choices={
      Object {
        "0": Array [
          Object {
            "correct": true,
            "label": "cow ",
            "rationale": "rationale cow",
            "value": "0",
          },
          Object {
            "correct": false,
            "label": "dog ",
            "value": "1",
          },
          Object {
            "correct": false,
            "label": "cat ",
            "value": "2",
          },
        ],
        "1": Array [
          Object {
            "correct": true,
            "label": "over ",
            "rationale": "rationale over",
            "value": "0",
          },
          Object {
            "correct": false,
            "label": "under ",
            "value": "1",
          },
          Object {
            "correct": false,
            "label": "across ",
            "value": "2",
          },
        ],
        "2": Array [
          Object {
            "correct": true,
            "label": "moon ",
            "rationale": "rationale moon",
            "value": "0",
          },
          Object {
            "correct": false,
            "label": "sun",
            "value": "2",
          },
          Object {
            "correct": false,
            "label": "house ",
            "value": "3",
          },
        ],
      }
    }
    classes={Object {}}
    disabled={false}
    feedback={
      Object {
        "0": "correct",
        "1": "correct",
        "2": "correct",
      }
    }
    markup="<div><p>The {{0}} jumped {{1}} the {{2}}</p></div>"
    mode="evaluate"
    onChange={[MockFunction]}
    prompt="Prompt"
    rationale="Rationale"
    showCorrectAnswer={false}
    teacherInstructions="Teacher Instructions"
    value={
      Object {
        "0": "1",
        "1": "0",
        "2": "0",
      }
    }
  />
  <WithStyles(Collapsible)
    labels={
      Object {
        "hidden": "Show Rationale for choices",
        "visible": "Hide Rationale for choices",
      }
    }
  >
    <div
      key="0"
    >
      <div
        key="cow "
      >
        <div
          className="correct"
          dangerouslySetInnerHTML={
            Object {
              "__html": "cow : ",
            }
          }
        />
        <WithStyles(PreviewPrompt)
          prompt="rationale cow"
        />
      </div>
    </div>
    <div
      key="1"
    >
      <div
        key="over "
      >
        <div
          className="correct"
          dangerouslySetInnerHTML={
            Object {
              "__html": "over : ",
            }
          }
        />
        <WithStyles(PreviewPrompt)
          prompt="rationale over"
        />
      </div>
    </div>
    <div
      key="2"
    >
      <div
        key="moon "
      >
        <div
          className="correct"
          dangerouslySetInnerHTML={
            Object {
              "__html": "moon : ",
            }
          }
        />
        <WithStyles(PreviewPrompt)
          prompt="rationale moon"
        />
      </div>
    </div>
  </WithStyles(Collapsible)>
  <WithStyles(Collapsible)
    labels={
      Object {
        "hidden": "Show Rationale",
        "visible": "Hide Rationale",
      }
    }
  >
    <WithStyles(PreviewPrompt)
      prompt="Rationale"
    />
  </WithStyles(Collapsible)>
</WithStyles(UiLayout)>
`;

exports[`InlineDropdown render should render in gather mode 1`] = `
<WithStyles(UiLayout)
  style={
    Object {
      "display": "undefined",
    }
  }
>
  <h2>
    Inline Dropdown Question
  </h2>
  <WithStyles(Collapsible)
    labels={
      Object {
        "hidden": "Show Teacher Instructions",
        "visible": "Hide Teacher Instructions",
      }
    }
  >
    <WithStyles(PreviewPrompt)
      prompt="Teacher Instructions"
    />
  </WithStyles(Collapsible)>
  <WithStyles(PreviewPrompt)
    prompt="Prompt"
  />
  <WithStyles(CorrectAnswerToggle)
    onToggle={[Function]}
    show={false}
    toggled={false}
  />
  <WithMask
    choices={
      Object {
        "0": Array [
          Object {
            "correct": true,
            "label": "cow ",
            "rationale": "rationale cow",
            "value": "0",
          },
          Object {
            "correct": false,
            "label": "dog ",
            "value": "1",
          },
          Object {
            "correct": false,
            "label": "cat ",
            "value": "2",
          },
        ],
        "1": Array [
          Object {
            "correct": true,
            "label": "over ",
            "rationale": "rationale over",
            "value": "0",
          },
          Object {
            "correct": false,
            "label": "under ",
            "value": "1",
          },
          Object {
            "correct": false,
            "label": "across ",
            "value": "2",
          },
        ],
        "2": Array [
          Object {
            "correct": true,
            "label": "moon ",
            "rationale": "rationale moon",
            "value": "0",
          },
          Object {
            "correct": false,
            "label": "sun",
            "value": "2",
          },
          Object {
            "correct": false,
            "label": "house ",
            "value": "3",
          },
        ],
      }
    }
    classes={Object {}}
    disabled={false}
    feedback={
      Object {
        "0": "correct",
        "1": "correct",
        "2": "correct",
      }
    }
    markup="<div><p>The {{0}} jumped {{1}} the {{2}}</p></div>"
    mode="gather"
    onChange={[MockFunction]}
    prompt="Prompt"
    rationale="Rationale"
    showCorrectAnswer={false}
    teacherInstructions="Teacher Instructions"
    value={
      Object {
        "0": "1",
        "1": "0",
        "2": "0",
      }
    }
  />
  <WithStyles(Collapsible)
    labels={
      Object {
        "hidden": "Show Rationale for choices",
        "visible": "Hide Rationale for choices",
      }
    }
  >
    <div
      key="0"
    >
      <div
        key="cow "
      >
        <div
          className="correct"
          dangerouslySetInnerHTML={
            Object {
              "__html": "cow : ",
            }
          }
        />
        <WithStyles(PreviewPrompt)
          prompt="rationale cow"
        />
      </div>
    </div>
    <div
      key="1"
    >
      <div
        key="over "
      >
        <div
          className="correct"
          dangerouslySetInnerHTML={
            Object {
              "__html": "over : ",
            }
          }
        />
        <WithStyles(PreviewPrompt)
          prompt="rationale over"
        />
      </div>
    </div>
    <div
      key="2"
    >
      <div
        key="moon "
      >
        <div
          className="correct"
          dangerouslySetInnerHTML={
            Object {
              "__html": "moon : ",
            }
          }
        />
        <WithStyles(PreviewPrompt)
          prompt="rationale moon"
        />
      </div>
    </div>
  </WithStyles(Collapsible)>
  <WithStyles(Collapsible)
    labels={
      Object {
        "hidden": "Show Rationale",
        "visible": "Hide Rationale",
      }
    }
  >
    <WithStyles(PreviewPrompt)
      prompt="Rationale"
    />
  </WithStyles(Collapsible)>
</WithStyles(UiLayout)>
`;

exports[`InlineDropdown render should render in view mode 1`] = `
<WithStyles(UiLayout)
  style={
    Object {
      "display": "undefined",
    }
  }
>
  <WithStyles(Collapsible)
    labels={
      Object {
        "hidden": "Show Teacher Instructions",
        "visible": "Hide Teacher Instructions",
      }
    }
  >
    <WithStyles(PreviewPrompt)
      prompt="Teacher Instructions"
    />
  </WithStyles(Collapsible)>
  <WithStyles(PreviewPrompt)
    prompt="Prompt"
  />
  <WithStyles(CorrectAnswerToggle)
    onToggle={[Function]}
    show={false}
    toggled={false}
  />
  <WithMask
    choices={
      Object {
        "0": Array [
          Object {
            "correct": true,
            "label": "cow ",
            "rationale": "rationale cow",
            "value": "0",
          },
          Object {
            "correct": false,
            "label": "dog ",
            "value": "1",
          },
          Object {
            "correct": false,
            "label": "cat ",
            "value": "2",
          },
        ],
        "1": Array [
          Object {
            "correct": true,
            "label": "over ",
            "rationale": "rationale over",
            "value": "0",
          },
          Object {
            "correct": false,
            "label": "under ",
            "value": "1",
          },
          Object {
            "correct": false,
            "label": "across ",
            "value": "2",
          },
        ],
        "2": Array [
          Object {
            "correct": true,
            "label": "moon ",
            "rationale": "rationale moon",
            "value": "0",
          },
          Object {
            "correct": false,
            "label": "sun",
            "value": "2",
          },
          Object {
            "correct": false,
            "label": "house ",
            "value": "3",
          },
        ],
      }
    }
    classes={Object {}}
    disabled={false}
    feedback={
      Object {
        "0": "correct",
        "1": "correct",
        "2": "correct",
      }
    }
    markup="<div><p>The {{0}} jumped {{1}} the {{2}}</p></div>"
    mode="view"
    onChange={[MockFunction]}
    prompt="Prompt"
    rationale="Rationale"
    showCorrectAnswer={false}
    teacherInstructions="Teacher Instructions"
    value={
      Object {
        "0": "1",
        "1": "0",
        "2": "0",
      }
    }
  />
  <WithStyles(Collapsible)
    labels={
      Object {
        "hidden": "Show Rationale for choices",
        "visible": "Hide Rationale for choices",
      }
    }
  >
    <div
      key="0"
    >
      <div
        key="cow "
      >
        <div
          className="correct"
          dangerouslySetInnerHTML={
            Object {
              "__html": "cow : ",
            }
          }
        />
        <WithStyles(PreviewPrompt)
          prompt="rationale cow"
        />
      </div>
    </div>
    <div
      key="1"
    >
      <div
        key="over "
      >
        <div
          className="correct"
          dangerouslySetInnerHTML={
            Object {
              "__html": "over : ",
            }
          }
        />
        <WithStyles(PreviewPrompt)
          prompt="rationale over"
        />
      </div>
    </div>
    <div
      key="2"
    >
      <div
        key="moon "
      >
        <div
          className="correct"
          dangerouslySetInnerHTML={
            Object {
              "__html": "moon : ",
            }
          }
        />
        <WithStyles(PreviewPrompt)
          prompt="rationale moon"
        />
      </div>
    </div>
  </WithStyles(Collapsible)>
  <WithStyles(Collapsible)
    labels={
      Object {
        "hidden": "Show Rationale",
        "visible": "Hide Rationale",
      }
    }
  >
    <WithStyles(PreviewPrompt)
      prompt="Rationale"
    />
  </WithStyles(Collapsible)>
</WithStyles(UiLayout)>
`;

exports[`InlineDropdown render should render without prompt 1`] = `
<WithStyles(UiLayout)
  style={
    Object {
      "display": "undefined",
    }
  }
>
  <h2>
    Inline Dropdown Question
  </h2>
  <WithStyles(Collapsible)
    labels={
      Object {
        "hidden": "Show Teacher Instructions",
        "visible": "Hide Teacher Instructions",
      }
    }
  >
    <WithStyles(PreviewPrompt)
      prompt="Teacher Instructions"
    />
  </WithStyles(Collapsible)>
  <WithStyles(CorrectAnswerToggle)
    onToggle={[Function]}
    show={false}
    toggled={false}
  />
  <WithMask
    choices={
      Object {
        "0": Array [
          Object {
            "correct": true,
            "label": "cow ",
            "rationale": "rationale cow",
            "value": "0",
          },
          Object {
            "correct": false,
            "label": "dog ",
            "value": "1",
          },
          Object {
            "correct": false,
            "label": "cat ",
            "value": "2",
          },
        ],
        "1": Array [
          Object {
            "correct": true,
            "label": "over ",
            "rationale": "rationale over",
            "value": "0",
          },
          Object {
            "correct": false,
            "label": "under ",
            "value": "1",
          },
          Object {
            "correct": false,
            "label": "across ",
            "value": "2",
          },
        ],
        "2": Array [
          Object {
            "correct": true,
            "label": "moon ",
            "rationale": "rationale moon",
            "value": "0",
          },
          Object {
            "correct": false,
            "label": "sun",
            "value": "2",
          },
          Object {
            "correct": false,
            "label": "house ",
            "value": "3",
          },
        ],
      }
    }
    classes={Object {}}
    disabled={false}
    feedback={
      Object {
        "0": "correct",
        "1": "correct",
        "2": "correct",
      }
    }
    markup="<div><p>The {{0}} jumped {{1}} the {{2}}</p></div>"
    mode="gather"
    onChange={[MockFunction]}
    prompt={null}
    rationale="Rationale"
    showCorrectAnswer={false}
    teacherInstructions="Teacher Instructions"
    value={
      Object {
        "0": "1",
        "1": "0",
        "2": "0",
      }
    }
  />
  <WithStyles(Collapsible)
    labels={
      Object {
        "hidden": "Show Rationale for choices",
        "visible": "Hide Rationale for choices",
      }
    }
  >
    <div
      key="0"
    >
      <div
        key="cow "
      >
        <div
          className="correct"
          dangerouslySetInnerHTML={
            Object {
              "__html": "cow : ",
            }
          }
        />
        <WithStyles(PreviewPrompt)
          prompt="rationale cow"
        />
      </div>
    </div>
    <div
      key="1"
    >
      <div
        key="over "
      >
        <div
          className="correct"
          dangerouslySetInnerHTML={
            Object {
              "__html": "over : ",
            }
          }
        />
        <WithStyles(PreviewPrompt)
          prompt="rationale over"
        />
      </div>
    </div>
    <div
      key="2"
    >
      <div
        key="moon "
      >
        <div
          className="correct"
          dangerouslySetInnerHTML={
            Object {
              "__html": "moon : ",
            }
          }
        />
        <WithStyles(PreviewPrompt)
          prompt="rationale moon"
        />
      </div>
    </div>
  </WithStyles(Collapsible)>
  <WithStyles(Collapsible)
    labels={
      Object {
        "hidden": "Show Rationale",
        "visible": "Hide Rationale",
      }
    }
  >
    <WithStyles(PreviewPrompt)
      prompt="Rationale"
    />
  </WithStyles(Collapsible)>
</WithStyles(UiLayout)>
`;

exports[`InlineDropdown render should render without rationale 1`] = `
<WithStyles(UiLayout)
  style={
    Object {
      "display": "undefined",
    }
  }
>
  <h2>
    Inline Dropdown Question
  </h2>
  <WithStyles(Collapsible)
    labels={
      Object {
        "hidden": "Show Teacher Instructions",
        "visible": "Hide Teacher Instructions",
      }
    }
  >
    <WithStyles(PreviewPrompt)
      prompt="Teacher Instructions"
    />
  </WithStyles(Collapsible)>
  <WithStyles(PreviewPrompt)
    prompt="Prompt"
  />
  <WithStyles(CorrectAnswerToggle)
    onToggle={[Function]}
    show={false}
    toggled={false}
  />
  <WithMask
    choices={
      Object {
        "0": Array [
          Object {
            "correct": true,
            "label": "cow ",
            "rationale": "rationale cow",
            "value": "0",
          },
          Object {
            "correct": false,
            "label": "dog ",
            "value": "1",
          },
          Object {
            "correct": false,
            "label": "cat ",
            "value": "2",
          },
        ],
        "1": Array [
          Object {
            "correct": true,
            "label": "over ",
            "rationale": "rationale over",
            "value": "0",
          },
          Object {
            "correct": false,
            "label": "under ",
            "value": "1",
          },
          Object {
            "correct": false,
            "label": "across ",
            "value": "2",
          },
        ],
        "2": Array [
          Object {
            "correct": true,
            "label": "moon ",
            "rationale": "rationale moon",
            "value": "0",
          },
          Object {
            "correct": false,
            "label": "sun",
            "value": "2",
          },
          Object {
            "correct": false,
            "label": "house ",
            "value": "3",
          },
        ],
      }
    }
    classes={Object {}}
    disabled={false}
    feedback={
      Object {
        "0": "correct",
        "1": "correct",
        "2": "correct",
      }
    }
    markup="<div><p>The {{0}} jumped {{1}} the {{2}}</p></div>"
    mode="gather"
    onChange={[MockFunction]}
    prompt="Prompt"
    rationale={null}
    showCorrectAnswer={false}
    teacherInstructions="Teacher Instructions"
    value={
      Object {
        "0": "1",
        "1": "0",
        "2": "0",
      }
    }
  />
  <WithStyles(Collapsible)
    labels={
      Object {
        "hidden": "Show Rationale for choices",
        "visible": "Hide Rationale for choices",
      }
    }
  >
    <div
      key="0"
    >
      <div
        key="cow "
      >
        <div
          className="correct"
          dangerouslySetInnerHTML={
            Object {
              "__html": "cow : ",
            }
          }
        />
        <WithStyles(PreviewPrompt)
          prompt="rationale cow"
        />
      </div>
    </div>
    <div
      key="1"
    >
      <div
        key="over "
      >
        <div
          className="correct"
          dangerouslySetInnerHTML={
            Object {
              "__html": "over : ",
            }
          }
        />
        <WithStyles(PreviewPrompt)
          prompt="rationale over"
        />
      </div>
    </div>
    <div
      key="2"
    >
      <div
        key="moon "
      >
        <div
          className="correct"
          dangerouslySetInnerHTML={
            Object {
              "__html": "moon : ",
            }
          }
        />
        <WithStyles(PreviewPrompt)
          prompt="rationale moon"
        />
      </div>
    </div>
  </WithStyles(Collapsible)>
</WithStyles(UiLayout)>
`;

exports[`InlineDropdown render should render without teacher instructions 1`] = `
<WithStyles(UiLayout)
  style={
    Object {
      "display": "undefined",
    }
  }
>
  <h2>
    Inline Dropdown Question
  </h2>
  <WithStyles(PreviewPrompt)
    prompt="Prompt"
  />
  <WithStyles(CorrectAnswerToggle)
    onToggle={[Function]}
    show={false}
    toggled={false}
  />
  <WithMask
    choices={
      Object {
        "0": Array [
          Object {
            "correct": true,
            "label": "cow ",
            "rationale": "rationale cow",
            "value": "0",
          },
          Object {
            "correct": false,
            "label": "dog ",
            "value": "1",
          },
          Object {
            "correct": false,
            "label": "cat ",
            "value": "2",
          },
        ],
        "1": Array [
          Object {
            "correct": true,
            "label": "over ",
            "rationale": "rationale over",
            "value": "0",
          },
          Object {
            "correct": false,
            "label": "under ",
            "value": "1",
          },
          Object {
            "correct": false,
            "label": "across ",
            "value": "2",
          },
        ],
        "2": Array [
          Object {
            "correct": true,
            "label": "moon ",
            "rationale": "rationale moon",
            "value": "0",
          },
          Object {
            "correct": false,
            "label": "sun",
            "value": "2",
          },
          Object {
            "correct": false,
            "label": "house ",
            "value": "3",
          },
        ],
      }
    }
    classes={Object {}}
    disabled={false}
    feedback={
      Object {
        "0": "correct",
        "1": "correct",
        "2": "correct",
      }
    }
    markup="<div><p>The {{0}} jumped {{1}} the {{2}}</p></div>"
    mode="gather"
    onChange={[MockFunction]}
    prompt="Prompt"
    rationale="Rationale"
    showCorrectAnswer={false}
    teacherInstructions={null}
    value={
      Object {
        "0": "1",
        "1": "0",
        "2": "0",
      }
    }
  />
  <WithStyles(Collapsible)
    labels={
      Object {
        "hidden": "Show Rationale for choices",
        "visible": "Hide Rationale for choices",
      }
    }
  >
    <div
      key="0"
    >
      <div
        key="cow "
      >
        <div
          className="correct"
          dangerouslySetInnerHTML={
            Object {
              "__html": "cow : ",
            }
          }
        />
        <WithStyles(PreviewPrompt)
          prompt="rationale cow"
        />
      </div>
    </div>
    <div
      key="1"
    >
      <div
        key="over "
      >
        <div
          className="correct"
          dangerouslySetInnerHTML={
            Object {
              "__html": "over : ",
            }
          }
        />
        <WithStyles(PreviewPrompt)
          prompt="rationale over"
        />
      </div>
    </div>
    <div
      key="2"
    >
      <div
        key="moon "
      >
        <div
          className="correct"
          dangerouslySetInnerHTML={
            Object {
              "__html": "moon : ",
            }
          }
        />
        <WithStyles(PreviewPrompt)
          prompt="rationale moon"
        />
      </div>
    </div>
  </WithStyles(Collapsible)>
  <WithStyles(Collapsible)
    labels={
      Object {
        "hidden": "Show Rationale",
        "visible": "Hide Rationale",
      }
    }
  >
    <WithStyles(PreviewPrompt)
      prompt="Rationale"
    />
  </WithStyles(Collapsible)>
</WithStyles(UiLayout)>
`;
