// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Placement Ordering snapshot renders all default items 1`] = `
<ConfigLayout
  settings={
    <Panel
      configuration={
        Object {
          "choiceLabel": Object {
            "enabled": true,
            "label": "Choice label",
            "settings": true,
          },
          "choices": Object {
            "label": "Choices",
            "settings": true,
          },
          "enableImages": Object {
            "label": "Enable Images",
            "settings": true,
          },
          "feedback": Object {
            "enabled": true,
            "label": "Feedback",
            "settings": true,
          },
          "lockChoiceOrder": Object {
            "label": "Lock Choice Order",
            "settings": true,
          },
          "numberedGuides": Object {
            "label": "Numbered guides",
            "settings": true,
          },
          "orientation": Object {
            "label": "Orientation",
            "settings": true,
          },
          "partialScoring": Object {
            "label": "Allow Partial Scoring",
            "settings": true,
          },
          "placementArea": Object {
            "label": "Placement Area",
            "settings": true,
          },
          "prompt": Object {
            "label": "Item Stem",
            "settings": true,
          },
          "rationale": Object {
            "label": "Rationale",
            "settings": true,
          },
          "removeTilesAfterPlacing": Object {
            "label": "Remove Tiles after placing",
            "settings": false,
          },
          "scoringType": Object {
            "label": "Scoring Type",
            "settings": false,
          },
          "studentInstructions": Object {
            "label": "Student Instructions",
            "settings": false,
          },
          "targetLabel": Object {
            "label": "Target label",
            "settings": true,
          },
          "teacherInstructions": Object {
            "label": "Teacher Instructions",
            "settings": true,
          },
        }
      }
      groups={
        Object {
          "Properties": Object {
            "promptEnabled": undefined,
            "rationaleEnabled": undefined,
            "scoringType": false,
            "studentInstructionsEnabled": false,
            "teacherInstructionsEnabled": undefined,
          },
          "Settings": Object {
            "choiceLabel.enabled": undefined,
            "enableImages": undefined,
            "feedback.enabled": undefined,
            "lockChoiceOrder": undefined,
            "numberedGuides": false,
            "orientation": undefined,
            "partialScoring": undefined,
            "placementArea": undefined,
            "removeTilesAfterPlacing": false,
          },
        }
      }
      model={
        Object {
          "choiceLabel": "Choice Label goes here",
          "choices": Array [
            Object {
              "id": "c1",
              "label": "Choice 1",
            },
          ],
          "enableImages": false,
          "lockChoiceOrder": false,
          "numberedGuides": false,
          "orientation": "vertical",
          "partialScoring": true,
          "placementArea": false,
          "prompt": "Item Stem goes here",
          "promptEnabled": true,
          "rationaleEnabled": false,
          "removeTilesAfterPlacing": true,
          "scoringType": "auto",
          "studentInstructionsEnabled": false,
          "targetLabel": "Target Label goes here",
          "teacherInstructionsEnabled": false,
        }
      }
      onChangeConfiguration={[Function]}
      onChangeModel={[Function]}
    />
  }
>
  <FormSection
    label="Ordering"
  >
    <InputContainer
      label="ITEM STEM"
    >
      <EditableHtml
        markup="Item Stem goes here"
        onChange={[Function]}
      />
    </InputContainer>
  </FormSection>
  <FormSection
    label="Define Choices"
  >
    <div>
      <InputContainer
        label="CHOICE LABEL"
      >
        <EditableHtml
          markup="Choice Label goes here"
          onChange={[Function]}
        />
      </InputContainer>
    </div>
    <InputContainer
      label="CHOICES"
    >
      <WithStyles(ChoiceEditor)
        choices={
          Array [
            Object {
              "id": "c1",
              "label": "Choice 1",
            },
          ]
        }
        disableImages={true}
        onChange={[Function]}
      />
    </InputContainer>
  </FormSection>
  <FeedbackConfig
    onChange={[Function]}
  />
</ConfigLayout>
`;

exports[`Placement Ordering snapshot renders custom items 1`] = `
<ConfigLayout
  settings={
    <Panel
      configuration={
        Object {
          "choiceLabel": Object {
            "enabled": true,
            "label": "Choice label",
            "settings": true,
          },
          "choices": Object {
            "label": "Choices",
            "settings": true,
          },
          "enableImages": Object {
            "label": "Enable Images",
            "settings": true,
          },
          "feedback": Object {
            "enabled": true,
            "label": "Feedback",
            "settings": true,
          },
          "lockChoiceOrder": Object {
            "label": "Lock Choice Order",
            "settings": true,
          },
          "numberedGuides": Object {
            "label": "Numbered guides",
            "settings": true,
          },
          "orientation": Object {
            "label": "Orientation",
            "settings": true,
          },
          "partialScoring": Object {
            "label": "Allow Partial Scoring",
            "settings": true,
          },
          "placementArea": Object {
            "label": "Placement Area",
            "settings": true,
          },
          "prompt": Object {
            "label": "Item Stem",
            "settings": false,
          },
          "rationale": Object {
            "label": "Rationale",
            "settings": true,
          },
          "removeTilesAfterPlacing": Object {
            "label": "Remove Tiles after placing",
            "settings": true,
          },
          "scoringType": Object {
            "label": "Scoring Type",
            "settings": false,
          },
          "studentInstructions": Object {
            "label": "Student Instructions",
            "settings": false,
          },
          "targetLabel": Object {
            "label": "Target label",
            "settings": true,
          },
          "teacherInstructions": Object {
            "label": "Teacher Instructions",
            "settings": true,
          },
        }
      }
      groups={
        Object {
          "Properties": Object {
            "promptEnabled": false,
            "rationaleEnabled": undefined,
            "scoringType": false,
            "studentInstructionsEnabled": false,
            "teacherInstructionsEnabled": undefined,
          },
          "Settings": Object {
            "choiceLabel.enabled": undefined,
            "enableImages": undefined,
            "feedback.enabled": undefined,
            "lockChoiceOrder": undefined,
            "numberedGuides": false,
            "orientation": undefined,
            "partialScoring": undefined,
            "placementArea": undefined,
            "removeTilesAfterPlacing": undefined,
          },
        }
      }
      model={
        Object {
          "choiceLabel": "Choice Label goes here",
          "choices": Array [
            Object {
              "id": "c1",
              "label": "Choice 1",
            },
          ],
          "enableImages": false,
          "lockChoiceOrder": false,
          "numberedGuides": false,
          "orientation": "vertical",
          "partialScoring": true,
          "placementArea": false,
          "prompt": "Item Stem goes here",
          "promptEnabled": true,
          "rationaleEnabled": false,
          "removeTilesAfterPlacing": true,
          "scoringType": "auto",
          "studentInstructionsEnabled": false,
          "targetLabel": "Target Label goes here",
          "teacherInstructionsEnabled": false,
        }
      }
      onChangeConfiguration={[Function]}
      onChangeModel={[Function]}
    />
  }
>
  <FormSection
    label="Ordering"
  >
    <InputContainer
      label="ITEM STEM"
    >
      <EditableHtml
        markup="Item Stem goes here"
        onChange={[Function]}
      />
    </InputContainer>
  </FormSection>
  <FormSection
    label="Define Choices"
  >
    <div>
      <InputContainer
        label="CHOICE LABEL"
      >
        <EditableHtml
          markup="Choice Label goes here"
          onChange={[Function]}
        />
      </InputContainer>
    </div>
    <InputContainer
      label="CHOICES"
    >
      <WithStyles(ChoiceEditor)
        choices={
          Array [
            Object {
              "id": "c1",
              "label": "Choice 1",
            },
          ]
        }
        disableImages={true}
        onChange={[Function]}
      />
    </InputContainer>
  </FormSection>
  <FeedbackConfig
    onChange={[Function]}
  />
</ConfigLayout>
`;
