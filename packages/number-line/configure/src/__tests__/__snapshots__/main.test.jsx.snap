// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`main snapshot renders 1`] = `
<ConfigLayout
  dimensions={Object {}}
  hideSettings={true}
  settings={null}
>
  <WithStyles(Typography)
    component="div"
    type="body1"
  >
    Number line questions involve plotting points or other objects. To create one, first set up the number line, then select the plotting tools students will be offered and use them to define the correct answer.
  </WithStyles(Typography)>
  <Component
    label="Teacher Instructions"
  >
    <EditableHtml
      allowValidation={false}
      disableUnderline={true}
      languageCharactersProps={
        Array [
          Object {
            "language": "spanish",
          },
          Object {
            "language": "special",
          },
        ]
      }
      mathMlOptions={
        Object {
          "mmlEditing": false,
          "mmlOutput": false,
        }
      }
      nonEmpty={false}
      onChange={[Function]}
      onDone={[Function]}
      toolbarOpts={
        Object {
          "position": "bottom",
        }
      }
    />
  </Component>
  <Component
    label="Item Stem"
  >
    <EditableHtml
      allowValidation={false}
      disableUnderline={true}
      languageCharactersProps={
        Array [
          Object {
            "language": "spanish",
          },
          Object {
            "language": "special",
          },
        ]
      }
      mathMlOptions={
        Object {
          "mmlEditing": false,
          "mmlOutput": false,
        }
      }
      nonEmpty={false}
      onChange={[Function]}
      onDone={[Function]}
      toolbarOpts={
        Object {
          "position": "bottom",
        }
      }
    />
  </Component>
  <WithStyles(CardBar)
    header="Set Up Number Line"
    info={
      <WithStyles(Tooltip)
        classes={
          Object {
            "tooltip": undefined,
          }
        }
        disableFocusListener={true}
        disableTouchListener={true}
        placement="right"
        title="Validation requirements:
The correct answer should include at least one number line object."
      >
        <pure(InfoIcon)
          color="primary"
          fontSize="small"
          style={
            Object {
              "marginLeft": "8px",
            }
          }
        />
      </WithStyles(Tooltip)>
    }
  >
    Set up the number line by entering the domain and number of tick marks to display. Labels on the number line can be edited or removed by clicking on the label.
  </WithStyles(CardBar)>
  <div>
    <WithStyles(Domain)
      domain={
        Object {
          "max": 1,
          "min": -1,
        }
      }
      errors={Object {}}
      onChange={[Function]}
    />
  </div>
  <div>
    <FormSection>
      <WithStyles(Ticks)
        data={
          Object {
            "majorValues": Object {
              "decimal": Array [
                0.125,
                0.25,
                0.5,
                1,
              ],
              "fraction": Array [
                "1/8",
                "1/4",
                "1/2",
                "1",
              ],
              "rounded": Array [
                0.125,
                0.25,
                0.5,
                1,
              ],
            },
            "minorLimits": Object {
              "max": 0.8,
              "min": 0.04,
            },
            "minorValues": Object {
              "decimal": Array [
                0.04,
                0.05,
                0.0625,
                0.06666666666666667,
                0.08333333333333333,
                0.1,
                0.1111111111111111,
                0.125,
                0.14285714285714285,
                0.16666666666666666,
                0.2,
                0.25,
                0.3333333333333333,
                0.5,
              ],
              "fraction": Array [
                "1/25",
                "1/20",
                "1/16",
                "1/15",
                "1/12",
                "1/10",
                "1/9",
                "1/8",
                "1/7",
                "1/6",
                "1/5",
                "1/4",
                "1/3",
                "1/2",
              ],
              "rounded": Array [
                0.04,
                0.05,
                0.063,
                0.067,
                0.083,
                0.1,
                0.111,
                0.125,
                0.143,
                0.167,
                0.2,
                0.25,
                0.333,
                0.5,
              ],
            },
          }
        }
        onChange={[Function]}
        ticksModel={
          Object {
            "decimalLabel": 0.5,
            "decimalTick": 0.125,
            "fractionLabel": "1/2",
            "fractionTick": "1/8",
            "integerTick": 1,
            "tickIntervalType": "Fraction",
          }
        }
      />
    </FormSection>
  </div>
  <div>
    <div />
    <WithStyles(Arrows)
      arrows={
        Object {
          "left": true,
          "right": true,
        }
      }
      onChange={[Function]}
    />
  </div>
  <Jss(NumberLine)
    model={
      Object {
        "correctResponse": undefined,
        "disabled": true,
        "feedback": undefined,
        "graph": Object {
          "arrows": Object {
            "left": true,
            "right": true,
          },
          "availableTypes": Object {
            "PF": true,
          },
          "disabled": true,
          "domain": Object {
            "max": 1,
            "min": -1,
          },
          "exhibitOnly": false,
          "initialElements": Array [],
          "initialType": "PF",
          "maxNumberOfPoints": 1,
          "ticks": Object {
            "labelStep": "1/2",
            "major": 0.5,
            "minor": 0.125,
            "tickIntervalType": "Fraction",
            "tickStep": "1/8",
          },
          "title": undefined,
          "toolbarEditorPosition": "bottom",
          "width": 500,
        },
        "prompt": undefined,
        "teacherInstructions": undefined,
      }
    }
    onAddElement={[Function]}
    onClearElements={[Function]}
    onDeleteElements={[Function]}
    onMoveElement={[Function]}
    onUndoElement={[Function]}
  />
  <FormSection
    label="Title"
  >
    <EditableHtml
      activePlugins={
        Array [
          "bold",
          "html",
          "italic",
          "underline",
          "strikethrough",
          "image",
          "math",
          "languageCharacters",
          "responseArea",
        ]
      }
      allowValidation={false}
      languageCharactersProps={
        Array [
          Object {
            "language": "spanish",
          },
          Object {
            "language": "special",
          },
        ]
      }
      markup=""
      mathMlOptions={
        Object {
          "mmlEditing": false,
          "mmlOutput": false,
        }
      }
      onChange={[Function]}
      onDone={[Function]}
      toolbarOpts={
        Object {
          "position": "bottom",
        }
      }
    />
  </FormSection>
  <WithStyles(CardBar)
    header="Define Tool Set and Correct Response"
  >
    Select answer type and place it on the number line. Intersecting points, line segments and/or rays will appear above the number line. 
    <i>
      Note: A maximum of 20 points, line segments or rays may be plotted.
    </i>
  </WithStyles(CardBar)>
  <WithStyles(CardBar)
    header="Available Tools"
    mini={true}
  >
    Click on the input options to be displayed to the students. All inputs will display by default.
  </WithStyles(CardBar)>
  <div>
    <WithStyles(PointConfig)
      availableTools={
        Array [
          "PF",
          "LFF",
          "LEF",
          "LFE",
          "LEE",
          "RFN",
          "RFP",
          "REN",
          "REP",
        ]
      }
      hideButtons={false}
      onSelectionChange={[Function]}
      selection={
        Object {
          "PF": true,
        }
      }
    />
  </div>
  <FormSection>
    <label>
      Max No of Elements
    </label>
    <WithStyles(NumberTextField)
      max={10}
      min={1}
      onChange={[Function]}
      onlyIntegersAllowed={true}
      value={1}
    />
  </FormSection>
  <label>
    Correct Answer
  </label>
  <Jss(NumberLine)
    answer={Array []}
    model={
      Object {
        "correctResponse": undefined,
        "feedback": undefined,
        "graph": Object {
          "arrows": Object {
            "left": true,
            "right": true,
          },
          "availableTypes": Object {
            "PF": true,
          },
          "disabled": true,
          "domain": Object {
            "max": 1,
            "min": -1,
          },
          "exhibitOnly": false,
          "initialElements": Array [],
          "initialType": "PF",
          "maxNumberOfPoints": 1,
          "ticks": Object {
            "labelStep": "1/2",
            "major": 0.5,
            "minor": 0.125,
            "tickIntervalType": "Fraction",
            "tickStep": "1/8",
          },
          "title": undefined,
          "toolbarEditorPosition": "bottom",
          "width": 500,
        },
        "prompt": undefined,
        "teacherInstructions": undefined,
      }
    }
    onAddElement={[Function]}
    onClearElements={[Function]}
    onDeleteElements={[Function]}
    onMoveElement={[Function]}
    onUndoElement={[Function]}
  />
  <Component
    onConfirm={[Function]}
    open={false}
    text=""
    title="Warning"
  />
  <Component
    onClose={[Function]}
    onCloseText="Cancel"
    onConfirm={[Function]}
    onConfirmText="OK"
    open={false}
    text=""
    title="Warning"
  />
</ConfigLayout>
`;
